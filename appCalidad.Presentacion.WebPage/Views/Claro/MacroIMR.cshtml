
@{
     ViewBag.Title = "MacroIMR";
     Layout = "~/Views/Shared/_ImageUpload.cshtml";
}

<div id="app">
    <div class="containerClaro">
        <template v-if="TOTAL_IMR>0">
            <div class="row">
                <div class="col-xs-12 col-sm-4">
                    <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                        <div class="card-body">

                            <div class="form-group row">
                                <label for="inputEmail3" class="col-sm-6 col-form-label">Fecha activación:</label>
                                <label for="inputEmail3" class="col-sm-6 col-form-label">{{FECHA_ACTIVACION}}<br />{{ANTIGUEDAD}}</label>
                            </div>
                            <div class="form-group row">
                                <label for="inputEmail3" class="col-sm-6 col-form-label">Cargo fijo: {{CARGO_FIJO}}</label>
                                <label for="inputEmail3" class="col-sm-6 col-form-label">Segmento: {{SEGMENTO.VALUE}}</label>
                            </div>

                            <div class="form-group row">
                                <label for="inputEmail3" class="col-sm-6 col-form-label text-dark">IMR : {{TOTAL_IMR}}</label>
                                <label for="inputEmail3" class="col-sm-6 col-form-label text-dark">IMF : {{TOTAL_IMF}}</label>
                            </div>


                            <div class="row">
                                <div class="col-xs-6 col-md-6 col-lg-6" v-for="(item , index) in ListaCustomer">
                                    <font style="line-height: 1.0" size="5">
                                        <p class="text-right text-dark" style="font-size: 12px;" v-if="index%2==0">{{item.name}}</p><p class="text-left text-black-50" style="font-size: 12px;" v-else="index%2==0">{{item.name}}</p>
                                    </font>

                                </div>
                            </div>

                        </div>
                    </div><br />
                    <div class="card redondoCardLight  cajaRojoClaroDelgado ">
                        <div class="card-body">
                            <h3><b>Consideraciones:</b></h3><br />
                            <ul v-for="item in Lista5">
                                <li>{{item.VALUE}}</li>
                            </ul>

                        </div>
                    </div>
                </div>
                <div class="col-xs-12 col-sm-8">
                    <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                        <div class="card-body">
                            <div v-if="Lista10.length>0" class="row">
                                <div class="col-xs-12">
                                    <b-alert v-model="F" variant="warning">
                                        <ul v-for="item in Lista10">
                                            <li style="text-align: left; font-size:12px;">{{item.name}}</li>
                                        </ul>
                                    </b-alert>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12 col-sm-12">
                                    <div class="form-group row">
                                        <label for="inputEmail3" class="col-xs-3 col-sm-3 form-label">Elegir ofrecimiento:</label>
                                        <div class="col-xs-4 col-sm-4">
                                            <select v-model="PADRE" class="form-control" v-on:change="cargarOfrecimiento(PADRE)">
                                                <option v-for="item in Lista2" v-bind:value="{ ID: item.ID, ID_CONTROL: item.ID_CONTROL, VALUE: item.VALUE ,OBSERVACION: item.OBSERVACION, ESTADO: item.ESTADO, CAMPO1: item.SPEECH, CAMPO2: item.DESCARTES, ACCIONES: item.ACCIONES }">
                                                    {{ item.VALUE }}
                                                </option>
                                            </select>
                                        </div>
                                        <p class="col-xs-5 text-left text-success">Disponible: {{TOTAL_SALDO_DISPONIBLE}}</p>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-xs-12 col-sm-7">
                                    <table v-if="Lista3.length>0" class="table table-hover table-bordered table-responsive" style="overflow: auto;">
                                        <thead>
                                            <tr class="table cajaRojoClaro">
                                                <th style="text-align: center; font-size:10px;">{{Lista3.length}}</th>
                                                <th style="text-align: center; font-size:10px;">Descripción</th>
                                                <th style="text-align: center; font-size:10px;">S/.</th>
                                                <th style="text-align: center; font-size:10px;">Considerar</th>
                                            </tr>
                                        </thead>
                                        <tbody v-for="item in Lista3">
                                            <tr class='clickable-row'>
                                                <td><b-avatar v-on:click="elegirItem({ ID: item.ID, ID_CONTROL: item.ID_CONTROL, VALUE: item.VALUE, DEPENDENCIA: item.DEPENDENCIA ,OBSERVACION: item.OBSERVACION, ESTADO: item.ESTADO, CAMPO1: item.SPEECH, CAMPO2: item.DESCARTES, ACCIONES: item.ACCIONES })" button icon="check-circle" size="2rem" variant="light"></b-avatar></td>
                                                <td style="text-align: center; font-size:11px;">{{ item.VALUE }}</td>
                                                <td style="text-align: center; font-size:11px;">{{ item.OBSERVACION }}</td>
                                                <td style="text-align: center; font-size:11px;">{{ item.ACCIONES }}</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                                <div class="col-xs-12 col-sm-5">
                                    <table v-if="Lista6.length>0" class="table small" style="overflow: auto;">
                                        <tbody v-for="item in Lista6">
                                            <tr class='clickable-row'>
                                                <td><b-avatar v-on:click="retirarItem({ INC: item.INC, PRECIO:item.PRECIO, VALUE:item.VALUE   })" button icon="trash" size="2rem" variant="light"></b-avatar></td>
                                                <td style="text-align: center; font-size:7px;">{{ item.OFRECIMIENTO }}</td>
                                                <td style="text-align: center; font-size:10px;">{{ item.VALUE }}</td>
                                                <td style="text-align: center; font-size:10px;">{{ item.PRECIO }}</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <div v-if="Lista6.length>0" class="form-group ">
                                        <p class="col-xs-6 text-right text-danger">Acumulado: {{TOTAL_BENEFINICIO}}</p>
                                        <p class="col-xs-5 text-right text-danger">Descuentos: {{TOTAL_CARGADO}}</p>
                                    </div>
                                    <br />
                                    <b-link id="popover-target-12">( Importante ! )</b-link>
                                    <b-popover target="popover-target-12" triggers="hover" placement="top">
                                        <p>El monto máximo de descuento es el 50% de CF (cargo fijo)</p>
                                        <p>Considerar que el descuento no se puede combinar con otro bono o exoneración,siempre y cuando implique un descuento en su factura, es decir un descuento como ajuste o como occ.</p>
                                        <p>Se puede combinar descuento con bono o exoneración siempre y cuando no pase el tope de  IMR.</p>
                                    </b-popover>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


            </div>
        </template>
    </div>
    <b-modal id="formularioAcciones" size="lg" data-html="true" hide-footer hide-header>
        <div class="containerClaro">
            <div class="row">
                <div class="col-sm-12">
                    <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                        <div class="card-body">

                            <table class="table table-hover table-bordered table-responsive" style="overflow: auto;">

                                <tbody v-for="item in Lista4">
                                    <tr class='clickable-row'>
                                        <td><b-avatar v-on:click="elegirItem({ ID: item.ID, ID_CONTROL: item.ID_CONTROL, VALUE: item.VALUE, DEPENDENCIA: item.DEPENDENCIA ,OBSERVACION: item.OBSERVACION, ESTADO: item.ESTADO, CAMPO1: item.SPEECH, CAMPO2: item.DESCARTES, ACCIONES: item.ACCIONES })" button icon="check-circle" size="2rem" variant="light"></b-avatar></td>
                                        <td style="text-align: center; font-size:12px;">{{ item.VALUE }}</td>
                                        <td style="text-align: center; font-size:12px;">{{ item.OBSERVACION }}</td>
                                        <td style="text-align: center; font-size:12px;">{{ item.ACCIONES }}</td>
                                    </tr>
                                </tbody>
                            </table>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="formularioMacro" size="md" data-html="true" no-close-on-backdrop no-close-on-esc hide-footer hide-header>
        <div class="containerClaro">
            <div class="row">
                <div class="col-xs-12">
                    <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                        <div class="card-body">

                            <br />
                            <div class="form-group row">
                                <div class="col-sm-7">
                                    <p v-if="FECHA_ACTIVACION =='' ">Fecha activación: <span class="badge badge-danger"> ! </span></p><p v-else="FECHA_ACTIVACION ==''" class="text-success">Antiguedad  : {{ANTIGUEDAD}} </p>
                                </div>
                                <div class="col-sm-5">
                                    <input v-model="FECHA_ACTIVACION" type="date" class="form-control" v-on:change="CalcularIMR()" />
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="inputEmail3" class="col-sm-3 col-form-label">Segmento:</label>
                                <div class="col-sm-3">
                                    <select v-model="SEGMENTO" class="form-control" v-on:change="AgregarSegmento(SEGMENTO)">
                                        <option value="SELECCIONAR">SELECCIONAR</option>
                                        <option v-for="item in Lista1" v-bind:value="{ ID: item.ID, VALUE: item.VALUE, PRECIO: item.OBSERVACION }">
                                            {{ item.VALUE }}
                                        </option>
                                    </select>
                                </div>
                                <label for="inputEmail3" class="col-sm-3 col-form-label">Cargo fijo:</label>
                                <div class="col-sm-3">
                                    <input v-model="CARGO_FIJO" type="tel" class="form-control" v-on:keyup="CalcularIMR()" oninput="this.value = this.value.replace(/[^0-9.]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1');" maxlength="16" />
                                </div>

                            </div>

                            <div class="form-group row">
                                <template v-if="TOTAL_IMR>0">
                                    <label for="inputEmail3" class="col-sm-6 col-form-label text-danger">IMR : {{TOTAL_IMR}}</label>
                                    <label for="inputEmail3" class="col-sm-6 col-form-label text-danger">IMF : {{TOTAL_IMF}}</label>

                                    <label for="inputEmail3" class="col-sm-6 col-form-label">Customer ID :</label>
                                    <div class="col-sm-4">
                                        <input v-model="CUSTOMER_ID" type="tel" class="form-control" v-on:keyup="BuscarCustomerID()" oninput="this.value = this.value.replace(/[^0-9.]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1');" maxlength="8" />
                                    </div>
                                    <div v-if="CARGO_FIJO.length < 1" class="col-sm-2">
                                        <p><span class="badge badge-danger"> ! </span></p>
                                    </div>
                                    <div v-else="CARGO_FIJO.length < 1" class="col-sm-2">
                                        <a class="btn btn-dark rounded-pill text-white text-center" v-on:click="OcultarModal({modal: 'formularioMacro'})"><i class="fas fa-address-card fa-1x"></i></a>
                                    </div>
                                </template>

                            </div>

                            <div class="row">
                                <div class="col-xs-6 col-md-6 col-lg-6" v-for="(item , index) in ListaCustomer">
                                    <font style="line-height: 0.6" size="5">
                                        <p class="text-right text-dark" style="font-size: 12px;" v-if="index%2==0">{{item.name}}</p><p class="text-left text-black-50" v-else="index%2==0">{{item.name}}</p>
                                    </font>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="formularioError" size="lg" data-html="true" title="Mensaje de Sistema" ok-only>
        <div class="col-12">
            <div class="col-12 row">
                <div class="col-12  text-center">
                    <h3><button class="btn btn-outline-danger" v-html="MensajeSistema"></button></h3>
                </div>
            </div>
        </div>
    </b-modal>
</div>
<script>
    var hoy = new Date();
    hoy.setDate(hoy.getDate());


    var app = new Vue({
        el: '#app',
        data: {
            ID_USUARIO: sessionStorage.getItem('ID_USUARIO'),
            SERVER_URL: sessionStorage.getItem('SERVER_URL'),
            ID_SEDE: sessionStorage.getItem('ID_SEDE'),
            options: [
                { value: 'APLICA', text: 'APLICA' },
                { value: 'NO APLICA', text: 'NO APLICA' },
                { value: 'ACTIVO', text: 'ACTIVO' }
            ],
            siNo: [
                { value: 'SI', text: 'SI' },
                { value: 'NO', text: 'NO' }
            ],
            // TOTALES
            F: 2000,
            TOTAL_IMR: 0.00,
            TOTAL_IMF: 0.00,
            TOTAL_BENEFINICIO: 0.00,
            TOTAL_SALDO_DISPONIBLE: 0.00,
            TOTAL_CARGADO: 0.00,
            FECHA_ACTIVACION: '',
            ANTIGUEDAD: '',
            FACTOR: 0,
            FACTOR_ANTIGUEDAD: 0,
            CUSTOMER_ID: '',
            CARGO_FIJO: '',
            SEGMENTO: 'SELECCIONAR',
            ACCION: '',
            M_ANTIGUEDAD: '',
            ID_CONTROL: '0',
            INC: 1,
            selected: [],


            //selected: '',
            OpcionesTotal: [],
            Lista1: [],
            Lista2: [],
            Lista3: [],
            Lista4: [],
            Lista5: [],
            Lista6: [],
            Lista7: [],
            Lista8: [],
            Lista9: [],
            Lista10: [],
            ListaCustomer: [],
            MensajeSistema: '',
            isAgente: false,
            isOperadorMovilReadOnly: false,

            // ADMINISTRADOR
            Lista100: [],
            Lista101: [],
            Lista102: [],
            DESCRIPCION: [],
            VALUE: '',
            ITEM: '',
            ITEM1: '',
            ITEM2: '',
            ITEM3: '',
            PADRE: '',
            ID_DEPENDENCIA: '',
        },
        computed: {
            splitedList() {
                let newArr = [...this.ListaCustomer]
                newArr.map(el => {
                    return el.Plantilla = el.Plantilla.split('|')
                })
                return newArr
            }
        },
        methods: {
            mostrarModal: function (form) {
                this.MensajeSistema = form.msg;
                this.$bvModal.show(form.modal);
            },
            OcultarModal: function (form) {
                this.$bvModal.hide(form.modal);
            },
            mostrarToast(variant = null) {
                this.$bvToast.toast(variant.msg, {
                    title: `Alerta de sistema`,
                    variant: variant.toast,
                    solid: true
                })
            },
            limpiarFormulario: function () {
                this.SEGMENTO = 'SELECCIONAR';
            },
            AgregarSegmento: function (Segmento) {
                this.FACTOR = Segmento.PRECIO;
                if (this.FACTOR == 0) {
                    this.mostrarToast({ toast: 'warning', msg: 'El segmento no cuenta con descuento' });
                    this.TOTAL_IMR = 0;
                } else { this.CalcularIMR(); }
            },
            CalcularIMR: function () {
                this.ANTIGUEDAD = 'Fecha incorrecta !'
                this.TOTAL_IMR = 0;
                this.TOTAL_IMF = 0;
                if (this.FECHA_ACTIVACION != '') {
                    var sdt = new Date(this.FECHA_ACTIVACION);
                    var difdt = new Date(new Date() - sdt);
                    this.FACTOR_ANTIGUEDAD = (difdt.toISOString().slice(0, 4) - 1969);
                    if (this.FACTOR_ANTIGUEDAD >= 1) {
                        this.ANTIGUEDAD = ("  A : " + (difdt.toISOString().slice(0, 4) - 1970) + "  M :  " + (difdt.getMonth()) + "  D : " + difdt.getDate());
                        this.M_ANTIGUEDAD = ((difdt.toISOString().slice(0, 4) - 1970) * 12) + difdt.getMonth();
                        if (this.SEGMENTO != 'SELECCIONAR' && this.CARGO_FIJO.length > 1) {
                            if (this.M_ANTIGUEDAD >= 3) {
                                this.TOTAL_IMR = (parseFloat(this.CARGO_FIJO) * parseFloat(this.FACTOR)).toFixed(2);
                                this.TOTAL_IMF = (this.TOTAL_IMR / 2).toFixed(2);
                                this.TOTAL_SALDO_DISPONIBLE = this.TOTAL_IMR;
                            } else {
                                this.TOTAL_IMR = parseFloat(this.CARGO_FIJO).toFixed(2);
                                this.TOTAL_IMF = (this.TOTAL_IMR / 2).toFixed(2);
                                this.TOTAL_SALDO_DISPONIBLE = this.TOTAL_IMR;
                            }
                        }
                    } else { this.FECHA_ACTIVACION = ''; this.mostrarToast({ toast: 'danger', msg: 'Fecha incorrecta' }); }
                }
            },

            cargarDropdow: function (item) {         //alert(JSON.stringify(item));
                let idControl = item.ID_CONTROL + 1;
                let lista = [];
                lista = this.ListaPrincipal.filter(producto => producto.ID_DEPENDENCIA == item.ID);
                this.ID_DEPENDENCIA = item.ID;
                switch (idControl) {
                    case 2: { this.Lista2 = lista; break; }
                    case 3: { this.Lista3 = lista; break; }
                    case 4: { this.Lista4 = lista; break; }
                    case 6: { this.Lista6 = lista; break; }
                    case 8: { this.Lista8 = lista; break; }
                    case 9: { this.Lista9 = lista; break; }
                    case 102: { this.Lista102 = lista; break; }

                }
            },
            cargarOfrecimiento: function (item) {
                let idControl = item.ID_CONTROL + 1;
                this.CARGO_FIJO = parseFloat(this.CARGO_FIJO).toFixed(2);
                //
                let lista = [];
                lista = this.ListaPrincipal.filter(producto => producto.ID_DEPENDENCIA == item.ID && producto.SPEECH <= this.M_ANTIGUEDAD);
                this.Lista3 = lista.filter(x => {
                    return x.DESCARTES.includes(this.SEGMENTO.VALUE);
                });

                this.Lista10 = [];
                let separado = item.OBSERVACION.split(",");
                for (var i in separado) {
                    this.Lista10.push({ name: separado[i] });
                }
            },
            elegirItem: function (item) {
                let monto = 0;
                let noValido = 0;
                let montoDescuento = 0.00;
                if (item.ID_CONTROL == 3) { this.ID = item.ID; }
                if (parseFloat(item.OBSERVACION) > 1) {
                    monto = parseFloat(item.OBSERVACION).toFixed(2);
                } else if (parseFloat(item.OBSERVACION) > 0) {
                    monto = (parseFloat(this.CARGO_FIJO) * parseFloat(item.OBSERVACION)).toFixed(2);
                } else {
                    this.Lista4 = this.ListaPrincipal.filter(producto => producto.ID_DEPENDENCIA == item.ID);
                    this.mostrarModal({ modal: 'formularioAcciones', msg: 'Nada' });
                    return 0;
                }
                montoDescuento = parseFloat(monto);

                for (var i in this.Lista6) {
                    if (this.PADRE.VALUE == 'EXONERACIÓN') {     // ## regla especifica BONOS             alert(JSON.stringify(this.Lista6));

                        if (this.Lista6[i].OFRECIMIENTO == 'EXONERACIÓN' && this.Lista6[i].ID != this.ID) noValido = noValido + 1;

                    } else if (this.PADRE.VALUE == 'BONO') {    // ## regla especifica EXONERACIÓN

                        if (this.Lista6[i].OFRECIMIENTO == 'BONO' && this.Lista6[i].ID != this.ID) noValido = noValido + 1;

                    } else if (this.PADRE.VALUE == 'DESCUENTO') {   // ## regla especifica DESCUENTO

                        if (this.Lista6[i].OFRECIMIENTO == 'DESCUENTO') {
                            montoDescuento = (parseFloat(montoDescuento) + parseFloat(this.Lista6[i].PRECIO)).toFixed(2);
                            if (parseFloat(this.CARGO_FIJO) / 2 < parseFloat(montoDescuento)) noValido = noValido + 1;
                        }
                    }
                }
                if (noValido == 0) {
                    if ((parseFloat(this.TOTAL_SALDO_DISPONIBLE) >= parseFloat(monto))) {
                        this.TOTAL_BENEFINICIO = (parseFloat(this.TOTAL_BENEFINICIO) + parseFloat(monto)).toFixed(2);
                        this.TOTAL_SALDO_DISPONIBLE = (parseFloat(this.TOTAL_SALDO_DISPONIBLE) - parseFloat(monto)).toFixed(2);
                        this.INC = this.INC + 1;
                        this.Lista6.push({ INC: this.INC, ID: this.ID, PRECIO: monto, VALUE: item.VALUE, OFRECIMIENTO: this.PADRE.VALUE });
                        this.mostrarToast({ toast: 'info', msg: item.VALUE + ' = ' + parseFloat(monto) });
                    } else {
                        this.mostrarToast({ toast: 'danger', msg: 'Saldo disponible superado' });
                    }
                } else {
                    this.mostrarToast({ toast: 'danger', msg: 'No cumple con la regla' });
                }



            },
            retirarItem: function (item) {
                // INC: item.INC, PRECIO: item.PRECIO, VALUE: item.VALUE
                this.TOTAL_BENEFINICIO = (parseFloat(this.TOTAL_BENEFINICIO) - parseFloat(item.PRECIO)).toFixed(2);
                this.TOTAL_SALDO_DISPONIBLE = (parseFloat(this.TOTAL_SALDO_DISPONIBLE) + parseFloat(item.PRECIO)).toFixed(2);

                let listaTemporal = this.Lista6;
                this.Lista6 = listaTemporal.filter(producto => producto.INC != item.INC);


                //var removeIndex = array.map(item => item.id)
                //   .indexOf("abc");

            },

            BuscarCustomerID: function () {
                this.ListaCustomer = [];
                this.TOTAL_CARGADO = 0;
                this.TOTAL_SALDO_DISPONIBLE = 0;
                if (this.CUSTOMER_ID.length > 3) {
                    //alert('entro');
                    axios.post(this.SERVER_URL + '/api/Claro/MostrarCustomerID', {
                        Customer_ID: this.CUSTOMER_ID,
                        TIPO: 14 
                    }).then(response => { 
                        if (response.data.RESULTADO > 0) {
                            this.TOTAL_CARGADO = parseFloat(response.data.RESULTADO).toFixed(2);
                            this.TOTAL_SALDO_DISPONIBLE = (parseFloat(this.TOTAL_IMR) - parseFloat(this.TOTAL_CARGADO)).toFixed(2);
                            let separado = response.data.PLANTILLA.split("|");
                            for (var i in separado) {
                                this.ListaCustomer.push({ name: separado[i] });
                            }
                        } else {
                            this.CalcularIMR();
                        }
                        
                    }).catch(e => {
                        this.mostrarModal({ modal: 'formularioError', msg: 'Ocurrio un error en la conexión búsqueda' });
                    });
                }
            },
            cargarOpciones: function () {
                axios.post(this.SERVER_URL + '/api/Opciones/ListarOpcionesCRM', {
                    ID_GRUPO: 6,
                    TIPO: 5,
                }).then(response => {
                    this.ListaPrincipal = response.data;
                    this.Lista1 = this.ListaPrincipal.filter(product => product.ID_CONTROL == 1);
                    this.Lista2 = this.ListaPrincipal.filter(product => product.ID_CONTROL == 2);
                    this.Lista5 = this.ListaPrincipal.filter(product => product.ID_CONTROL == 5);
                    this.$bvModal.show('formularioMacro');
                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' });
                });
            }
        }
    })
    app.cargarOpciones();

</script>

