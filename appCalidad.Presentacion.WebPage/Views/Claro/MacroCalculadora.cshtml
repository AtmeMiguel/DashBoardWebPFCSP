
@{
    Layout = "~/Views/Shared/_ImageUpload.cshtml";
    ViewBag.Title = "MACRO CALCULADORA";
}
<div id="app">
    <div class="container">
        <br />
        <div class="row">
            
            <div class="col-xs-12 col-sm-3 col-lg-3 ">
                <div class="card redondoCardLight  cajaGrisClaroDelgado colorFondo">
                    <br />
                    <b-form-group label="Plan Nuevo:">
                        <b-input-group prepend="s/." append=".00">
                            <b-form-input v-model="NUEVO" class="text-right" type="tel" maxlength="3" oninput="this.value = this.value.replace(/[^0-9]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1');" v-on:keyup="evaluar" />
                        </b-input-group>
                    </b-form-group>
                    <b-form-group label="Plan Actual:">
                        <b-input-group prepend="s/." append=".00">
                            <b-form-input v-model="ACTUAL" class="text-right" type="tel" maxlength="3" oninput="this.value = this.value.replace(/[^0-9]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1');" v-on:keyup="evaluar" />
                        </b-input-group>
                    </b-form-group>
                    <b-form-group label="Fecha de cambio - Baja-Ciclo:">
                        <input v-model="FECHA_BAJA" type="date" class="form-control" v-on:change="evaluar" />
                    </b-form-group>

                    <b-form-group label="Fin de ciclo facturación - Actual-Anterior:">
                        <input v-model="FECHA_CICLO" type="date" class="form-control" v-on:change="evaluar" />
                    </b-form-group>
                    <b-form-group label="Días del mes:   /    Días de prorrateo:">
                        <div class="row">
                            <div class="col-sm-6 text-left">
                                <input v-model="DIAS" type="text" readonly="true" class="form-control text-right" />
                            </div>
                            <div class="col-sm-6 text-right">
                                <input v-model="DIAS_DIFERENCIA" type="text" readonly="true" class="form-control text-right" />
                            </div>
                        </div>
                    </b-form-group>
                </div>
            </div>
            <div class="col-xs-12 col-sm-3 col-lg-3 ">
                <div class="card redondoCardLight  cajaGrisClaroDelgado colorFondo">
                    <br />
                    <b-form-group label="Prorrateo plan actual:">
                        <input v-model="P_ACTUAL" type="text" readonly="true" class="form-control text-right" />
                    </b-form-group>
                    <b-form-group label="Prorrateo plan nuevo:">
                        <input v-model="P_NUEVO" type="text" readonly="true" class="form-control text-right" />
                    </b-form-group>
                    <b-form-group label="Prorrateo final total:">
                        <input v-model="P_TOTAL" type="text" readonly="true" class="form-control text-right" />
                    </b-form-group>
                    <b-form-group label="Proxima factura:">
                        <input v-model="PROX_FACTURA" type="text" readonly="true" class="form-control  text-right" style="font-size:32px;" />
                    </b-form-group>

                    <div class="form-group row">
                        <div class="col-sm-12 text-center">
                            <a class="btn  btn-warning text-center" v-on:click="mensaje">NO RETENIDO (BAJA TOTAL-PARCIAL)</a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-6 col-lg-6 ">
                <div class="card redondoCardLight  cajaGrisClaroDelgado colorFondo">
                    <br />
                    <template v-if="MensajeTitulo == 'RETENIDO'">
                        <b-alert show variant="success">
                            <div class="row">
                                <div class="col-3 text-center">
                                    <i class="fas fa-check-circle fa-3x"></i>
                                </div>
                                <div class="col-9">
                                    {{MensajeTitulo}}: <br />
                                    {{MensajeSistema}}
                                </div>
                            </div>
                        </b-alert>
                    </template>
                    <template v-else="MensajeTitulo == 'RETENIDO'">
                        <b-alert show variant="warning">
                            <div class="row">
                                <div class="col-3 text-center">
                                    <i class="fas fa-exclamation-circle fa-3x"></i>
                                </div>
                                <div class="col-9">
                                    {{MensajeTitulo}}: <br />
                                    {{MensajeSistema}}
                                </div>
                            </div>
                        </b-alert>
                    </template>
                </div>
            </div>

        </div>


    </div>
</div>

<script>

    var app = new Vue({
        el: '#app',
        data: {
            ID_USUARIO: sessionStorage.getItem('ID_USUARIO'),
            SERVER_URL: sessionStorage.getItem('SERVER_URL'),
            ID_SEDE: sessionStorage.getItem('ID_SEDE'),
            MensajeTitulo: 'RECUERDA',
            MensajeSistema: 'Cuando la fecha de ciclo de facturación es menor a la fecha de cambio-baja, es necesario agregar un mes en el ciclo de facturación',
            idServicio: 17,

            NUEVO: '0',
            ACTUAL: '0',
            DIAS: '0',
            DIAS_DIFERENCIA: '0',
            FECHA_BAJA: '',
            FECHA_CICLO: '',
            P_NUEVO: '0',
            P_ACTUAL: '0',
            P_TOTAL: '0',
            PROX_FACTURA: '0',

            Lista1: [],
            Lista2: [],
            ListaPrincipal: []

        },

        methods: {
            mostrarModal: function (form) {
                this.MensajeSistema = form.msg;
                this.$bvModal.show(form.modal);
            },
            mostrarToast(variant = null) {
                this.MensajeSistema = variant.msg;
                this.$bvToast.toast(this.MensajeSistema, {
                    title: `Alerta de sistema`,
                    variant: variant.toast,
                    solid: true
                })
            },
            evaluar: function () {
                if (this.FECHA_BAJA != '' && this.FECHA_CICLO != '') {
                    if (this.FECHA_BAJA <= this.FECHA_CICLO) {
                        var fechaInicio = new Date(this.FECHA_BAJA).getTime();
                        var fechaFin = new Date(this.FECHA_CICLO).getTime();
                        var diff = fechaFin - fechaInicio;
                        this.DIAS_DIFERENCIA = diff / (1000 * 60 * 60 * 24);

                        this.P_ACTUAL = ((this.ACTUAL / this.DIAS) * this.DIAS_DIFERENCIA).toFixed(2);
                        this.P_NUEVO = ((this.NUEVO / this.DIAS) * this.DIAS_DIFERENCIA).toFixed(2);
                        this.P_TOTAL = (parseFloat(this.P_NUEVO) - parseFloat(this.P_ACTUAL)).toFixed(2);

                        this.PROX_FACTURA = (parseFloat(this.NUEVO) + parseFloat(this.P_TOTAL)).toFixed(2);

                        this.MensajeTitulo = 'RETENIDO';
                        this.MensajeSistema = 'Informacion llenada correctamente';

                    } else {
                        let mesess = ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"];
                        var fecha = this.FECHA_CICLO;
                        let date = new Date(fecha.replace(/-+/g, '/'));
                        var dia = date.getDate();
                        var mes = date.getMonth();
                        this.FECHA_CICLO = '';
                        this.MensajeTitulo = 'RECUERDA';
                        this.MensajeSistema = 'Cuando la fecha de ciclo de facturación es menor a la fecha de cambio-baja, es necesario agregar un mes en el ciclo de facturación';
                        this.mostrarToast({ toast: 'info', msg: 'La fecha de ciclo de facturación debe ser mayor,  se sugiere colocar ' + dia + ' / ' + mesess[mes + 1] + ' / ' + date.getFullYear() });
                    }
                }
            },
            mensaje: function () {
                this.MensajeTitulo = 'NO RETENIDO';
                this.MensajeSistema = 'Sr. (a)......... en estos momentos estamos registrando su Solicitud de Cancelacion / Baja, la cual se atenderá en 5 dias útiles, <b>la cual se está programando para el día DD//MM/AAAA</b>, mientras tanto el servicio' +
                    'se mantendrá activo y se seguirá facturando hasta el ultimo día; Le recordamos que al momento de la instalación CLARO dejó en su domicilio equipos en calidad de préstamo, motivo por el cual éstos deben ser devueltos.' +
                    'Para hacer efectiva la devolución por favor bríndeme dos teléfonos de contacto, la direccion exacta y una referencia para coordinar el recojo de los equipos......'
                'Le informamos que en caso no se concrete la entrega de los equipos Ud. asumirá el cobro por el valor de los mismos.' +
                    'Como le mencioné antes la baja se hara efectiva en 5 dias útiles, si por algún motivo desea continuar con los servicios no dude en comunicarse con nosotros y le brindaremos todo lo ofrecido.' +
                    'Gracias por llamar a Claro que tenga buenos días / tardes / noches.';
            },

            cargarControles: function () {
                this.Lista1 = this.ListaPrincipal.filter(producto => producto.ID_CONTROL == 1);
                this.Lista2 = this.ListaPrincipal.filter(producto => producto.ID_CONTROL == 2);

            },
            cargarDropdow: function (item) {    //alert(JSON.stringify(item));
                let idControl = item.ID_CONTROL + 1;
                let lista = [];
                lista = this.ListaPrincipal.filter(producto => producto.ID_DEPENDENCIA == item.ID);
                switch (idControl) {
                    case 13: { this.Lista13 = lista; break; }
                }
            },
            cargarOpciones: function () {
                var today = new Date();
                var lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);
                this.DIAS = lastDayOfMonth.getDate();

                axios.post(this.SERVER_URL + '/api/Opciones/ListarOpcionesCRM', {
                    ID_GRUPO: 17,
                    TIPO: 5,
                }).then(response => {
                    this.ListaPrincipal = response.data;
                    this.cargarControles();
                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' });
                });
            }
        }
    })
    app.cargarOpciones();
</script>
