@{
    Layout = "~/Views/Shared/_ImageUpload.cshtml";
}
<div id="app">
    <div class="container">
        <br />
        <div class="row">
            <div class="col-xs-12 col-md-12">
                <br />
                <template>
                    <b-container fluid>
                        <!-- User Interface controls -->
                        <b-row>
                            <b-col xs="3" sm="3" md="4" class="my-1">
                                <label class="mr-sm-2"></label>
                            </b-col>
                            <b-col xs="4" sm="4" md="4" class="my-1">

                                <b-form-group label="Distrito"
                                              label-for="per-page-select"
                                              label-cols-sm="3"
                                              label-cols-md="3"
                                              label-cols-lg="3"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <select v-model="categoryIdFilter" class="form-control" size="sm" v-on:change="filter='', buscar(categoryIdFilter) ">
                                        <option v-for="item in categories" v-bind:value="{ VALUE: item.DISTRITO }">
                                            {{ item.DISTRITO }}
                                        </option>
                                    </select>

                                </b-form-group>
                            </b-col>
                            <b-col xs="4" sm="4" md="4" class="my-1">
                                <b-form-group label="Buscar"
                                              label-for="filter-input"
                                              label-cols-sm="4"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-input-group size="sm">
                                        <b-form-input id="filter-input"
                                                      v-model="filter"
                                                      type="search"
                                                      v-on:keyup="buscarDireccion(filter)  "
                                                      placeholder="Ingresar direccion"></b-form-input>

                                        <b-input-group-append>
                                            <b-button :disabled="!filter" @@click="filter = '' ">Limpiar</b-button>
                                        </b-input-group-append>
                                    </b-input-group>
                                </b-form-group>
                            </b-col>



                        </b-row>
                        <!-- Main table element -->
                        <b-row style=" height: 505px; overflow: scroll; ">
                            <b-table :items="ListaGrilla"
                                     :current-page="currentPage"
                                     :per-page="perPage"
                                     stacked="md"
                                     head-variant="light"
                                     show-empty
                                     sticky-header
                                     small
                                     @@filtered="onFiltered">
                                <template #cell(name)="row">
                                    {{ row.value.first }} {{ row.value.last }}
                                </template>

                            </b-table>
                        </b-row>
                        <br />



                        <!-- User Interface controls -->
                        <b-row>



                            <b-col xs="6" sm="6" md="6" class="my-1">

                                <b-form-group label="Por página"
                                              label-for="per-page-select"
                                              label-cols-sm="3"
                                              label-cols-md="3"
                                              label-cols-lg="3"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-form-select id="per-page-select"
                                                   v-model="perPage"
                                                   :options="pageOptions"
                                                   size="sm"></b-form-select>
                                </b-form-group>
                            </b-col>

                            <b-col xs="6" sm="6" md="6" class="my-1">
                                <b-pagination v-model="currentPage"
                                              :total-rows="totalRows"
                                              :per-page="perPage"
                                              align="fill"
                                              size="sm"
                                              class="my-0"></b-pagination>
                            </b-col>
                        </b-row>


                    </b-container>
                </template>
            </div>

        </div>
    </div>


    <!-- Info modal -->
    <b-modal :id="infoModal.id" hide-footer hide-header @@hide="resetInfoModal">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-body">
                        <div class="card-text">
                            <p>Esta seguro de eliminar</p>
                            <pre>{{ infoModal.content }}</pre>

                            <br /><br />
                            @*<div class="text-right">
                                    <b-button v-on:click="eliminarOk" variant="outline-info" pill><b-avatar variant="outline-info" icon="trash" size="2rem"></b-avatar>Eliminar</b-button>
                                </div>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

</div>


<script>

    var app = new Vue({
        el: '#app',
        data: {
            ID_USUARIO: sessionStorage.getItem('ID_USUARIO'),
            SERVER_URL: sessionStorage.getItem('SERVER_URL'),
            ID_SEDE: sessionStorage.getItem('ID_SEDE'),

            categories: [],
            categoryIdFilter: '',
            ListaGrilla: [],
            ListaGrillaSinFiltro: [],

            totalRows: 100,
            currentPage: 1,
            perPage: 50,
            pageOptions: [50, 100, 200, { value: 1000, text: "Show a lot" }],
            sortBy: '',
            sortDesc: false,
            sortDirection: 'asc',
            filter: '',
            filterOn: [],
            infoModal: {
                id: 'info-modal',
                title: '',
                content: ''
            }
        },
        mounted() {
            this.totalRows = this.ListaGrilla.length
        },
        methods: {
            ocultarPantalla: function (form) {
                this.$bvModal.hide(form.PANTALLA);
            },
            pantalla: function (form) {
                this.$bvModal.show(form.PANTALLA);
            },
            mostrarToast(variant = null) {
                this.$bvToast.toast(variant.msg, {
                    title: `Alerta de sistema`,
                    variant: variant.toast,
                    solid: true
                })
            },

            detalle: function (item, index, button) {
                this.infoModal.title = `Row index: ${index}`
                this.infoModal.content = JSON.stringify(item, null, 2)
                this.$root.$emit('bv::show::modal', this.infoModal.id, button)
            },

            buscar: function (item) {
                axios.post(this.SERVER_URL + '/api/Enlace/ListarNodosLiberados', {
                    CONTENIDO: item.VALUE,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 18,
                }).then(response => {
                    if (response.data.length > 0) {
                        this.ListaGrilla = response.data;
                        this.ListaGrillaSinFiltro = response.data;
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' });
                });
            },
            buscarDireccion: function (item) {
                if (this.filter.length > 1) {
                    this.currentPage = 1;
                    let palabra = this.filter.toUpperCase();
                    this.ListaGrilla = this.ListaGrillaSinFiltro.filter(x => {
                        return x.NOMBRE_VIA.includes(palabra);
                    });
                } else {
                    this.ListaGrilla = this.ListaGrillaSinFiltro;
                }
            },
            salida: function () {

            },
            resetInfoModal() {
                this.infoModal.title = '';
                this.infoModal.content = '';
            },
            onFiltered(filteredItems) {
                // Trigger pagination to update the number of buttons/pages due to filtering
                this.totalRows = filteredItems.length;
                this.currentPage = 1;
            }, 
            nodosEdificios: function () {         //  alert(JSON.stringify(this.ListaMaestra));
                axios.post(this.SERVER_URL + '/api/Enlace/ListarNodosLiberados', {
                    ID: this.ID,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 17,
                }).then(response => {
                    if (response.data.length > 0) { this.categories = response.data; }
                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' });
                });
            }

        }
    })
    app.nodosEdificios();
</script>

