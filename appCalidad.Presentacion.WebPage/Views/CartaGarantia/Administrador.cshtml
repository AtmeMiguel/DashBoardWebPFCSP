@{
    string Title = "ADMIN | Usuario";
    ViewBag.Title = Title;
    string apiServidor = System.Configuration.ConfigurationManager.AppSettings["API_SERVIDOR"];
    
}

<div id="app">
    <div class="container">
        <br />
        <div class="row">
            <div class="col-xs-12 col-md-12">

                <b-overlay :show="show" rounded="sm">
                    <br />
                    <template>
                        <b-container fluid>
                            <!-- User Interface controls -->
                            <b-row>
                                <b-col lg="6" class="my-1">
                                    <b-form-group label="Buscar"
                                                  label-for="filter-input"
                                                  label-cols-sm="2"
                                                  label-align-sm="right"
                                                  label-size="sm"
                                                  class="mb-0">
                                        <b-input-group size="sm">
                                            <b-form-input id="filter-input"
                                                          v-model="filter"
                                                          type="search"
                                                          v-on:keyup="buscar()"
                                                          placeholder="Nombres"></b-form-input>

                                            <b-input-group-append>
                                                <b-button :disabled="!filter" @@click="filter = '', buscar()">Limpiar</b-button>
                                            </b-input-group-append>
                                        </b-input-group>
                                    </b-form-group>
                                </b-col>

                            </b-row>
                            <!-- Main table element -->
                            <b-row style=" height: 600px; overflow: scroll; ">
                                <b-table :items="ListaUsuarios"
                                         :fields="UsuariosColumnas"
                                         :current-page="currentPage"
                                         :per-page="perPage"
                                         stacked="md"
                                         head-variant="light"
                                         show-empty
                                         sticky-header
                                         small
                                         @@filtered="onFiltered">
                                    <template #cell(name)="row">
                                        {{ row.value.first }} {{ row.value.last }}
                                    </template>

                                    <template #cell(ACCIONES)="row">
                                        <b-avatar v-on:click="listarSedes(), ID = row.item.ID" title="Editar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                        <b-avatar v-if="row.item.ACCIONES==1" v-on:click="elegirSwitch({ID:row.item.ID}) " title="permiso" button icon="star-fill" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                        <b-avatar v-if="row.item.ACCIONES==0" v-on:click="elegirSwitch({ID:row.item.ID})" title="permiso" button icon="star" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                    </template>
                                </b-table>
                            </b-row>
                            <br />

                            <!-- User Interface controls -->
                            <b-row>
                                <b-col sm="5" md="6" class="my-1">
                                    <b-form-group label="Per page"
                                                  label-for="per-page-select"
                                                  label-cols-sm="6"
                                                  label-cols-md="4"
                                                  label-cols-lg="3"
                                                  label-align-sm="right"
                                                  label-size="sm"
                                                  class="mb-0">
                                        <b-form-select id="per-page-select"
                                                       v-model="perPage"
                                                       :options="pageOptions"
                                                       size="sm"></b-form-select>
                                    </b-form-group>
                                </b-col>

                                <b-col sm="7" md="6" class="my-1">
                                    <b-pagination v-model="currentPage"
                                                  :total-rows="totalRows"
                                                  :per-page="perPage"
                                                  align="fill"
                                                  size="sm"
                                                  class="my-0"></b-pagination>
                                </b-col>
                            </b-row>
                        </b-container>
                    </template>
                </b-overlay>

            </div>

        </div>
    </div>

    <b-modal id="solicitarSede" size="md" data-html="true" hide-footer hide-header >
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header colorSanPablo" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">LISTA DE CLÍNICAS</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <div class="row">
                                <div class="col-xs-12 col-md-6 col-lg-6 cajaTexto">
                                    <p>Elige uno, para continuar</p>
                                </div>
                            </div>
                            <div class="row">
                                <br /><br />
                                <div class="col-xs-4 col-md-4 colorSanPablo" v-for="i in ListaSedes">
                                    <div class="row ">
                                        <div class="col-12  " v-on:click="elegirSede( { ID: i.ID, CCOD_EMPRESA: i.CCOD_EMPRESA, CCOD_SUCURSAL: i.CCOD_SUCURSAL, SEDE: i.SEDE } )">
                                            <span style="font-size:14px; color:  white;"><b>{{i.SEDE}}</b></span>
                                        </div>
                                    </div>
                                    <hr />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

</div>

<script>

    const configImg = {
            headers: { Authorization: `Bearer ${'@Session["Token"].ToString()'}` }
    };

    var app = new Vue({
        el: '#app',
        data: {
            ID_USUARIO: '@User.Identity.Name',
            USUARIO: '@Session["Usuario"].ToString()',
            SERVER_URL: '@apiServidor',
            ID_SEDE: '@Session["ID_SEDE"].ToString()',
            SEDE: '@Session["SEDE"].ToString()',

            ID: 0,
            COD_EMPRESA : '',
            COD_SUCURSAL: '',
            SEDE        : '',

            PAGINA: '@Title',
            SITE: '',

            oID_USUARIO: 0,
            oUSUARIO: '',
            oPASSWORD: '',
            oNOMBRES: '',
            oAPELLIDOS: '',
            oCORREO: '',
            oCANAL: '',
            oRUTA: '',

            GRUPO: '',
            ROL:'',

            ListaUsuarios: [],
            ListaUsuariosSinFiltro: [],
            ListaGrupos: [],
            ListaGruposxUsuario: [],
            ListaRoles: [],
            ListaRolesxUsuario: [],
            ListaSedes: [],
            show: false,
            totalRows: 1000,
            currentPage: 1,
            perPage: 100,
            pageOptions: [100, 500, 1000, { value: 10000, text: "Show a lot" }],
            sortBy: '',
            sortDesc: false,
            sortDirection: 'asc',
            filter: '',
            filterOn: [],
            UsuariosColumnas: ['ID', 'USUARIO', 'APELLIDOS', 'NOMBRES', { key: 'CORREO', label: 'SEDE ASIGNADA' },'ACCIONES','USUARIO_CREADOR','FECHA'],
            Columnas: [
                'ID', 'TITULO', 'SEDE',  'FECHA',  { key: 'RESULTADO', label: 'ACCIONES' }, 'ID_ROL'
            ],
            infoModal: {
                id: 'info-modal',
                title: '',
                content: ''
            }
        },
        mounted() {
            this.totalRows = this.ListaUsuarios.length
        },
        methods: {
            mostrarToast(variant = null) {
                this.$bvToast.toast(variant.msg, {
                    title: `Alerta de sistema`,
                    variant: variant.toast,
                    solid: true
                })
            },

            onFiltered(filteredItems) {
                this.totalRows = filteredItems.length;
                this.currentPage = 1;
            },
            buscar: function () {
                if (this.filter.length > 0) {
                    let palabra = this.filter.toUpperCase();
                    this.ListaUsuarios = this.ListaUsuariosSinFiltro.filter(x => {
                        return x.TITULO.includes(palabra);
                    });
                }
                else {
                    this.ListaUsuarios = this.ListaUsuariosSinFiltro;
                }
                this.currentPage = 1;
            },

            asignar(item) {
                let cantidad = this.ListaGruposxUsuario.filter(x => x.TITULO == item.TITULO);
                if (cantidad.length < 1) {
                    this.show = true;
                    axios.post(this.SERVER_URL + '/api/Grupo/AddGrupoxUsuario', {
                        ID: this.oID_USUARIO,
                        ID_GRUPO: item.ID,
                        ID_USUARIO: this.oID_USUARIO,
                        ID_SEDE: this.ID_SEDE,
                    }, configImg).then(response => {
                        if (response.data.ID > 0) {
                            this.show = false;
                            this.ListaGruposxUsuario.push({ ID: response.data.ID, TITULO: item.TITULO, ACCIONES: '', USUARIO: 'Yo', FECHA: 'Ahora' });
                            this.mostrarToast({ toast: 'success', msg: 'Grupo ' + item.TITULO + ' asignado correctamente' });
                        }
                    }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
                }
            },

            listarGrupos: function () {
                axios.post(this.SERVER_URL + '/api/Grupo/ListarGruposxPrograma', {
                    ID: this.ID_SEDE,
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        this.ListaGrupos = response.data;
                    } else { this.mostrarToast({ toast: 'warning', msg: 'No se pudo cargar lista de grupos' }); }
                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' });
                });
            },


            listarUsuarios: function () {
                this.show = true;
                axios.post(this.SERVER_URL + '/api/CartaGarantia/ListarUsuarios', {
                    ID_USUARIO: this.ID_USUARIO,
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        this.ListaUsuarios = response.data;
                        this.totalRows = this.ListaUsuarios.length;
                        this.ListaUsuariosSinFiltro = response.data;
                        this.show = false;
                    } else {
                        this.mostrarToast({ toast: 'warning', msg: 'No encontramos información ...' });
                    }
                }).catch(e => { });
            },

            Inicio: function () {
                axios.defaults.headers.common['Authorization'] = 'Bearer ' + '@Session["Token"].ToString()';
                this.listarUsuarios();
                //this.listarGrupos();
                //this.listarRoles();
            },
            listarSedes: function () {
                //axios.defaults.headers.common['Authorization'] = 'Bearer ' + this.token;
                axios.post('@apiServidor' + '/api/CartaGarantia/ListarSedes', {
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        let sedes = response.data;
                        let nuevaSede = [];
                        for (let i of sedes) {
                            nuevaSede.push({ CCOD_EMPRESA: i.CCOD_EMPRESA, CCOD_SUCURSAL: i.CCOD_SUCURSAL, SEDE: i.SEDE });
                        }
                        for (let i of sedes) {
                            nuevaSede.push({ CCOD_EMPRESA: i.CCOD_EMPRESA, CCOD_SUCURSAL: i.CCOD_SUCURSAL, SEDE: 'TOMOMEDIC '+i.SEDE });
                        }
                        this.ListaSedes = nuevaSede;
                        this.$bvModal.show('solicitarSede');
                    } else {
                        this.mostrarToast({ toast: 'warning', msg: 'No encontramos información ...' });
                    }
                }).catch(e => { });
            },
            elegirSede: function (item) {
                axios.post('@apiServidor' + '/api/CartaGarantia/AddUsuarioxSede', {
                    ID_USUARIO: this.ID ,
                    COD_EMPRESA: item.CCOD_EMPRESA ,
                    COD_SUCURSAL: item.CCOD_SUCURSAL ,
                    SEDE:  item.SEDE,
                }, configImg).then(response => {
                    if (response.data.V_ID > 0) {
                        this.$bvModal.hide('solicitarSede');
                        this.Inicio();
                    } else {
                        this.mostrarToast({ toast: 'warning', msg: 'No encontramos información ...' });
                    }
                }).catch(e => { });
            },      

            elegirSwitch: function (item) {
                axios.post('@apiServidor' + '/api/CartaGarantia/AdmUsuarioxSede', {
                    ID_USUARIO: item.ID 
                }, configImg).then(response => {
                    if (response.data.V_ID > 0) {
                        this.Inicio();
                    } else {
                        this.mostrarToast({ toast: 'warning', msg: 'No encontramos información ...' });
                    }
                }).catch(e => { });
            },

        }
    })
    app.Inicio();

</script>
