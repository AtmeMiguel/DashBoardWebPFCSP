@{ string Title = "CARTA DE GARANTÍA";
    ViewBag.Title = Title;
    string apiServidor = System.Configuration.ConfigurationManager.AppSettings["API_SERVIDOR"];
    string webServidor = System.Configuration.ConfigurationManager.AppSettings["SERVIDOR"];
}

<div id="app">
    <div class="containerClaro">
        <br />
        <b-overlay :show="show" rounded="lg">
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-lg-12" v-if="ID == 0">
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="card redondoCardLight   shadow-lg">
                                <div class="card-body">
                                    <div class="row colorSanPablo">
                                        <div class="col-sm-8 col-md-8 col-lg-8">
                                            <div class="card-title  text-left text-white">
                                                <br /><h3>Gráfico de avance</h3>
                                            </div>
                                        </div>
                                        <div class="col-sm-4 col-md-4 col-lg-4">
                                            <div class="card-title  text-right text-white">
                                                <br /><span> <b-avatar button icon="bar-chart" size="3rem" variant="light"></b-avatar></span>
                                            </div>
                                        </div>
                                    </div>

                                    <h4 class="text-center">(semanal)</h4>
                                    <br />
                                    <template>
                                        <bar-chart :data="graficoAvance"></bar-chart>
                                    </template>
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 col-lg-9">
                            <div class="card redondoCardLight   shadow-lg">
                                <div class="card-body">

                                    <div class="row colorSanPablo">
                                        <div class="col-sm-8 col-md-8 col-lg-8">
                                            <div class="card-title  text-left text-white">
                                                <br /><h3>
                                                    VERIFICAR CARTA DE GARANTÍA
                                                </h3>
                                            </div>
                                        </div>
                                        <div class="col-sm-4 col-md-4 col-lg-4">
                                            <div class="card-title  text-right text-white">
                                                <br /><span> <b-avatar button icon="alarm" size="3rem" variant="light"></b-avatar></span><span>&nbsp;&nbsp;&nbsp;Tiempo: {{min}} : {{sec}}</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 col-lg-6">
                                            <br /><br /><br /><br />
                                            <template v-for="item in ListaGeneral">
                                                <div class="row">
                                                    <div class="col-lg-6 text-center">

                                                        <b-avatar button icon="tags" v-on:click="pantalla({PANTALLA:'listaPendientes'})" variant="danger" title="Pendiente" class="align-center" size="4em"></b-avatar>
                                                        <br />Pendiente<br /><h4 class="align-center">{{item.PENDIENTE}}</h4>
                                                    </div>
                                                    <div class="col-lg-6 text-center">
                                                        <b-avatar button icon="tags" v-on:click="pantalla({PANTALLA:'graficoEstudios'})" variant="warning" title="Proceso" class="align-center" size="4em"></b-avatar>
                                                        <br />En proceso
                                                        <br />
                                                        <h4 class="align-center">{{item.PROCESO}}</h4>
                                                    </div>
                                                </div>
                                                <hr />
                                                <br />
                                                <br />
                                                <h4 class="text-center">Detalle de casos por Grupo</h4>
                                                <br />
                                                <br />

                                                <div class="row" v-for="e in item.ESTUDIOS">
                                                    <div class="col-lg-12 text-left">
                                                        <span><b-avatar button icon="diagram-3" variant="info" title="Pendiente" class="align-center" size="2em"></b-avatar>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="align-center">{{e.ESTUDIO}} - {{e.GRAFICA}}</span></span><br />
                                                    </div>
                                                </div>
                                            </template>
                                        </div>
                                        <div class="col-sm-6 col-md-6 col-lg-6">
                                            <br /><br /><br /><br /><br /><br />
                                            <h2>Bienvenido</h2>
                                            <br />
                                            <p>Tus talentos y habilidades irán mejorando con el tiempo, pero para eso has de empezar</p><br /><br />

                                            <div class="col-sm-6 col-md-10 col-lg-10 text-right">
                                                <template v-for="item in ListaGeneral">
                                                    <templat v-if="item.PENDIENTE > 0 || item.PROCESO > 0">
                                                        <b-button v-on:click="iniciar( { ID: 0, ID_SOURCE: 0, ID_GRUPO: 0 } )" variant="outline-info" pill><b-avatar variant="outline-info" icon="power" size="2rem"></b-avatar>Iniciar</b-button>
                                                </template>
                                            </div>
                                        </div>
                                    </div>


                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xs-12 col-sm-12 col-lg-12" v-else="ID == 0">
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="card redondoCardLight  shadow-lg">
                                <div class="card-body">
                                    <div class="row colorSanPablo">
                                        <div class="col-sm-8 col-md-8 col-lg-8">
                                            <div class="card-title  text-left text-white">
                                                <br /><h3>N° Carta: {{NUM_CARTA}}</h3>
                                            </div>
                                        </div>
                                        <div class="col-sm-4 col-md-4 col-lg-4">
                                            <div class="card-title  text-right text-white">
                                                <br /><span> <b-avatar button icon="bar-chart" size="3rem" variant="light"></b-avatar></span>
                                            </div>
                                        </div>
                                    </div>
                                    <br />
                                    <template v-if="CONTRATO==''">
                                        <b-card no-body>
                                            <b-tabs pills card vertical>
                                                <b-tab title="N° Contrato" active>
                                                    <div class="row">
                                                        <div class="col-12"><br /><b-form-input v-model="TEXTO_BUSQUEDA" placeholder="Ingresar números" oninput="this.value = this.value.replace(/[^0-9.]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1');"></b-form-input></div>
                                                        <div class="col-12 text-right"><b-avatar button v-on:click="buscarPaciente({COMODIN: TEXTO_BUSQUEDA, TIPO: 1})" icon="search" size="3rem" variant="light"></b-avatar></div>
                                                    </div>
                                                </b-tab>
                                                <b-tab title="Doc. Identidad">
                                                    <div class="row">
                                                        <div class="col-12"><br /><b-form-input v-model="TEXTO_BUSQUEDA" placeholder="Ingresar números" oninput="this.value = this.value.replace(/[^0-9.]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1');"></b-form-input></div>
                                                        <div class="col-12 text-right"><b-avatar button v-on:click="buscarPaciente({COMODIN: TEXTO_BUSQUEDA, TIPO: 2})" icon="search" size="3rem" variant="light"></b-avatar></div>
                                                    </div>
                                                </b-tab>
                                                <b-tab title="Paciente">
                                                    <div class="row">
                                                        <div class="col-12"><br /><b-form-input v-model="TEXTO_BUSQUEDA" v-on:keyup="validaCampos(1)" placeholder="Ingresar letras"></b-form-input></div>
                                                        <div class="col-12 text-right"><b-avatar button v-on:click="buscarPaciente({COMODIN: TEXTO_BUSQUEDA, TIPO: 3})" icon="search" size="3rem" variant="light"></b-avatar></div>
                                                    </div>
                                                </b-tab>
                                            </b-tabs>
                                        </b-card>
                                    </template>

                                    <template v-if="CONTRATO!=''">
                                        <div class="row">
                                            <div class="col-12 text-center">
                                                <br /><br />
                                                <span><b>{{ASEGURADO}}</b></span><br />
                                                <span class="text-black-50" style="font-size:11px; ">Cod. Asegurado:{{COD_ASEGURADEP}}</span>
                                            </div>
                                        </div>
                                        <br />
                                        <span>Contratante: {{CONTRATANTE}}</span>
                                        <br />
                                        <span>Titular: {{TITULAR}}</span>
                                        <br />
                                        <span>N° Documento: {{NRO_DOCUMENTO}}</span>
                                        <br />
                                        <span>Promotor: {{PROMOTOR}}</span>
                                        <br />
                                        <br />
                                        <div class="row">
                                            <div class="col-7 text-left">
                                                <span>N° Contrato: <b>{{CONTRATO}}</b></span><br />
                                                <span class="text-black-50" style="font-size:11px;">Fecha vigencia: {{FEC_INIVIGSEG}}</span>
                                                <span class="text-black-50" style="font-size:11px;">Fecha registro: {{FEC_REGSEGURO}}</span>
                                            </div>
                                            <div class="col-5 text-right"><b-button pill variant="light">{{PLAN}}</b-button></div>
                                        </div>
                                        <br />
                                        <hr />

                                        <div class="row">
                                            <div class="col-xs-12 col-md-6 col-lg-12 cajaTexto">
                                                <span class="text-black-50 text-sm-right">Fecha de Orden<b-badge v-if="FEC_HOSPITAL.length<4" pill variant="danger">!</b-badge></span><br />
                                                <b-form-datepicker id="datepicker-invalid" v-model="FEC_HOSPITAL"
                                                                   :max="max" locale="es" class="mb-2" readonly
                                                                   :show-decade-nav="false" :hide-header="false"
                                                                   :date-format-options="{ year: 'numeric', month: 'short', day: '2-digit', weekday: 'short' }"></b-form-datepicker>
                                            </div>
                                            <div class="col-xs-12 col-md-6 col-lg-12 cajaTexto">
                                                <span class="text-black-50 text-sm-right">Fecha Registro<b-badge v-if="FEC_SOLICITUD.length<4" pill variant="danger">!</b-badge></span><br />
                                                <b-form-datepicker id="datepicker-invalid2" v-model="FEC_SOLICITUD"
                                                                   :max="max" locale="es" class="mb-2" readonly
                                                                   :show-decade-nav="false" :hide-header="false"
                                                                   :date-format-options="{ year: 'numeric', month: 'short', day: '2-digit', weekday: 'short' }"></b-form-datepicker>
                                            </div>
                                        </div>
                                        <br />
                                        <div class="row">
                                            <div class="col-xs-12 col-md-12 col-lg-12 cajaTexto text-right text-info" style="padding-top:0.7rem;">
                                                Agregar una cobertura&nbsp;&nbsp;&nbsp;<b-avatar button v-on:click="COBERTURA='', listarCoberturas()" title="Elegir para ver la lista de coberturas" icon="search" size="2.0rem" variant="info"></b-avatar>
                                            </div>
                                            <template>
                                                <div class="accordion" role="tablist">
                                                    <b-card no-body class="mb-1" v-for="(ii, index) in listaCoberturasAgregadas">
                                                        <b-card-header header-tag="header" class="p-1">
                                                            <b-button block v-b-toggle.accordion-1 class="colorSanPablo">
                                                                <b-icon icon="trash" font-scale="1.3" variant="ligth" v-on:click="eliminarCoberturaAgregada({ID: ii.ID})"></b-icon>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                                {{ii.COBERTURA}} 
                                                            </b-button>
                                                        </b-card-header>
                                                        <b-collapse id="accordion-1" visible accordion="my-accordion" role="tabpanel">
                                                            <b-card-body>
                                                                <b-card-text>Copago:&nbsp;&nbsp;<span style="font-size: 12px; line-height: 1;">{{ii.COPAGO}}</span>&nbsp;&nbsp;Deducible: &nbsp;&nbsp;<span class="text-black-50 text-lg-right" style="font-size: 12px; line-height: 1;">{{ii.DEDUCIBLE}}</span>
                                                                <b-icon icon="pencil-square" font-scale="1.3" variant="ligth" v-on:click="ID_COBERTURA= ii.ID, COPAGO= ii.COPAGO, COBERTURA= ii.COBERTURA, DEDUCIBLE= ii.DEDUCIBLE,   editarCoberturaAgregada()"></b-icon>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b-card-text>
                                                            </b-card-body>
                                                        </b-collapse>
                                                    </b-card>
                                                </div>
                                            </template>
                                        </div>
                                    </template>
                                </div>
                            </div>
                            <br />
                        </div>
                        <div class="col-xs-12 col-lg-9">
                            <div class="card redondoCardLight shadow-lg">
                                <div class="card-body">
                                    <div class="row colorSanPablo">
                                        <div class="col-sm-8 col-md-8 col-lg-8">
                                            <div class="card-title  text-left text-white">
                                                <br /><h3>
                                                    {{SEDE}} {{ COD_EMPRESA}}
                                                    {{COD_SUCURSAL}}
                                                </h3>
                                            </div>
                                        </div>
                                        <div class="col-sm-4 col-md-4 col-lg-4">
                                            <div class="card-title  text-right text-white">
                                                <br /><span> <b-avatar button icon="alarm" size="3rem" variant="light"></b-avatar></span><span>&nbsp;&nbsp;&nbsp;Tiempo: {{min}} : {{sec}}</span>
                                            </div>
                                        </div>
                                    </div>
                                    <br />

                                    <div class="row" v-if="CONTRATO==''">
                                        <template v-for="i in listaAfiliados">
                                            <div class="col-sm-4 col-md-4 col-lg-4 cajaGrisDelgado">
                                                <div class="row">
                                                    <div class="col-12 text-center">
                                                        <span><b>{{i.ASEGURADO}}</b></span><br />
                                                        <span class="text-black-50" style="font-size:11px; ">Cod. Aseguradora:{{i.COD_ASEGURADEP}}</span>
                                                    </div>
                                                </div>
                                                <br />
                                                <span>Contratante: {{i.CONTRATANTE}}</span><br />
                                                <span>Titular: {{i.TITULAR}}</span><br />
                                                <span>Promotor: {{i.PROMOTOR}}</span>
                                                <br />
                                                <br />
                                                <div class="row">
                                                    <div class="col-7 text-left">
                                                        <span>N° Contrato: <b>{{i.CONTRATO}}</b></span><br />
                                                        <span class="text-black-50" style="font-size:11px;">Fecha vigencia: {{i.FEC_INIVIGSEG}}</span>
                                                        <span class="text-black-50" style="font-size:11px;">Fecha registro: {{i.FEC_REGSEGURO}}</span>

                                                    </div>
                                                    <div class="col-5 text-right"><b-button pill variant="info" v-on:click=" elegirAfiliado({ GRUPO: i.GRUPO, CONTRATO: i.CONTRATO, COD_ASEGURADEP: i.COD_ASEGURADEP, ASEGURADO:i.ASEGURADO, CONTRATANTE:i.CONTRATANTE, TITULAR:i.TITULAR, PROMOTOR:i.PROMOTOR, FEC_REGSEGURO: i.FEC_REGSEGURO, FEC_INIVIGSEG: i.FEC_INIVIGSEG, PLAN: i.PLAN })">{{i.PLAN}}</b-button></div>
                                                </div>
                                            </div>
                                        </template>
                                    </div>

                                    <div class="row" v-if="CONTRATO!=''">
                                        <div class="col-xs-12 col-md-3 col-lg-4 cajaTexto">
                                            <span class="text-black-50 text-sm-right">Médico tratante<b-badge v-if="MEDICO.length<10" pill variant="danger">!</b-badge></span> <br />
                                            <b-form-input v-model="MEDICO" class="cajaTexto2" readonly type="text" v-bind:title="MEDICO" v-on:keyup="CMP='', validaCampos(5)" placeholder="médico"></b-form-input>
                                        </div>
                                        <div class="col-xs-12 col-md-2 col-lg-2 cajaTexto">
                                            <span class="text-black-50 text-sm-right">CMP<b-badge v-if="CMP.length<3" pill variant="danger">!</b-badge></span> <br />
                                            <b-form-input v-model="CMP" class="cajaTexto2" readonly type="text" v-on:keyup="MEDICO=''" placeholder="CMP"></b-form-input>
                                        </div>

                                        <div class="col-xs-12 col-md-3 col-lg-4 cajaTexto">
                                            <span class="text-black-50 text-sm-right">Diagnóstico<b-badge v-if="DIAGNOSTICO.length<4" pill variant="danger">!</b-badge></span><br />
                                            <b-form-input v-model="DIAGNOSTICO" class="cajaTexto2" readonly type="text" v-bind:title="DIAGNOSTICO" v-on:keyup="CIE='', validaCampos(5)" placeholder="Ingrese Diagnóstico"></b-form-input>
                                        </div>
                                        <div class="col-xs-12 col-md-2 col-lg-2 cajaTexto">
                                            <span class="text-black-50 text-sm-right">CIE10<b-badge v-if="CIE.length<3" pill variant="danger">!</b-badge></span><br />
                                            <b-form-input v-model="CIE" class="cajaTexto2" readonly type="text" v-on:keyup="DIAGNOSTICO='', validaCampos(7)" placeholder="Ingrese CIE 10"></b-form-input>
                                        </div>
                                    </div>

                                    <div class="row" v-if="CONTRATO!=''">

                                        <div class="col-xs-12 col-md-6 col-lg-3 cajaTexto">
                                            <span class="text-black-50 text-sm-right">Límite carta garantía<b-badge v-if="LIMITE_CG.length<1" pill variant="danger">!</b-badge></span><br />
                                            <b-form-input v-model="LIMITE_CG" class="cajaTexto2" type="text" readonly placeholder="Límite carta garantía" oninput="this.value = this.value.replace(/[^0-9.]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1');"></b-form-input>   @*v-on:keyup="validaCampos(2)"*@
                                            <b-form-invalid-feedback id="input-live-feedback">
                                                Debe contener solo números y punto decimal.
                                            </b-form-invalid-feedback>
                                        </div>
                                        <div class="col-xs-12 col-md-6 col-lg-3 cajaTexto">
                                            <span class="text-black-50 text-sm-right">Complejidad carta<b-badge v-if="COMPLEJIDAD_CARTA == 'SELECCIONAR'" pill variant="danger">!</b-badge></span> <br />
                                            <b-form-input v-model="COMPLEJIDAD_CARTA" class="cajaTexto2" type="text" readonly></b-form-input>

                                        </div>
                                        <div class="col-xs-12 col-md-6 col-lg-6 cajaTexto">
                                            <span class="text-black-50 text-sm-right">Plan de trabajo<b-badge v-if="PLAN_TRABAJO.length<5" pill variant="danger">!</b-badge></span> <br />
                                            <b-form-input v-model="PLAN_TRABAJO" class="cajaTexto2" type="text" v-bind:title="PLAN_TRABAJO" readonly></b-form-input>
                                        </div>
                                        <div class="col-xs-12 col-md-6 col-lg-3 cajaTexto">
                                            <span class="text-black-50 text-sm-right">Área<b-badge v-if="AREA.length<3" pill variant="danger">!</b-badge></span> <br />
                                            <b-form-input v-model="AREA" class="cajaTexto2" type="text" readonly></b-form-input>
                                        </div>
                                        <div class="col-xs-12 col-md-4 col-lg-3 cajaTexto">
                                            <span class="text-black-50 text-sm-right">Código tarifario<b-badge v-if="COD_TARIFARIO.length<2" pill variant="danger">!</b-badge></span><br />
                                            <b-form-input v-model="COD_TARIFARIO" readonly class="cajaTexto2" type="text"></b-form-input>

                                        </div>

                                        <div class="col-xs-12 col-md-6 col-lg-6 cajaTexto">
                                            <span class="text-black-50 text-sm-right">Procedimiento<b-badge v-if="PROCEDIMIENTO.length<3" pill variant="danger">!</b-badge></span><br />
                                            <b-form-input v-model="PROCEDIMIENTO" readonly class="cajaTexto2" type="text" v-bind:title="PROCEDIMIENTO"></b-form-input>
                                        </div>

                                    </div>
                                    <div class="row" v-if="CONTRATO!=''">
                                        <div class="col-xs-12 col-md-12 col-lg-6 cajaTexto">
                                            <span class="text-black-50 text-sm-right">Observación</span><br />
                                            <b-form-textarea id="textarea" v-model="OBSERVACION" placeholder="llenar Observación ..." rows="3" class="cajaTexto2" max-rows="6"></b-form-textarea>
                                        </div>
                                        <div class="col-xs-12 col-md-12 col-lg-6 cajaTexto">
                                            <span class="text-black-50 text-sm-right">Observación</span><br />
                                            <b-form-textarea id="textarea2" v-model="OBSERVACION_" readonly placeholder="" v-bind:title="OBSERVACION_" rows="3" class="cajaTexto2" max-rows="6"></b-form-textarea>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-xs-12 col-md-6 col-lg-3 cajaTexto">
                                            <span class="text-black-50 text-sm-right">Estado<b-badge v-if="ESTADO.length<5" pill variant="danger">!</b-badge></span> <br />
                                            <b-form-select v-model="ESTADO" class="cajaTexto2" v-on:change="cargarDropdow()">
                                                <template #first>
                                                    <b-form-select-option v-model="SELECCIONAR" value="null" disabled>SELECCIONAR</b-form-select-option>
                                                </template>
                                                <b-form-select-option v-for="i in ListaEstado" :key="i.ID" :value="i.TITULO">{{i.TITULO}}</b-form-select-option>
                                            </b-form-select>
                                        </div>
                                        <div v-if="ListaSubEstado.length>1" class="col-xs-12 col-md-6 col-lg-3 cajaTexto">
                                            <span class="text-black-50 text-sm-right">Sub Estado<b-badge v-if="SUB_ESTADO.length<5" pill variant="danger">!</b-badge></span> <br />
                                            <b-form-select v-model="SUB_ESTADO" class="cajaTexto2">
                                                <template #first>
                                                    <b-form-select-option v-model="SELECCIONAR" value="null" disabled>SELECCIONAR</b-form-select-option>
                                                </template>
                                                <b-form-select-option v-for="i in ListaSubEstado" :key="i.ID" :value="i.TITULO">{{i.TITULO}}</b-form-select-option>
                                            </b-form-select>
                                        </div>
                                        <div class="col-sm-12 col-md-12 col-lg-6">
                                            <div class="text-right">
                                                <b-button-group>
                                                    <span class="btn btn-link text-primary" style="width:70px" title="Detalles" v-on:click="verDetalle()">
                                                        <span class="badge badge-light text-black-50" style="font-size: 11px; height: 11px; margin-top: -30px;  z-index: 10;">Detalles</span>
                                                        <b-avatar title="Detalles" variant="outline-secundary" icon="bookmarks" size="5rem"></b-avatar>
                                                    </span>

                                                    <span class="btn btn-link text-primary" style="width:70px" title="Subir medio probatorio" v-on:click="pantallaExterna( {ID: ID_SOURCE, EXT: '.png'})">
                                                        <span class="badge badge-light text-black-50" style="font-size: 11px; height: 11px; margin-top: -30px;  z-index: 10;">Archivo</span>
                                                        <b-avatar title="Archivo" variant="outline-secundary" icon="file-image" size="5rem"></b-avatar>
                                                    </span>

                                                    <span class="btn btn-link text-warning" style="width:70px" title="Guardar pendiente" v-on:click="GuardarAvance()">
                                                        <span class="badge badge-light text-black-50" style="font-size: 11px; height: 11px; margin-top: -30px;  z-index: 10;">Pendiente</span>
                                                        <b-avatar variant="outline-info" icon="battery-half" size="5rem"></b-avatar>
                                                    </span>
                                                    <span class="btn btn-link text-warning" style="width:70px" title="Agendar revisión" v-on:click="pantalla({PANTALLA:'agendar'})">
                                                        <span class="badge badge-light text-black-50" style="font-size: 11px; height: 11px; margin-top: -30px;  z-index: 10;">Agendar</span>
                                                        <b-avatar variant="outline-info" icon="calendar3" size="5rem"></b-avatar>
                                                    </span>
                                                    <span class="btn btn-link text-warning" style="width:70px" title="Guardar final" v-on:click="Guardar()">
                                                        <span class="badge badge-light text-black-50" style="font-size: 11px; height: 11px; margin-top: -30px;  z-index: 10;">Guardar</span>
                                                        <b-avatar variant="outline-info" icon="trophy" size="5rem"></b-avatar>
                                                    </span>
                                                </b-button-group>
                                                <br /><br />
                                            </div>
                                        </div>
                                    </div>


                                    <div class="row" v-if="CONTRATO!=''">
                                        <div class="col-sm-12 col-md-12 col-lg-12">
                                            <div class="card redondoCardLight   colorFondo" style="height: 500px;">
                                                <div class="card-body">
                                                    <div class="row" style=" margin-top: -10px; overflow: scroll; height: 500px; ">
                                                        <template v-for="(item, index) in ListaExpedientes">

                                                            <div class="col-xs-12 col-sm-12 col-lg-4">
                                                                <span class="btn btn-link text-dark" style="height: 250px; padding: 10px; cursor: zoom-in;">
                                                                    <span class="badge badge-light text-black-50" style="font-size: 8px; height: 10px; margin-top: -30px; margin-left: 20px; z-index: 10;">{{item.TITULO}}</span>
                                                                    <template v-if="item.EXT == '.pdf'">
                                                                        <img v-on:click="abrirPDF(URL + item.BANNER)" src="../Recursos/pdf.jpg" style="border-radius: 18px; object-fit: cover; " class="cajaGrisClaroDelgado" height="200px" width="100%">
                                                                    </template>
                                                                    <template v-else="item.EXT == '.pdf'">
                                                                        <img v-img v-bind:src="URL + item.BANNER" v-if="item.STATUS=='1'" class="cajaGrisClaroDelgado" style="border-radius: 18px; object-fit: cover; " height="200px" width="100%">
                                                                        <img v-img v-bind:src="URL + item.BANNER" v-if="item.STATUS=='0'" class="cajaRojoClaroDelgado" style="border-radius: 18px; object-fit: cover; filter: blur(0.4rem);" height="200px" width="100%">
                                                                    </template>

                                                                    <template v-if="item.STATUS== '1'">
                                                                        <span class="bg-light" style="position: relative; bottom: 60px; right: 0px; z-index: 10; padding: 15px; border-radius: 18px; ">
                                                                            <b-button-group>
                                                                                <span v-on:click="fileEliminar({ ID: item.ID, TITULO: item.TITULO, EXT: item.EXT, STATUS: 0, BANNER: item.BANNER })"> <img src="../icons/trash3.svg" style="height: 30px; width: 30px; "></span>
                                                                                <span style="padding-left:25px" v-on:click="fileDescargar({ID: item.ID, TITULO: item.TITULO, EXT: item.EXT, STATUS :1, URL: URL + item.BANNER, LABEL: item.TITULO + item.EXT, BANNER: item.BANNER })"> <img src="../icons/arrow-down-circle.svg" style="height: 30px; width: 30px; "></span>
                                                                            </b-button-group>
                                                                        </span>
                                                                    </template>
                                                                    <template v-if="item.STATUS== '0'">
                                                                        <span class="bg-danger" style="position: relative; bottom: 60px; right: 0px; z-index: 10; padding: 15px; border-radius: 18px; ">
                                                                            <b-button-group>
                                                                                <span v-on:click="fileEliminar({ ID: item.ID, TITULO: item.TITULO, EXT: item.EXT, STATUS: 1, BANNER: item.BANNER })"> <img src="../icons/arrow-repeat.svg" style="height: 30px; width: 30px; "></span>
                                                                                <span style="padding-left:25px" v-on:click="fileDescargar({ID: item.ID, TITULO: item.TITULO, EXT: item.EXT, STATUS :1, URL: URL + item.BANNER, LABEL: item.TITULO + item.EXT, BANNER: item.BANNER })"> <img src="../icons/arrow-down-circle.svg" style="height: 30px; width: 30px; "></span>
                                                                            </b-button-group>
                                                                        </span>
                                                                    </template>
                                                                </span>
                                                                <br />
                                                            </div>
                                                        </template>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>



                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </b-overlay>
    </div>



    <b-modal id="listaPendientes" size="xl" data-html="true" hide-footer hide-header @@hide="listarGraficoGeneral">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <b-row style=" height: 550px; overflow: scroll; ">
                        <b-table :items="ListaPendiente"
                                 :fields="Columnas"
                                 stacked="md"
                                 head-variant="light"
                                 show-empty
                                 sticky-header
                                 small>
                            <template #cell(name)="row">
                                {{ row.value.first }} {{ row.value.last }}
                            </template>

                            <template #cell(ID)="row">
                                <b-avatar v-on:click="darPrioridad(row.item, row.index, $event.target)" title="dar prioridad" button icon="award" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                            </template>
                        </b-table>
                    </b-row>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="graficoEstudios" size="lg" data-html="true" hide-footer hide-header @@hide="listarGraficoGeneral">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <b-row style=" height: 550px; overflow: scroll; ">
                        <b-table :items="ListaProceso"
                                 :fields="Columnas"
                                 stacked="md"
                                 head-variant="light"
                                 show-empty
                                 sticky-header
                                 small>
                            <template #cell(name)="row">
                                {{ row.value.first }} {{ row.value.last }}
                            </template>

                            <template #cell(ID)="row">
                                <b-avatar v-on:click="darPrioridad(row.item, row.index, $event.target)" title="dar prioridad" button icon="award" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                            </template>
                            <template #cell(ACCIONES)="row">

                                <b-badge v-if="row.item.ACCIONES =='PROCESO'" pill variant="warning">{{row.item.ACCIONES}}</b-badge>
                                <b-badge v-if="row.item.ACCIONES =='AGENDADO'" pill variant="info">{{row.item.ACCIONES}}</b-badge>
                                <b-badge v-if="row.item.ACCIONES =='GRUPO'" pill variant="dark">{{row.item.ACCIONES}}</b-badge>
                            </template>
                        </b-table>
                    </b-row>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="agendar" size="md" data-html="true" hide-footer hide-header>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header colorSanPablo" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">AGENDAR REGISTRO</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">

                            <b-row>
                                <b-col cols="12" class="mb-3"></b-col>
                                <p>Value: <b>'{{ value }}'  '{{ hora }}'</b></p>
                            </b-row>

                            <b-row>
                                <b-col cols="8">
                                    <b-calendar v-model="value" :min="minH" :max="maxH" locale="es" :state="false" class="mb-2"></b-calendar>
                                </b-col>
                                <b-col cols="4">
                                    <b-form-timepicker v-model="hora"></b-form-timepicker>

                                    <br /><br /><br />
                                    <hr />
                                    <br /><br /><br /><br /><br />
                                    <div class="text-center">
                                        <b-avatar button icon="briefcase" v-on:click="GuardarAgendado()" variant="light" title="Agendar revisión" class="align-center" size="4em"></b-avatar><br /><h4 class="align-center">Guardar</h4>

                                    </div>
                                </b-col>

                            </b-row>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="nuevo" size="md" data-html="true" hide-footer hide-header>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header bg-info" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">LISTA DE ESTUDIOS</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <template>
                                <p>Elige un grupo para empezar</p>
                                <br />
                                <div class="row">
                                    <div class="col-xs-6 col-md-6" v-for="i in ListaGruposxUsuario">
                                        <div class="bg-light">
                                            <b-avatar button icon="briefcase" v-on:click="configurar( { ID: 0, ID_SOURCE: 0, ID_GRUPO: i.ACCIONES } )" variant="info" title="Pendiente" class="align-center" size="4em"></b-avatar><br /><h4 class="align-center">{{i.TITULO}}</h4>
                                        </div>
                                    </div>
                                </div>
                            </template>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>


    <b-modal id="solicitarMedico" size="xl" data-html="true" hide-footer hide-header>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header colorSanPablo" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">LISTA DE MÉDICOS</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <div class="row">
                                <div class="col-xs-12 col-md-6 col-lg-6 cajaTexto">
                                    <p>Elige uno, para continuar</p>
                                </div>
                                <div class="col-xs-12 col-md-6 col-lg-6 cajaTexto">
                                    <b-form-input v-model="CAMPO" class="cajaTexto2" v-on:keyup="buscarMedico()" type="text"></b-form-input>
                                </div>
                            </div>
                            <div class="row">
                                <br /><br />
                                <div class="col-xs-4 col-md-4" v-for="i in listaMedicos">
                                    <div class="row">
                                        <div class="col-9 text-left">
                                            <span style="font-size:14px;">CMP: <b>{{i.CMP}}</b></span><br /><span style="font-size:11px;" class="text-black">{{i.MEDICO}}</span>
                                        </div>
                                        <div class="col-3 text-center">
                                            <b-avatar button icon="person-circle" variant="warning" title="Médico" class="align-center" size="4em" v-on:click="elegirMedico( { CMP: i.CMP, MEDICO: i.MEDICO } )"></b-avatar>
                                        </div>
                                    </div>
                                    <hr />
                                    @*<div class="bg-light">
                                            <b-avatar button icon="briefcase" v-on:click="configurar( { ID: 0, ID_SOURCE: 0, ID_GRUPO: i.ACCIONES } )" variant="info" title="Pendiente" class="align-center" size="4em"></b-avatar><h4 class="align-center">{{i.MEDICO}}</h4>
                                        </div>*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="solicitarCobertura" size="xl" data-html="true" hide-footer hide-header @@hide="CAMPO='', ID_COBERTURA='' ">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header colorSanPablo" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">LISTA DE COBERTURA</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text" v-if="COBERTURA==''">
                            <div class="row">
                                <div class="col-xs-12 col-md-6 col-lg-6 cajaTexto">
                                    <p>Elige uno, para continuar</p>
                                </div>
                                <div class="col-xs-12 col-md-6 col-lg-6 cajaTexto">
                                    <b-form-input v-model="CAMPO" class="cajaTexto2" v-on:keyup="buscarCobertura()" type="text"></b-form-input>
                                </div>
                            </div>
                            <div class="row" >
                                <br />
                                <div class="col-xs-4 col-md-4"  v-for="i in listaCoberturas">
                                    <div class="row">
                                        <div class="col-9 text-left">
                                            <span style="font-size:14px;"><b>{{i.COBERTURA}}</b></span><br />
                                            <span style="font-size:12px;">{{i.VIGENCIA}}</span>-<span style="font-size:11px;" class="text-black">{{i.CVALCOM}}</span><br />
                                            <span style="font-size:11px;" class="text-black">CoPago:&nbsp;{{i.COPAGO}}</span>&nbsp;&nbsp;&nbsp;<span v-if="i.DEDUCIBLE != '0'" style="font-size:11px;" class="text-black">Deducible:&nbsp;{{i.DEDUCIBLE}}</span>
                                        </div>
                                        <div class="col-3 text-center"> 
                                            <b-avatar button icon="prescription2" variant="warning" title="Cobertura" class="align-center" size="4em" v-on:click=" GRUPO_COBERTURA = i.GRUPO, COBERTURA = i.COBERTURA, COPAGO=i.COPAGO, DEDUCIBLE='', listaCoberturas = []"></b-avatar>
                                        </div>
                                    </div>
                                    <hr />
                                </div>
                            </div>
                        </div>
                        <div class="card-text" v-if="COBERTURA != ''">
                            <div class="row" v-if="listaCoberturas.length>0" >
                                <div class="col-xs-12 col-md-12 col-lg-12 cajaTexto text-left text-info " style="padding-top:0.7rem;">
                                    Volver a visualizar coberturas&nbsp;&nbsp;&nbsp;<b-avatar button v-on:click=" listaCoberturas = listaCoberturas_" title="volver a visualizar coberturas" icon="arrow-repeat" size="2.5rem" variant="info"></b-avatar>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-xs-12 col-md-4 col-lg-2 cajaTexto reDim">
                                    <span class="text-black-50 text-sm-right">COPAGO (%)<b-badge v-if="COPAGO.length<1" pill variant="danger">!</b-badge></span><br />
                                    <b-form-input v-model="COPAGO" readonly class="cajaTexto2" type="text"></b-form-input>
                                </div>
                                <div class="col-xs-12 col-md-6 col-lg-5 cajaTexto reDim">
                                    <span class="text-black-50 text-sm-right">Cobertura<b-badge v-if="COBERTURA.length<5" pill variant="danger">!</b-badge></span><br />
                                    <b-form-input v-model="COBERTURA" readonly class="cajaTexto2" type="text" v-bind:title="COBERTURA" placeholder="Cobertura"></b-form-input>
                                </div>
                                <div class="col-xs-12 col-md-4 col-lg-4 cajaTexto reDim">
                                    <span class="text-black-50 text-sm-right">Deducible<b-badge v-if="DEDUCIBLE.length<1" pill variant="danger">!</b-badge></span><br />
                                    <b-form-input v-model="DEDUCIBLE" class="cajaTexto2" type="text" placeholder="Deducible"></b-form-input>
                                    <b-form-invalid-feedback id="input-live-feedback">
                                        Debe contener minimo 2 digitos.
                                    </b-form-invalid-feedback>
                                </div>
                                <div class="col-xs-12 col-md-1 col-lg-1 cajaTexto text-left " style="padding-top:0.7rem;">
                                    <b-avatar button v-on:click=" elegirCobertura( { GRUPO: GRUPO_COBERTURA, COBERTURA: COBERTURA, COPAGO: COPAGO, DEDUCIBLE: DEDUCIBLE } )" title="Elegir una coberturas" icon="prescription2" size="2.5rem" variant="info"></b-avatar>
                                </div>
                            </div>
                            <div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="solicitarDiagnostico" size="xl" data-html="true" hide-footer hide-header>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header colorSanPablo" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">LISTA DE DIAGNOSTICOS</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <div class="row">
                                <div class="col-xs-12 col-md-6 col-lg-6 cajaTexto">
                                    <p>Elige uno, para continuar</p>
                                </div>
                                <div class="col-xs-12 col-md-6 col-lg-6 cajaTexto">
                                    <b-form-input v-model="CAMPO" class="cajaTexto2" v-on:keyup="buscarDiagnostico()" type="text"></b-form-input>
                                </div>
                            </div>
                            <div class="row">
                                <br /><br />
                                <div class="col-xs-4 col-md-4" v-for="i in listaDiagnosticos">
                                    <div class="row">
                                        <div class="col-9 text-left">
                                            <span style="font-size:14px;">CIE10: <b>{{i.CIE}}</b></span><br /><span style="font-size:11px;" class="text-black">{{i.DIAGNOSTICO}}</span>
                                        </div>
                                        <div class="col-3 text-center">
                                            <b-avatar button icon="virus" variant="warning" title="Diagnostico" class="align-center" size="4em" v-on:click="elegirDiagnostico( { CIE: i.CIE, DIAGNOSTICO: i.DIAGNOSTICO } )"></b-avatar>
                                        </div>
                                    </div>
                                    <hr />
                                    @*<div class="bg-light">
                                            <b-avatar button icon="briefcase" v-on:click="configurar( { ID: 0, ID_SOURCE: 0, ID_GRUPO: i.ACCIONES } )" variant="info" title="Pendiente" class="align-center" size="4em"></b-avatar><h4 class="align-center">{{i.MEDICO}}</h4>
                                        </div>*@
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="solicitarProcedimiento" size="xl" data-html="true" hide-footer hide-header>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header colorSanPablo" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">LISTA DE PROCEDIMIENTOS</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <div class="row">
                                <div class="col-xs-12 col-md-6 col-lg-6 cajaTexto">
                                    <p>Elige uno, para continuar</p>
                                </div>
                                <div class="col-xs-12 col-md-6 col-lg-6 cajaTexto">
                                    <b-form-input v-model="CAMPO" class="cajaTexto2" v-on:keyup="buscarProcedimiento()" type="text"></b-form-input>
                                </div>
                            </div>
                            <div class="row">
                                <br /><br />
                                <div class="col-xs-4 col-md-4" v-for="i in ListaProcedimiento">
                                    <div class="row">
                                        <div class="col-9 text-left">
                                            <span style="font-size:14px;">CÓDIGO: <b>{{i.COD_TARIFARIO}}</b></span><br /><span style="font-size:11px;" class="text-black">{{i.PROCEDIMIENTO}}</span>
                                        </div>
                                        <div class="col-3 text-center">
                                            <b-avatar button icon="heart-pulse" variant="warning" title="Diagnostico" class="align-center" size="4em" v-on:click="elegirProcedimiento( { COD_TARIFARIO: i.COD_TARIFARIO, PROCEDIMIENTO: i.PROCEDIMIENTO } )"></b-avatar>
                                        </div>
                                    </div>
                                    <hr />
                                    @*<div class="bg-light">
                                            <b-avatar button icon="briefcase" v-on:click="configurar( { ID: 0, ID_SOURCE: 0, ID_GRUPO: i.ACCIONES } )" variant="info" title="Pendiente" class="align-center" size="4em"></b-avatar><h4 class="align-center">{{i.MEDICO}}</h4>
                                        </div>*@
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="solicitarSede" size="md" data-html="true" hide-footer hide-header no-close-on-backdrop no-close-on-esc>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header colorSanPablo" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">LISTA DE CLÍNICAS</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <div class="row">
                                <div class="col-xs-12 col-md-6 col-lg-6 cajaTexto">
                                    <p>Elige uno, para continuar</p>
                                </div>
                            </div>
                            <div class="row">
                                <br /><br />
                                <div class="col-xs-4 col-md-4 " v-for="i in ListaSedes">
                                    <div class="row colorSanPablo">
                                        <div class="col-12  " v-on:click="elegirSede( { COD_EMPRESA: i.CCOD_EMPRESA, COD_SUCURSAL: i.CCOD_SUCURSAL, SEDE: i.SEDE } )">
                                            <span style="font-size:14px; color:  white;"><b>{{i.SEDE}}</b></span>
                                        </div>
                                    </div>
                                    <hr />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="solicitarCartaDetalle" size="lg" data-html="true" hide-footer hide-header>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header colorSanPablo" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">
                                DETALLE DE ATENCIÓN CARTA {{NUM_CARTA}}
                            </strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <div class="row">
                                <br /><br />
                                <div class="col-xs-12 col-md-12 " v-for="i in ListaCartaDetalle">
                                    <div class="row colorSanPablo">
                                        <div class="col-12  ">
                                            <div>
                                                <span class="text-white">{{i.FECHA}} | {{i.ESTADO}} | {{i.USUARIO}} </span>&nbsp;&nbsp;&nbsp;&nbsp;<b-button v-b-toggle.collapse-1 variant="light">ver observación</b-button>&nbsp;&nbsp;&nbsp;&nbsp;<b-button v-b-toggle.collapse-2 variant="warning">ver LOG registro</b-button>
                                                <b-collapse id="collapse-1" class="mt-2">
                                                    <b-card>
                                                        <b-card>{{i.OBSERVACION}}</b-card>

                                                    </b-card>
                                                </b-collapse>
                                                <b-collapse id="collapse-2" class="mt-2">
                                                    <b-card>
                                                        <b-card>{{i.DETALLE}}</b-card>
                                                    </b-card>
                                                </b-collapse>
                                            </div>
                                        </div>
                                    </div>
                                    <hr />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>


    <b-modal id="ImageCarta" size="xl" data-html="true" hide-footer hide-header @@hide="cargarExpedientes">
        <div class="col-xs-12">
            <b-embed type="iframe"
                     aspect="16by9"
                     v-bind:src="SITE"
                     allowfullscreen></b-embed>
        </div>
    </b-modal>
</div>
<script>

    const configImg = {
            headers: { Authorization: `Bearer ${'@Session["Token"].ToString()'}` }
        };

    const now = new Date()
    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate())
    // 15th two months prior
    const minDate = new Date(today)
    minDate.setDate(minDate.getDate())
    //minDate.setDate(15)
    // 15th in two months
    const maxDate = new Date(today)
    maxDate.setMonth(maxDate.getMonth() + 1)
    //maxDate.setDate(15)
    const maxDate15 = new Date(today)
    maxDate15.setDate(maxDate15.getDate() + 20)


    var app = new Vue({
        el: '#app',
        data: {
            ID_USUARIO: '@User.Identity.Name',
            SERVER_URL: sessionStorage.getItem('SERVER_URL'),
            SERVER_API: '@apiServidor',

            ID_SEDE: '@Session["ID_SEDE"].ToString()',
            SEDE: '@Session["SEDE"].ToString()',
            ROL: '@Session["ROL"].ToString()',
            USUARIO: '@Session["USUARIO"].ToString()',
            ID_GRUPO: sessionStorage.getItem('IMAGE'),
            GRUPO: '',
            GRUPO_COBERTURA: '',
            URL: '@webServidor',
            //URL: 'https://appstest.sanpablo.com.pe/Dashboard',
            //URL: 'https://localhost:44361',
            PLANTILLA: '',
            ID: 0,
            ID_FILE: 0,
            ID_SOURCE: 0,
            TXT_OBSERVACION: '',
            SELECCIONAR: 'SELECCIONAR',
            TEXTO_BUSQUEDA: '',
            COD_EMPRESA: '',
            COD_SUCURSAL: '',
            SEDE: '',

            NUM_CARTA: '',
            CONTRATO: '',
            PROMOTOR        : '',
            CONTRATANTE     : '',
            ASEGURADO: '',
            FEC_INIVIGSEG: '',
            FEC_REGSEGURO: '',
            PLAN: '',
            COD_PLAN: '',
            TITULAR         : '',
            COD_ASEGURADEP: '',

            MEDICO: '',
            DIAGNOSTICO: '',
            FEC_HOSPITAL: '',
            FEC_SOLICITUD: '',
            LIMITE_CG: '',
            COBERTURA: '',
            COPAGO: '',
            DEDUCIBLE: '',
            BENECICIO_MAXIMO: '',
            AREA: 'SELECCIONAR',
            PLAN_TRABAJO: 'SELECCIONAR',
            MOTIVO: 'SELECCIONAR',
            PROCEDIMIENTO: '',
            COD_TARIFARIO: '',
            OBSERVACION: '',
            OBSERVACION_: '',
            NRO_DOCUMENTO: '',
            CMP: '',
            CIE: '',
            ESTADO: 'SELECCIONAR',
            SUB_ESTADO: 'SELECCIONAR',
            FECHA_ATENCION: '',
            COMPLEJIDAD_CARTA: '',

            ID_COBERTURA: '',
            MODULOS: [],
            CAMPOS: {},
            CAMPO: '',
            SITE: '',
            show: false,
            value: [],
            currentTime: 1,
            min: 0,
            max: minDate,
            sec: 0,
            CONTAR: false,
            context: '',
            value: '',
            hora: '09:00',
            minH: minDate,
            maxH: maxDate,


            graficoAvance: [],
            ListaGruposxUsuario: [],
            ListaItem: [],
            ListaSedes: [],
            ListaBandeja: [],
            ListaQueList: [],
            ListaGeneral: [],
            ListaProceso: [],
            ListaExpedientes: [],
            listaAfiliados: [],
            ListaArea: [],
            ListaPlanTrabajo: [],
            ListaMotivo: [],
            listaMedicos: [],
            listaMedicos_: [],
            listaDiagnosticos: [],
            listaDiagnosticos_: [],
            listaCoberturas: [],
            listaCoberturas_: [],
            ListaProcedimiento: [],
            ListaProcedimiento_: [],
            ListaComplejidad: [],
            ListaCartaDetalle: [],
            ListaEstado: [],
            ListaPendiente: [],
            ListaSubEstado: [],
            listaCoberturasAgregadas: [],
            Columnas: ['ID', 'TITULO', 'ACCIONES', 'FECHA'],
        },
        computed: {
            availableOptions() {
                return this.options.filter(opt => this.value.indexOf(opt) === -1)
            }
        },
        methods: {
            mostrarToast(variant = null) {
                this.$bvToast.toast(variant.msg, {
                    title: `Alerta de sistema`,
                    variant: variant.toast,
                    solid: true
                })
            },

            updateCurrentTime() {
                if (this.currentTime > 0 && this.currentTime < 3600000 && this.CONTAR == true) {
                    setTimeout(() => {
                        this.currentTime += 1
                        this.min = Math.trunc((this.currentTime) / 60) % 60;
                        this.min = this.min > 9 ? this.min : '0' + this.min;
                        this.sec = Math.trunc((this.currentTime)) % 60;
                        this.sec = this.sec > 9 ? this.sec : '0' + this.sec;
                        this.updateCurrentTime()
                    }, 1000)
                }
            },

            pantallaExterna: function (item) {
                this.SITE = './ImagenCarta/?idSource=' + item.ID + '&idUsuario=' + this.ID_USUARIO;
                this.$bvModal.show('ImageCarta');
            },

            buscarPaciente: function (item) {
                this.listaAfiliados = [];
                let paciente = item.COMODIN.toUpperCase();
                axios.post(this.SERVER_API + '/api/CartaGarantia/listaPacientes', {
                    NUM_CONTRATO: item.COMODIN, // '010027668',
                    NOM_PACIENTE: paciente, //
                    NUM_DOCUMENTO: item.COMODIN,
                    TIPO: item.TIPO,
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        this.listaAfiliados = response.data;
                    } else {
                        this.mostrarToast({ toast: 'warning', msg: 'No encontramos información ...' });
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'No encontramos información ...' });
                });
            },

            elegirAfiliado: function (it) {
                this.CONTRATO = it.CONTRATO;
                this.COD_ASEGURADEP = it.COD_ASEGURADEP;
                this.ASEGURADO = it.ASEGURADO;
                this.CONTRATANTE = it.CONTRATANTE;
                this.TITULAR = it.TITULAR;
                this.PROMOTOR = it.PROMOTOR;
                this.PLAN = it.PLAN;
                this.FEC_REGSEGURO = it.FEC_REGSEGURO;
                this.FEC_INIVIGSEG = it.FEC_INIVIGSEG;
                this.listaAfiliados = [];
            },

            listarDiagnostico: function () {
                if (this.CIE.length > 2 || this.DIAGNOSTICO.length > 2) {
                    let tipo = (this.CIE.length > 2) ? 0 : 1;
                    axios.post(this.SERVER_API + '/api/CartaGarantia/ListarDiagnosticos', {
                        CIE: this.CIE,
                        DIAGNOSTICO: this.DIAGNOSTICO,
                        TIPO: tipo,
                    }, configImg).then(response => {
                        if (response.data.length > 0) {
                            this.listaDiagnosticos = response.data;        //alert(JSON.stringify(lista));
                            this.listaDiagnosticos_ = response.data;

                            this.$bvModal.show('solicitarDiagnostico');
                        } else {
                            this.mostrarToast({ toast: 'warning', msg: 'No encontramos información ...' });
                        }
                    }).catch(e => { });
                }
            },

            buscarDiagnostico: function (item) {
                if (this.CAMPO.length > 0) {
                    let palabra = this.CAMPO.toUpperCase();
                    this.listaDiagnosticos = this.listaDiagnosticos_.filter(x => {
                        return x.CAMPO_BUSQUEDA.includes(palabra);
                    });
                }
                else {
                    this.listaDiagnosticos = this.listaDiagnosticos_;
                }
            },

            elegirDiagnostico: function (item) {
                this.CIE = item.CIE;
                this.DIAGNOSTICO = item.DIAGNOSTICO;
                this.listaDiagnosticos = [];
                this.listaDiagnosticos_ = [];
                this.CAMPO = '';
                this.stateDiagnostico = true;
                this.$bvModal.hide('solicitarDiagnostico');
            },

            listarMedico: function () {
                if (this.CMP.length > 2 || this.MEDICO.length > 2) {
                    let tipo = (this.CMP.length > 2) ? 0 : 1;
                    axios.post(this.SERVER_API + '/api/CartaGarantia/listarMedicos', {
                        CMP: this.CMP,
                        MEDICO: this.MEDICO,
                        TIPO: tipo,
                    }, configImg).then( response => {
                        if (response.data.length > 0) {
                            this.listaMedicos = response.data;        //alert(JSON.stringify(lista));
                            this.listaMedicos_ = response.data;
                            //alert(JSON.stringify(this.listaMedicos_));
                            this.$bvModal.show('solicitarMedico');
                        } else {
                            this.mostrarToast({ toast: 'warning', msg: 'No encontramos información ...' });
                        }
                    }).catch(e => { });
                }
            },

            buscarMedico: function () {
                if (this.CAMPO.length > 0) {
                    let palabra = this.CAMPO.toUpperCase();
                    this.listaMedicos = this.listaMedicos_.filter(x => {
                        return x.CAMPO_BUSQUEDA.includes(palabra);
                    });
                }
                else {
                    this.listaMedicos = this.listaMedicos_;
                }
            },

            elegirMedico: function (item) {
                this.CMP = item.CMP;
                this.MEDICO = item.MEDICO;
                this.listaMedicos = [];
                this.listaMedicos_ = [];
                this.CAMPO = '';
                this.stateMedico = true;
                this.$bvModal.hide('solicitarMedico');
            },

            validaCampos(item) {
                switch (item) {
                    case 1: {
                        this.TEXTO_BUSQUEDA = this.TEXTO_BUSQUEDA.toUpperCase();
                        break;
                    }
                    case 2: {
                        this.stateLimiteCG = false;
                        this.stateDeducible = false;
                        this.stateLimiteCG = this.LIMITE_CG.length < 2 ? false : true;
                        this.stateDeducible = this.DEDUCIBLE.length < 2 ? false : true;
                        break;
                    }
                    case 3: {
                        this.stateArea = false;
                        this.statePlanTrabajo = false;
                        this.stateMotivo = false;

                        this.stateArea = this.AREA != 'SELECCIONAR' ? true : false;
                        this.statePlanTrabajo = this.PLAN_TRABAJO != 'SELECCIONAR' ? true : false;
                        this.stateMotivo = this.MOTIVO != 'SELECCIONAR' ? true : false;
                        break;
                    }


                    case 4: {
                        // this.stateApeMaterno = this.APE_MATERNO.length < 2 ? false : true; this.APE_MATERNO = this.APE_MATERNO.toUpperCase(); break;
                        if (/^[a-zA-ZÁÉÍÓÚáéíóúñÑ ]+$/.test(this.APE_MATERNO)) {

                            if (this.APE_MATERNO != null) {
                                if (this.APE_MATERNO.trim().length < 3) {

                                    this.stateApeMaterno = false;
                                } else {
                                    this.APE_MATERNO = this.APE_MATERNO.toUpperCase();
                                    this.stateApeMaterno = true;
                                }
                            }
                        } else {
                            //this.APE_MATERNO = '';
                            this.stateApeMaterno = false;
                        }
                        break;
                    }
                    case 5: {
                        this.MEDICO = this.MEDICO.toUpperCase();
                        this.DIAGNOSTICO = this.DIAGNOSTICO.toUpperCase();
                        this.PROCEDIMIENTO = this.PROCEDIMIENTO.toUpperCase();
                        break;
                    }

                    case 6: {
                        this.stateFecHospital = false;
                        this.stateFecSolicitud = false;
                        this.stateFecHospital = this.FEC_HOSPITAL != null ? true : false;
                        this.stateFecSolicitud = this.FEC_SOLICITUD != null ? true : false;
                        break;
                    }
                }
                //this.validarFormulario();
            },

            //onclick="window.open(URL + PLANTILLA + '/' + item.BANNER, '_blank', 'location=yes,height=570,width=520,scrollbars=yes,status=yes');"
            abrirPDF: function (url) {
                // Abrir nuevo tab
                var win = window.open(url, '_blank', 'location=yes,height=570,width=520,scrollbars=yes,status=yes');
                // Cambiar el foco al nuevo tab (punto opcional)
                win.focus();
            },

            pantalla: function (item) {
                this.$bvModal.show(item.PANTALLA);
            },

            configurar: function (item) {
                this.show = true;
                axios.post(this.SERVER_URL + '/api/Formulario/Mantenimiento', {
                    ID: item.ID,
                    ID_SOURCE: item.ID_SOURCE,
                    ID_GRUPO: item.ID_GRUPO,
                    ID_SEDE: this.ID_SEDE,
                    ID_USUARIO: this.ID_USUARIO,
                    TIPO: 30,
                }, configImg).then(response => {
                    if (response.data.ID > 0) {
                        this.show = false;
                        this.$bvModal.hide('nuevo');
                        this.iniciar();
                    }
                }).catch(e => {
                });
            },
            //MODIFICADO ML                         //   alert(JSON.stringify(response.data));
            iniciar: async function () {
                this.show = true;
                await axios.post(this.SERVER_API + '/api/Grupo/IniciarQueuexGrupoSede', {
                    ID: 0,
                    ID_SOURCE: 0,
                    ID_GRUPO: 17,
                    ID_SEDE: this.ID_SEDE,
                    ID_USUARIO: this.ID_USUARIO
                }, configImg).then(response => {
                    if (response.data.ID > 0) {
                        this.show = false;
                        if (this.CONTAR == false) { this.CONTAR = true; this.updateCurrentTime(); }
                        this.PLANTILLA = response.data.PLANTILLA;
                        this.ID = response.data.ID;
                        this.ID_SOURCE = response.data.ID_SOURCE;
                        this.ID_GRUPO = response.data.ID_GRUPO;
                        this.cargarRegistro();
                        this.cargarExpedientes();
                    }
                }).catch(e => {
                });
            },

            cargarRegistro: async function () {
                await axios.post(this.SERVER_API + '/api/CartaGarantia/ListarCarta', {
                    ID: this.ID_SOURCE,
                    ID_USUARIO: this.ID_USUARIO,
                    USUARIO: this.USUARIO,
                    ID_SEDE: this.ID_SEDE,
                }, configImg).then(response => {
                    if (response.data.ID > 0) {
                        this.listarCoberturasAgregadas();
                        if (response.data.NUMCONTRATOPF != null) {
                            this.GRUPO = response.data.GRUPO;
                            this.NUM_CARTA = response.data.NUM_CARTA;
                            this.CONTRATO = response.data.NUMCONTRATOPF;
                            this.PROMOTOR = response.data.PROMOTOR;
                            this.CONTRATANTE = response.data.CONTRATANTE;
                            this.NRO_DOCUMENTO = response.data.NRO_DOCUMENTO;
                            this.ASEGURADO = response.data.AFILIADO;
                            this.FEC_INIVIGSEG = response.data.FEC_VIG_AFILIACION,
                            this.FEC_REGSEGURO = response.data.FEC_INI_AFILIACION, // response.data.FEC_INI_AFILIACION;
                            //this.FEC_REGSEGURO = response.data.FEC_INI_AFILIACION;
                            this.COD_ASEGURADEP = response.data.COD_ASEGURADEP;
                            this.TITULAR = response.data.CONTRATANTE;
                            this.PLAN = response.data.DSC_PLAN;
                            this.COD_PLAN = response.data.COD_PLAN,
                            this.MEDICO = response.data.MEDICO_TRATANTE == null ? '' : response.data.MEDICO_TRATANTE ;
                            this.DIAGNOSTICO = response.data.DIAGNOSTICO == null ? '' : response.data.DIAGNOSTICO;
                            this.FEC_HOSPITAL = response.data.FEC_HOSPITALIZACION == null ? '' : response.data.FEC_HOSPITALIZACION;
                            this.FEC_SOLICITUD = response.data.FEC_SOLICITUD == null ? '' : response.data.FEC_SOLICITUD;
                            this.LIMITE_CG = response.data.LIM_CARTA == null ? 0 : response.data.LIM_CARTA;
                            this.BENECICIO_MAXIMO = response.data.BENECICIO_MAXIMO == null ? 0 : response.data.BENECICIO_MAXIMO;
                            // this.COBERTURA = response.data.COBERTURA == null ? '' : response.data.COBERTURA;
                            // this.COPAGO = response.data.COPAGO == null ? '' : response.data.COPAGO;
                            // this.DEDUCIBLE = response.data.DEDUCIBLE == null ? '' : response.data.DEDUCIBLE;
                            this.AREA = response.data.AREA == null ? 'SELECCIONAR' : response.data.AREA;
                            this.PLAN_TRABAJO = response.data.PLAN_TRABAJO == null ? 'SELECCIONAR' : response.data.PLAN_TRABAJO;
                            this.MOTIVO = response.data.DSC_MOTIVO == null ? 'SELECCIONAR' : response.data.DSC_MOTIVO;
                            this.PROCEDIMIENTO = response.data.PROCEDIMIENTO1 == null ? '' : response.data.PROCEDIMIENTO1;
                            this.COD_TARIFARIO = response.data.CODPROC1 == null ? '' : response.data.CODPROC1;
                            this.OBSERVACION = response.data.OBSERVACION;
                            this.OBSERVACION_ = response.data.OBSERVACION_;

                            this.CMP = response.data.CMP == null ? '' : response.data.CMP;
                            this.CIE = response.data.CIE == null ? '' : response.data.CIE;
                            this.COD_EMPRESA = response.data.COD_EMPRESA == null ? '00' : response.data.COD_EMPRESA;
                            this.COD_SUCURSAL = response.data.COD_SUCURSAL == null ? '00' : response.data.COD_SUCURSAL;
                            this.SEDE = response.data.SEDE == null ? '' : response.data.SEDE;
                            this.COMPLEJIDAD_CARTA = response.data.COMPLEJIDAD_CARTA == null ? 'SELECCIONAR' : response.data.COMPLEJIDAD_CARTA;
                            this.ESTADO = 'SELECCIONAR';
                        }
                    }
                }).catch(e => {
                    alert('Ocurrio un error' + e);
                });
            },

            //MODIFICADO ML
            cargarExpedientes: async function () {
                this.ListaExpedientes = [];
                await axios.post(this.SERVER_API + '/api/CartaGarantia/ListarArchivosxCarga', {
                    ID_SOURCE: this.ID_SOURCE,
                    ID_USUARIO: this.ID_USUARIO,
                    USUARIO: this.USUARIO,
                }, configImg).then(response => {
                    this.ListaExpedientes = response.data;
                }).catch(e => {
                });
            },

            doShow: function (field) {
                if (this.CAMPOS[field].if != undefined) {
                    let listaIf = this.CAMPOS[field].if
                    //alert(JSON.stringify(listaIf));
                    for (i in listaIf) {
                        let valor = listaIf[i].object;
                        let valor2 = listaIf[i].igual;
                        let campo = listaIf[i].value;
                        if (this.CAMPOS[valor].value != valor2) {
                            this.CAMPOS[campo].VALIDAR = 0;
                            return false;
                        } else { this.CAMPOS[campo].VALIDAR = 1; }
                    }
                }
                return true;
            },
            //MODIFICADO ML
            Guardar: function () {
                let msg = 'Verificar los siguientes campos: ';
                    msg = this.listaCoberturasAgregadas.length == 0 ? msg + " Agregar cobertura" : msg;
                    msg = this.ESTADO == 'SELECCIONAR' ? msg + " Estado" : msg;
                    if (this.ListaSubEstado.length > 1) {
                        msg = this.SUB_ESTADO == 'SELECCIONAR' ? msg + " Sub Estado" : msg;
                    }
                    if (msg.length > 34) {
                        this.mostrarToast({ toast: 'danger', msg: msg });
                        return 0;
                    } else {
                        this.GuardarProceso({ STATUS: 3 });
                    }
                },

            //MODIFICADO ML
            GuardarAvance: function () {    // MODIFICADO
                let msg = 'Verificar los siguientes campos: ';

                this.ESTADO = 'PENDIENTE';
                this.SUB_ESTADO = '';
                this.GuardarProceso( { STATUS: 2} );
            },

            GuardarAgendado: function () {    // MODIFICADO
                if (this.hora.length > 2 && this.value != '') {
                    this.show = true;
                    let CAMPOS = '';
                    let Plan = '';
                    for (var obj in this.CAMPOS) {
                        let val = `${this.CAMPOS[obj].value}`;
                        val = val.replace("'", " ");
                        CAMPOS = CAMPOS + `${this.CAMPOS[obj].value_}` + '=|' + val + ',|';
                        Plan = Plan + `${this.CAMPOS[obj].NOMBRE}` + ':' + val + '|';
                    }
                    let val = (this.value + ' ' + this.hora.slice(0, 5));
                    this.GuardarProceso({ STATUS: 6, TITULO: val });
                } else { this.mostrarToast({ toast: 'warning', msg: 'Verificar fecha y hora ...' }); }
            },

            //MODIFICADO ML
            GuardarProceso: async function (item) {  // 33 - 39
                if (this.ListaSubEstado.length > 1) {

                } else {
                    this.SUB_ESTADO = '';
                }
                this.show = true;
                await axios.post(this.SERVER_API + '/api/CartaGarantia/VerificarCarta', {
                    ID: this.ID_SOURCE,
                    ID_USUARIO: this.ID_USUARIO,
                    COD_EMPRESA: this.COD_EMPRESA,
                    COD_SUCURSAL: this.COD_SUCURSAL,
                    USUARIO: this.USUARIO,
                    SEDE: this.SEDE,

                    BENECICIO_MAXIMO : this.BENECICIO_MAXIMO == 0 ? '' : this.BENECICIO_MAXIMO,
                    COPAGO: '', //this.COPAGO,
                    COBERTURA: '', //this.COBERTURA,
                    DEDUCIBLE: '', //this.DEDUCIBLE,

                    PLAN_TRABAJO: this.PLAN_TRABAJO == 'SELECCIONAR' ? 'SELECCIONAR' : this.PLAN_TRABAJO  ,
                    PROCEDIMIENTO1: this.PROCEDIMIENTO,
                    CODPROC1: this.COD_TARIFARIO,
                    OBSERVACION: this.OBSERVACION,
                    STATUS: item.STATUS,

                    ESTADO: this.ESTADO,
                    SUB_ESTADO: this.SUB_ESTADO,
                    COMPLEJIDAD: this.COMPLEJIDAD_CARTA,
                    ID_SEDE: this.ID_SEDE,
                }, configImg).then(response => {
                    if (response.data.V_ID > 0) {
                        axios.post(this.SERVER_URL + '/api/Formulario/MantenimientoQUEUE', {
                            ID: this.ID,
                            ID_SOURCE: this.ID_SOURCE,
                            TITULO: item.TITULO,
                            ID_SEDE: this.ID_SEDE,
                            ID_GRUPO: this.ID_GRUPO,
                            ID_USUARIO: this.ID_USUARIO,
                            P_MENSAJE: item.CAMPOS,
                            TIPO: item.STATUS,
                        }, configImg).then(response => {
                            if (response.data.ID > 0) {
                                this.show = false;
                                document.location.href = '../CartaGarantia/Verificar';
                            }
                        }).catch(e => {
                            this.mostrarToast({ toast: 'warning', msg: 'No encontramos información 1...' });
                        });
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: e });

                });
            },

            //MODIFICADO ML
            fileDescargar: function (item) {
                axios.get(item.URL, { responseType: 'blob' })
                    .then(response => {
                        const blob = new Blob([response.data], { type: 'application/pdf' })
                        const link = document.createElement('a')
                        link.href = URL.createObjectURL(blob)
                        link.download = item.LABEL
                        link.click()
                        URL.revokeObjectURL(link.href)
                        this.fileChange({ ID: item.ID, STATUS: 1, TITULO: item.TITULO, EXT: item.EXT, BANNER: item.BANNER });
                    }).catch(console.error)
            },
            //MODIFICADO ML
            fileEliminar: function (item) {
                this.fileChange({ ID: item.ID, STATUS: item.STATUS, TITULO: item.TITULO, EXT: item.EXT, BANNER: item.BANNER });
            },
            //MODIFICADO ML
            fileChange: function (item) {
                this.show = true;
                axios.post(this.SERVER_API + '/api/CartaGarantia/EliminarArchivo', {
                    ID_FILE: item.ID,
                    ID_USUARIO: this.ID_USUARIO,
                    STATUS: item.STATUS,
                }, configImg).then(response => {
                    if (response.data.V_ID > 0) {
                        this.show = false;
                        this.ListaExpedientes = this.ListaExpedientes.filter(x => x.ID != item.ID);
                        this.ListaExpedientes.push({ ID: item.ID, TITULO: item.TITULO, EXT: item.EXT, PESO: 0, IP_USUARIO: '', FECHA: '', STATUS: item.STATUS, BANNER: item.BANNER });
                        this.ListaExpedientes.sort((a, b) => (a.ID > b.ID) ? 1 : ((b.ID > a.ID) ? -1 : 0));
                    } else {
                        this.show = false;
                        this.mostrarToast({ toast: 'warning', msg: 'Ocurrio un error ...' });
                    }
                }).catch(e => {
                });
            },

            grafico: function () {
                this.graficoAvance = [];
                axios.post(this.SERVER_API + '/api/Usuario/ListarUsuariosxCarga_T', {
                    ID: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        let lista1 = response.data;
                        let columnas = {};
                        for (let tajada1 in lista1) {
                            columnas[`${lista1[tajada1].FECHA}`] = `${lista1[tajada1].ID}`; //  alert(JSON.stringify(`${lista[items].ESTADO}`));
                        }
                        this.graficoAvance = columnas;
                    }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            },

            //MODIFICADO ML
            listarGruposxUsuario: function () {   // MODIFICADO
                //this.show = true;
                axios.post(this.SERVER_API + '/api/Grupo/ListarGruposxPrograma', {
                    ID: this.ID_USUARIO,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                }, configImg).then(response => {
                    if (response.data.length > 0) { this.ListaGruposxUsuario = response.data; }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            },
            //MODIFICADO ML
            listarGraficoGeneral: function () {    // MODIFICADO
                this.ListaGeneral = []; this.graficoGeneral = []; this.graficoAvance2 = []; this.ListaProceso = []; this.ListaPendiente = [];
                axios.post(this.SERVER_API + '/api/Grupo/ListarQueuexGrupoSede', {
                    ID: this.ID,
                    ID_GRUPO: 17,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        let lista = response.data;
                        let Pendiente = []; let Proceso = []; let Terminado = []; let Monitores = []; let Estudios = [];
                        Pendiente = lista.filter(x => x.ACCIONES == 'PENDIENTE');
                        Proceso = lista.filter(x => x.ACCIONES == 'PROCESO' || x.ACCIONES == 'AGENDADO' || x.ACCIONES == 'GRUPO');
                        Terminado = lista.filter(x => x.ACCIONES == 'TERMINADO');

                        map = new Map();
                        for (let i of Pendiente) {
                            if (!map.has(i.RESULTADO)) {
                                map.set(i.RESULTADO, true);
                                Estudios.push({ ESTUDIO: i.RESULTADO });
                            }
                        }           //  alert(JSON.stringify(`${lista[items].ESTADO}`));

                        let uno = []; let grupos = { INC: 0 }; let registros = { INC: 0 };    //alert(i.ESTUDIO);
                        for (let i of Estudios) {
                            grupos = {};
                            registros = {};
                            let filas = lista.filter(x => x.RESULTADO == i.ESTUDIO);
                            if (filas.length > 0) {
                                grupos['GRAFICA'] = filas.length; //registros[i.ESTUDIO] = filas.length;
                                grupos['ESTUDIO'] = i.ESTUDIO;
                                uno.push(grupos);
                            }
                        }
                        this.ListaPendiente = Pendiente;
                        this.ListaProceso = Proceso;
                        this.ListaGeneral.push({
                            PENDIENTE: Pendiente.length,
                            PROCESO: Proceso.length,
                            TERMINADO: Terminado.length,
                            TOTAL: lista.length,
                            MONITORES: Monitores.length,
                            ESTUDIOS: uno,
                            //ESTUDIOS: [
                            //    { ESTUDIO: "176 - TOYOTA VENTAS PERU", GRAFICA: { "NICOLAS": 33, "NANCY": 122 } },
                            //            { ESTUDIO: "175 - TOYOTA SERVICIOS PERU", GRAFICA: { "NICOLAS": 23, "NANCY": 10 } },
                            //    { ESTUDIO: "63 - IPSOS BCP_PYME SIN CARTERAS", GRAFICA: { "NICOLAS": 3, "NANCY": 2 } }]
                        });
                    }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ... 2' }); });
            },

            listarItems: function () {
                //axios.defaults.headers.common['Authorization'] = 'Bearer ' + this.token;
                axios.post('@apiServidor' + '/api/Helpers/ListarItems', {
                    ID_GRUPO: 16,
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        this.ListaItems = response.data;        //alert(JSON.stringify(lista));
                        this.ListaItems_ = response.data;
                        this.ListaArea = this.ListaItems_.filter(x => x.ID_CONTROL == 1);
                        this.ListaPlanTrabajo = this.ListaItems_.filter(x => x.ID_CONTROL == 2);
                        this.ListaMotivo = this.ListaItems_.filter(x => x.ID_CONTROL == 3);
                        this.ListaProcedimiento = this.ListaItems_.filter(x => x.ID_CONTROL == 4);
                        this.ListaComplejidad = this.ListaItems_.filter(x => x.ID_CONTROL == 5);
                        this.ListaEstado = this.ListaItems_.filter(x => x.ID_CONTROL == 6);
                        // this.ListaOrigen = this.ListaItems_.filter(x => x.ID_CONTROL == 2);
                    } else {
                        this.mostrarToast({ toast: 'warning', msg: 'Usuario incorrecto ...' });
                    }
                }).catch(e => { });
            },

            listarCoberturas: async function () {
                if (this.SEDE.length > 1) {
                    await axios.post(this.SERVER_API + '/api/CartaGarantia/ObtenerCodigoCobertura', {
                        PLAN: this.COD_PLAN,
                        CONTRATO: this.CONTRATO,
                    }, configImg).then(response => {
                        this.listarCoberturas_2(response.data.COD);
                    }).catch(e => { });
                } else {
                    this.listarSedes();
                }
            },

            listarCoberturas_2: async function (codigo) {
                let url = (this.GRUPO == 'ONCOLOGICO') ? '/api/CartaGarantia/ListarCoberturaOnco' : '/api/CartaGarantia/ListarCoberturas';
                await axios.post(this.SERVER_API + url, {
                    PLAN: codigo, //this.COD_PLAN,
                    CONTRATO: this.CONTRATO,
                    SECUENCIA: this.COD_ASEGURADEP,
                    SUCURSAL: this.COD_SUCURSAL,
                    SEDE: this.COD_EMPRESA,   // this.SEDE,
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        this.listaCoberturas = response.data; // alert(JSON.stringify(this.listaCoberturas));
                        this.listaCoberturas_ = response.data;
                        this.$bvModal.show('solicitarCobertura');
                        this.COBERTURA = '';
                        this.COPAGO = '';
                        this.DEDUCIBLE = '';
                    } else {
                        this.mostrarToast({ toast: 'warning', msg: 'No encontramos información ...' });
                    }
                }).catch(e => { });
            },

            listarCoberturas: async function () {
                if (this.SEDE.length > 1) {
                    let url = (this.GRUPO == 'ONCOLOGICO') ? '/api/CartaGarantia/ListarCoberturaOnco' : '/api/CartaGarantia/ListarCoberturas';
                    await axios.post(this.SERVER_API + url, {
                        PLAN: this.COD_PLAN,
                        CONTRATO: this.CONTRATO,
                        SECUENCIA: this.COD_ASEGURADEP,
                        SUCURSAL: this.COD_SUCURSAL,
                        SEDE: this.COD_EMPRESA,   // this.SEDE,
                    }, configImg).then(response => {
                        if (response.data.length > 0) {
                            this.listaCoberturas = response.data;        //alert(JSON.stringify(lista));
                            this.listaCoberturas_ = response.data;

                            this.COBERTURA = '';
                            this.COPAGO = '';
                            this.DEDUCIBLE = '';
                            this.$bvModal.show('solicitarCobertura');
                        } else {
                            this.mostrarToast({ toast: 'warning', msg: 'No encontramos información ...' });
                        }
                    }).catch(e => { });
                } else {
                    this.listarSedes();
                }
            },

            buscarCobertura: function (item) {
                if (this.CAMPO.length > 0) {
                    let palabra = this.CAMPO.toUpperCase();
                    this.listaCoberturas = this.listaCoberturas_.filter(x => {
                        return x.COBERTURA.includes(palabra);
                    });
                }
                else {
                    this.listaCoberturas = this.listaCoberturas_;
                }
            },

            elegirCobertura: function (item) {
                this.COBERTURA = item.COBERTURA;
                this.COPAGO = item.COPAGO;
                this.DEDUCIBLE = item.DEDUCIBLE;
                this.listaCoberturas = [];
                this.listaCoberturas_ = [];

                if (this.COPAGO.length > 0 && this.DEDUCIBLE.length > 3) {
                    axios.post(this.SERVER_API + '/api/CartaGarantia/InsertarCoberturaCarta', {
                        ID: 0,
                        ID_SOURCE: this.ID_SOURCE,
                        COBERTURA: item.COBERTURA,
                        COPAGO: item.COPAGO,
                        DEDUCIBLE: item.DEDUCIBLE,
                        GRUPO: item.GRUPO,
                        TIPO: 2,
                        ID_USUARIO: this.ID_USUARIO,
                    }, configImg).then(response => {
                        if (response.data.ID > 0) {
                            if (this.ID_COBERTURA > 0) {
                                this.eliminarCoberturaAgregada({ ID: this.ID_COBERTURA });
                                this.listarCoberturasAgregadas();
                            } else { this.listarCoberturasAgregadas(); }
                            
                            this.$bvModal.hide('solicitarCobertura');
                        } else {
                            this.mostrarToast({ toast: 'warning', msg: 'No encontramos información ...' });
                        }
                    }).catch(e => { });
                }
                this.CAMPO = '';
            },

            listarCoberturasAgregadas: async function () {
                this.listaCoberturasAgregadas = [];
                await axios.post(this.SERVER_API + '/api/CartaGarantia/ListarCoberturasAgregadas', {
                    ID: this.ID_SOURCE,
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        this.listaCoberturasAgregadas = response.data;
                    }
                }).catch(e => { });
            },

            eliminarCoberturaAgregada: function (item) {
                axios.post(this.SERVER_API + '/api/CartaGarantia/InsertarCoberturaCarta', {
                    ID: item.ID,
                    TIPO: 3,
                    ID_USUARIO: this.ID_USUARIO,
                }, configImg).then(response => {
                    if (response.data.ID > 0) {
                        this.listarCoberturasAgregadas();
                    } else {
                        this.mostrarToast({ toast: 'warning', msg: 'No encontramos información ...' });
                    }
                }).catch(e => { });
            }, 

            editarCoberturaAgregada: function (item) {
                this.$bvModal.show('solicitarCobertura');
            },

            listarProcedimientos: function () {
                axios.post(this.SERVER_API + '/api/CartaGarantia/ListarProcedimientos', {
                    PROCEDIMIENTO: this.PROCEDIMIENTO,
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        this.ListaProcedimiento = response.data;        //alert(JSON.stringify(lista));
                        this.ListaProcedimiento_ = response.data;
                        this.$bvModal.show('solicitarProcedimiento');
                    } else {
                        this.mostrarToast({ toast: 'warning', msg: 'No encontramos información ...' });
                    }
                }).catch(e => { });
            },

            buscarProcedimiento: function (item) {
                if (this.CAMPO.length > 0) {
                    let palabra = this.CAMPO.toUpperCase();
                    this.ListaProcedimiento = this.ListaProcedimiento_.filter(x => {
                        return x.PROCEDIMIENTO.includes(palabra);
                    });
                }
                else {
                    this.ListaProcedimiento = this.ListaProcedimiento_;
                }
            },

            elegirProcedimiento: function (item) {
                this.PROCEDIMIENTO = item.PROCEDIMIENTO;
                this.COD_TARIFARIO = item.COD_TARIFARIO;
                this.ListaProcedimiento = [];
                this.ListaProcedimiento_ = [];
                this.CAMPO = '';
                this.stateProcedimiento = true;
                this.$bvModal.hide('solicitarProcedimiento');
            },

            listarSedes: function () {
                //axios.defaults.headers.common['Authorization'] = 'Bearer ' + this.token;
                axios.post('@apiServidor' + '/api/CartaGarantia/ListarSedes', {
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        this.ListaSedes = response.data;
                        this.$bvModal.show('solicitarSede');
                    } else {
                        this.mostrarToast({ toast: 'warning', msg: 'No encontramos información ...' });
                    }
                }).catch(e => { });
            },

            verDetalle: function () {
                //axios.defaults.headers.common['Authorization'] = 'Bearer ' + this.token;
                axios.post('@apiServidor' + '/api/CartaGarantia/ListarCartaDetalle', {
                    ID: this.ID_SOURCE,
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        this.ListaCartaDetalle = response.data;
                        this.$bvModal.show('solicitarCartaDetalle');
                    } else {
                        this.mostrarToast({ toast: 'warning', msg: 'No encontramos información ...' });
                    }
                }).catch(e => { });
            },

            elegirSede: function (item) {
                this.COD_EMPRESA= item.COD_EMPRESA;
                this.COD_SUCURSAL= item.COD_SUCURSAL;
                this.SEDE = item.SEDE;
                this.$bvModal.hide('solicitarSede');
                this.listarCoberturas();
            },

            onContext(ctx) {
                this.stateFecHospital = false;
                this.stateFecSolicitud = false;
                if (this.FEC_HOSPITAL.length > 2) { this.stateFecHospital = true; } else { this.stateFecHospital = false; }
                if (this.FEC_SOLICITUD.length > 2) { this.stateFecSolicitud = true; } else { this.stateFecSolicitud = false; }
            },
            darPrioridad: function (item) {
                var opcion = confirm("Deseas asignar prioridad al afiliado - " + item.TITULO + " con carta N° " + item.RESULTADO);
                if (opcion == true) {
                    axios.post(this.SERVER_API + '/api/Grupo/PrioridadQueuexGrupoSede', {
                        ID: item.ID,
                        ID_USUARIO: this.ID_USUARIO,
                        ID_SEDE: this.ID_SEDE,
                    }, configImg).then(response => {
                        if (response.data.ID > 0) {
                            this.listarGraficoGeneral();
                            ;                            //this.ListaProceso = this.ListaProceso.filter(x => x.ID != item.ID);
                        }
                    }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ... 2' }); });

                } else { this.mostrarToast({ toast: 'warning', msg: 'Cancelado por el usuario' }); }
            },
            cargarDropdow: function () {         //alert(JSON.stringify(item));
                this.ListaSubEstado = [];
                this.SUB_ESTADO = 'SELECCIONAR';
                switch (this.ESTADO) {
                    case 'RECHAZADO': {
                        this.ListaSubEstado.push(
                            { ID: 1, TITULO: 'CARENCIA' },
                            { ID: 2, TITULO: 'COBERTURA' });
                        //{ ID: 3, TITULO: 'PERTINENCIA' },
                        //{ ID: 4, TITULO: 'POLÍTICA' });
                        break;
                    }
                    case 'DEVUELTO': {
                        this.ListaSubEstado.push(
                            { ID: 1, TITULO: 'DUPLICIDAD' },
                            { ID: 2, TITULO: 'CAMBIO DE SEDE' },
                            { ID: 3, TITULO: 'NO REQUIERE LA ATENCIÓN' },
                            { ID: 4, TITULO: 'PERTINENCIA MÉDICA' },
                            { ID: 5, TITULO: 'POLÍTICA' });
                        //{ ID: 4, TITULO: 'CUOTA IMPAGA' });
                        break;
                    }
                }
            },

            limpiarSede: function () {
                this.COD_EMPRESA = '';
                this.COD_SUCURSAL = '';
                this.SEDE = '';

                this.COBERTURA = '';
                this.COPAGO = '';
                this.DEDUCIBLE = '';
                this.listarSedes();
            },
        }
    })


    app.listarItems();
    app.listarGraficoGeneral();
    app.grafico();

</script>
