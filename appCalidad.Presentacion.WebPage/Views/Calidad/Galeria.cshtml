@{ string Title = "Galeria";
    ViewBag.Title = Title;
    string apiServidor = System.Configuration.ConfigurationManager.AppSettings["API_SERVIDOR"];
    string urlMVSP = System.Configuration.ConfigurationManager.AppSettings["SERVIDOR_MVSP"];
}

<div id="app">
    <div class="containerClaro">
        <br />
        <b-overlay :show="show" rounded="lg">
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-lg-12" v-if="ID == 0">
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="card redondoCardLight   shadow-lg">
                                <div class="card-body">
                                    <div class="row colorSanPablo">
                                        <div class="col-sm-8 col-md-8 col-lg-8">
                                            <div class="card-title  text-left text-white">
                                                <br /><h3>Gráfico de avance</h3>
                                            </div>
                                        </div>
                                        <div class="col-sm-4 col-md-4 col-lg-4">
                                            <div class="card-title  text-right text-white">
                                                <br /><span> <b-avatar button icon="bar-chart" size="3rem" variant="light"></b-avatar></span>
                                            </div>
                                        </div>
                                    </div>

                                    <h4 class="text-center">(semanal)</h4>
                                    <br />
                                    <template>
                                        <bar-chart :data="graficoAvance"></bar-chart>
                                    </template>
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 col-lg-9">
                            <div class="card redondoCardLight   shadow-lg">
                                <div class="card-body">

                                    <div class="row colorSanPablo">
                                        <div class="col-sm-8 col-md-8 col-lg-8">
                                            <div class="card-title  text-left text-white">
                                                <br /><h3>{{ROL}}</h3>
                                            </div>
                                        </div>
                                        <div class="col-sm-4 col-md-4 col-lg-4">
                                            <div class="card-title  text-right text-white">
                                                <br /><span> <b-avatar button icon="alarm" size="3rem" variant="light"></b-avatar></span><span>&nbsp;&nbsp;&nbsp;Tiempo: {{min}} : {{sec}}</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 col-lg-6">
                                            <br /><br /><br /><br />
                                            <template v-for="item in ListaGeneral">
                                                <div class="row">
                                                    <div class="col-lg-6 text-center">
                                                        <b-avatar button icon="tags" variant="danger" title="Pendiente" class="align-center" size="4em"></b-avatar><br />Pendiente<br /><h4 class="align-center">{{item.PENDIENTE}}</h4>
                                                    </div>
                                                    <div class="col-lg-6 text-center">
                                                        <template v-if="ID_SEDE==7">
                                                            <b-avatar button icon="tags" variant="warning" title="Proceso" class="align-center" size="4em"></b-avatar>
                                                            <br />En proceso
                                                            <br />
                                                            <h4 class="align-center">{{item.PROCESO}}</h4>
                                                        </template>
                                                        <template v-else="ID_SEDE==7">
                                                            <b-avatar button icon="tags" v-on:click="pantalla({PANTALLA:'graficoEstudios'})" variant="warning" title="Proceso" class="align-center" size="4em"></b-avatar>
                                                            <br />En proceso
                                                            <br />
                                                            <h4 class="align-center">{{item.PROCESO}}</h4>
                                                        </template>

                                                    </div>
                                                </div>
                                                <hr />
                                                <br />
                                                <br />
                                                <h4 class="text-center">Detalle de casos por Grupo</h4>
                                                <br />
                                                <br />

                                                <div class="row" v-for="e in item.ESTUDIOS">
                                                    <div class="col-lg-12 text-left">
                                                        <span><b-avatar button icon="diagram-3" variant="info" title="Pendiente" class="align-center" size="2em"></b-avatar>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="align-center">{{e.ESTUDIO}} - {{e.GRAFICA}}</span></span><br />
                                                    </div>
                                                </div>
                                            </template>
                                        </div>
                                        <div class="col-sm-6 col-md-6 col-lg-6">
                                            <br /><br /><br /><br /><br /><br />
                                            <h2>Bienvenido</h2>
                                            <br />
                                            <p>Tus talentos y habilidades irán mejorando con el tiempo, pero para eso has de empezar</p><br /><br />

                                            <div class="col-sm-6 col-md-10 col-lg-10 text-right">
                                                <template v-for="item in ListaGeneral">
                                                    <templat v-if="item.PENDIENTE > 0 || item.PROCESO > 0">
                                                        <b-button v-on:click="iniciar( { ID: 0, ID_SOURCE: 0, ID_GRUPO: 0 } )" variant="outline-info" pill><b-avatar variant="outline-info" icon="power" size="2rem"></b-avatar>Iniciar</b-button>
                                                </template>
                                                @*<b-button v-on:click="pantalla({PANTALLA:'nuevo'})" variant="outline-info" pill><b-avatar variant="outline-info" icon="power" size="2rem"></b-avatar>Nuevo</b-button>*@

                                            </div>
                                        </div>
                                    </div>


                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xs-12 col-sm-12 col-lg-12" v-else="ID == 0">
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="card redondoCardLight  shadow-lg">
                                <div class="card-body">
                                    <div class="row colorSanPablo">
                                        <div class="col-sm-8 col-md-8 col-lg-8">
                                            <div class="card-title  text-left text-white">
                                                <br /><h3>Datos iniciales-ID:{{ID}}</h3>
                                            </div>
                                        </div>
                                        <div class="col-sm-4 col-md-4 col-lg-4">
                                            <div class="card-title  text-right text-white">
                                                <br /><span> <b-avatar button icon="bar-chart" size="3rem" variant="light"></b-avatar></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="inputEmail3" class="col-sm-6 col-form-label  text-right"><b>Perfil del Usuario</b></label>
                                        <label for="inputEmail3" class="col-sm-6 col-form-label  text-right"><b>{{PLANTILLA}}</b></label>
                                    </div>
                                    <div v-for="(q, name) of CAMPOS">
                                        <template v-if="doShow( name )">
                                            <template v-if="q.MODULO == '0'">
                                                <template v-if="q.type == 'input'">
                                                    <div class="form-group row">
                                                        <label for="inputEmail3" class="col-sm-6 col-form-label  text-right"><b>{{ q.NOMBRE }}</b> <em v-if="q.comment">({{ q.comment }})</em> <span class="badge badge-danger"><b v-if="q.value.length==0 || q.value=='' || q.value == undefined"> ! </b></span> </label>
                                                        <div class="col-sm-6">
                                                            <template v-if="q.subtype == 'text'">
                                                                <b-form-input v-model="q.value" class="form-control" :type="q.subtype" placeholder="Ingresar letras ..."></b-form-input>
                                                            </template>
                                                            <template v-if="q.subtype == 'tel'">
                                                                <b-form-input v-model="q.value" class="form-control" :type="q.subtype" placeholder="Ingresar números" oninput="this.value = this.value.replace(/[^0-9.]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1');"></b-form-input>
                                                            </template>
                                                            <template v-if="q.subtype == 'date'">
                                                                <b-form-input v-model="q.value" class="form-control" :type="q.subtype" placeholder="Ingresar fecha"></b-form-input>
                                                            </template>
                                                            <template v-if="q.subtype == 'area'">
                                                                <textarea class="form-control" v-model="q.value" rows="4"></textarea>
                                                            </template>
                                                        </div>
                                                    </div>
                                                </template>
                                                <template v-if="q.type == 'select'">
                                                    <template v-if="q.options.length>0">
                                                        <div class="form-group  row">
                                                            <label for="inputEmail3" class="col-sm-6 col-form-label  text-right"><b>{{ q.NOMBRE }} <em v-if="q.comment"> ({{ q.comment }})</em> <span class="badge badge-danger"><b v-if="q.value.length==0 || q.value=='' || q.value ==undefined"> ! </b></span> </b></label>
                                                            <div class="col-sm-6">
                                                                <b-form-select v-model="q.value" :options="q.options" v-on:change="test(q)"></b-form-select>
                                                            </div>
                                                        </div>
                                                    </template>
                                                </template>
                                                <template v-if="q.type == 'radio'">
                                                    <template v-if="q.options.length>0">
                                                        <div class="form-group  row">
                                                            <label for="inputEmail3" class="col-sm-6 col-form-label  text-right"><b>{{ q.NOMBRE }} <em v-if="q.comment"> ({{ q.comment }})</em><span class="badge badge-danger"><b v-if="q.value.length==0 || q.value=='' || q.value ==undefined"> ! </b></span> </b></label>
                                                            <div class="col-sm-6">
                                                                <b-form-radio-group buttons button-variant="outline-info" name="radio-btn-outline" v-model="q.value" :options="q.options" v-on:change="test(q)" />
                                                            </div>
                                                        </div>
                                                    </template>
                                                </template>

                                                @*<b-form-datepicker id="ex-disabled-readonly" disabled></b-form-datepicker>*@


                                            </template>
                                        </template>
                                    </div>



                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 col-lg-9">
                            <div class="card redondoCardLight   shadow-lg">
                                <div class="card-body">
                                    <div class="row colorSanPablo">
                                        <div class="col-sm-8 col-md-8 col-lg-8">
                                            <div class="card-title  text-left text-white">
                                                <br /><h3>{{ROL}}</h3>
                                            </div>
                                        </div>
                                        <div class="col-sm-4 col-md-4 col-lg-4">
                                            <div class="card-title  text-right text-white">
                                                <br /><span> <b-avatar button icon="alarm" size="3rem" variant="light"></b-avatar></span><span>&nbsp;&nbsp;&nbsp;Tiempo: {{min}} : {{sec}}</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-12 col-md-12 col-lg-12">
                                            <b-card no-body>
                                                <b-tabs pills card vertical end>
                                                    <template v-for="(mod, key) in MODULOS">
                                                        <b-tab v-bind:title="mod.ext" button-variant="outline-info" size="lg" pills>
                                                            <div v-for="(q, name,k) of CAMPOS">
                                                                <template v-if="doShow( name )">
                                                                    <template v-if="q.MODULO != '0' && q.MODULO == mod.ext">
                                                                        <b-card-text>
                                                                            <h2 v-if="name==1" class="bg-info text-white text-center">{{mod.ext}}</h2>
                                                                            <template v-if="q.type == 'input'">
                                                                                <div class="form-group row">
                                                                                    <label for="inputEmail3" class="col-sm-6 col-form-label  text-right"><b>{{ q.NOMBRE }}</b> <em v-if="q.comment">({{ q.comment }})</em> <span class="badge badge-danger"><b v-if="q.value.length==0 || q.value=='' || q.value == undefined "> ! </b></span></label>
                                                                                    <div class="col-sm-6">
                                                                                        <template v-if="q.subtype == 'text'">
                                                                                            <b-form-input v-model="q.value" class="form-control" :type="q.subtype" placeholder="Ingresar letras ..."></b-form-input>
                                                                                        </template>
                                                                                        <template v-if="q.subtype == 'tel'">
                                                                                            <b-form-input v-model="q.value" class="form-control" :type="q.subtype" placeholder="Ingresar números" oninput="this.value = this.value.replace(/[^0-9.]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1');"></b-form-input>
                                                                                        </template>
                                                                                        <template v-if="q.subtype == 'date'">
                                                                                            <b-form-input v-model="q.value" class="form-control" :type="q.subtype" placeholder="Ingresar fecha"></b-form-input>
                                                                                        </template>
                                                                                        <template v-if="q.subtype == 'area'">
                                                                                            <textarea class="form-control" v-model="q.value" rows="4"></textarea>
                                                                                        </template>
                                                                                    </div>
                                                                                </div>
                                                                            </template>

                                                                            <template v-if="q.type == 'select'">
                                                                                <template v-if="q.options.length>0">
                                                                                    <div class="form-group  row">
                                                                                        <label for="inputEmail3" class="col-sm-6 col-form-label  text-right"><b>{{ q.NOMBRE }} <em v-if="q.comment"> ({{ q.comment }})</em> <span class="badge badge-danger"><b v-if="q.value.length==0 || q.value=='' || q.value ==undefined"> ! </b></span> </b></label>
                                                                                        <div class="col-sm-6">
                                                                                            <b-form-select v-model="q.value" :options="q.options" v-on:change="test(q)"></b-form-select>
                                                                                        </div>
                                                                                    </div>
                                                                                </template>
                                                                            </template>
                                                                            <template v-if="q.type == 'radio'">
                                                                                <template v-if="q.options.length>0">
                                                                                    <div class="form-group  row">
                                                                                        <label for="inputEmail3" class="col-sm-6 col-form-label  text-right"><b>{{ q.NOMBRE }} <em v-if="q.comment"> ({{ q.comment }})</em><span class="badge badge-danger"><b v-if="q.value.length==0 || q.value=='' || q.value ==undefined"> ! </b></span> </b></label>
                                                                                        <div class="col-sm-6">
                                                                                            <b-form-radio-group buttons button-variant="outline-info" name="radio-btn-outline" v-model="q.value" :options="q.options" v-on:change="test(q)" />
                                                                                        </div>
                                                                                    </div>
                                                                                </template>
                                                                            </template>
                                                                            <template v-if="q.type == 'multi'">
                                                                                <b-form-group v:bind-label="q.NOMBRE" v-slot="{ ariaDescribedby }">
                                                                                    <b-form-checkbox-group v-model="q.value"
                                                                                                           :options="q.options"
                                                                                                           :aria-describedby="ariaDescribedby"
                                                                                                           plain
                                                                                                           stacked></b-form-checkbox-group>
                                                                                </b-form-group>
                                                                            </template>
                                                                        </b-card-text>
                                                                    </template>
                                                                </template>
                                                            </div>
                                                        </b-tab>
                                                    </template>
                                                </b-tabs>
                                            </b-card>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-sm-12 col-md-12 col-lg-12">
                                            <div class="card redondoCardLight   colorFondo" style="height: 500px;">
                                                <div class="card-body">
                                                    <div class="row" style=" margin-top: -10px; overflow: scroll; height: 500px; ">
                                                        <template v-for="(item, index) in ListaExpedientes">
                                                            <div class="col-xs-12 col-sm-12 col-lg-4">
                                                                <span class="btn btn-link text-dark" style="height: 250px; padding: 10px; cursor: zoom-in;">
                                                                    <span class="badge badge-light text-black-50" style="font-size: 8px; height: 10px; margin-top: -30px; margin-left: 20px; z-index: 10;">{{item.TITULO}}</span>
                                                                    <template v-if="item.CONFIRMAR== 3">
                                                                        <template v-if="item.EXT == '.pdf'">
                                                                            <img v-on:click="abrirPDF(URL + item.BANNER)" src="../Recursos/pdf.jpg" style="border-radius: 18px; object-fit: cover; " class="cajaGrisClaroDelgado" height="200px" width="100%">
                                                                        </template>
                                                                        <template v-else="item.EXT == '.pdf'">
                                                                            <img v-img v-bind:src="URL + item.BANNER" style="border-radius: 18px; object-fit: cover; filter: blur(0.4rem); " class="cajaGrisClaroDelgado" height="200px" width="100%">
                                                                        </template>

                                                                        <span class="bg-danger" style="position: relative; bottom: 60px; right: 0px; z-index: 10; padding: 15px; border-radius: 18px; ">
                                                                            <b-button-group>
                                                                                <span v-on:click="fileEliminar({ ID: item.ID, TITULO: item.TITULO, EXT: item.EXT, STATUS: 3, BANNER: item.BANNER })"> <img src="../icons/hand-thumbs-down.svg" style="height: 30px; width: 30px; "></span>
                                                                                <span style="padding-left:25px" v-on:click="fileDescargar({ID: item.ID, TITULO: item.TITULO, EXT: item.EXT, STATUS :2, URL: URL + item.BANNER, LABEL: item.TITULO + item.EXT, BANNER: item.BANNER })"> <img src="../icons/hand-thumbs-up.svg" style="height: 30px; width: 30px; "></span>
                                                                            </b-button-group>
                                                                        </span>
                                                                    </template>
                                                                    <template v-if="item.CONFIRMAR== 1">
                                                                        <template v-if="item.EXT == '.pdf'">
                                                                            <img v-on:click="abrirPDF(URL + item.BANNER)" src="../Recursos/pdf.jpg" style="border-radius: 18px; object-fit: cover; " class="cajaGrisClaroDelgado" height="200px" width="100%">
                                                                        </template>
                                                                        <template v-else="item.EXT == '.pdf'">
                                                                            <img v-img v-bind:src="URL + item.BANNER" style="border-radius: 18px; object-fit: cover; " class="cajaGrisClaroDelgado" height="200px" width="100%">
                                                                        </template>
                                                                        <span class="bg-light" style="position: relative; bottom: 60px; right: 0px; z-index: 10; padding: 15px; border-radius: 18px; ">
                                                                            <b-button-group>
                                                                                <span v-on:click="fileEliminar({ ID: item.ID, TITULO: item.TITULO, EXT: item.EXT, STATUS: 3, BANNER: item.BANNER })"> <img src="../icons/hand-thumbs-down.svg" style="height: 30px; width: 30px; "></span>
                                                                                <span style="padding-left:25px" v-on:click="fileDescargar({ID: item.ID, TITULO: item.TITULO, EXT: item.EXT, STATUS :2, URL: URL + item.BANNER, LABEL: item.TITULO + item.EXT, BANNER: item.BANNER })"> <img src="../icons/hand-thumbs-up.svg" style="height: 30px; width: 30px; "></span>
                                                                            </b-button-group>
                                                                        </span>
                                                                    </template>
                                                                    <template v-if="item.CONFIRMAR== 2">
                                                                        <template v-if="item.EXT == '.pdf'">
                                                                            <span v-on:click="abrirPDF(URL + item.BANNER)"><img src="../Recursos/pdf.jpg" style="border-radius: 18px; object-fit: cover;" class="cajaGrisClaroDelgado" height="200px" width="100%"></span>

                                                                        </template>
                                                                        <template v-else="item.EXT == '.pdf'">
                                                                            <img v-img v-bind:src="URL + item.BANNER" style="border-radius: 18px; object-fit: cover; " class="cajaGrisClaroDelgado" height="200px" width="100%">
                                                                        </template>

                                                                        <span class="bg-success" style="position: relative; bottom: 60px; right: 0px; z-index: 10; padding: 15px; border-radius: 18px;">
                                                                            <b-button-group>
                                                                                <span v-on:click="fileEliminar({ ID: item.ID, TITULO: item.TITULO, EXT: item.EXT, STATUS: 3, BANNER: item.BANNER })"> <img src="../icons/hand-thumbs-down.svg" style="height: 30px; width: 30px; "></span>
                                                                                <span style="padding-left:25px" v-on:click="fileDescargar({ID: item.ID, TITULO: item.TITULO, EXT: item.EXT, STATUS :2, URL: URL + item.BANNER, LABEL: item.TITULO + item.EXT, BANNER: item.BANNER })"> <img src="../icons/hand-thumbs-up.svg" style="height: 30px; width: 30px; "></span>
                                                                            </b-button-group>
                                                                        </span>
                                                                    </template>
                                                                </span>
                                                                <br />
                                                            </div>
                                                        </template>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-12 col-md-12 col-lg-12">
                                            <div class="text-right">
                                                <b-button-group>
                                                    @*vertical*@



                                                    <span class="btn btn-link text-warning" style="width:70px" title="Guardar pendiente" v-on:click="GuardarAvance()">
                                                        <span class="badge badge-light text-black-50" style="font-size: 11px; height: 11px; margin-top: -30px;  z-index: 10;">Pendiente</span>
                                                        <b-avatar variant="outline-info" icon="battery-half" size="5rem"></b-avatar>
                                                    </span>
                                                    <span class="btn btn-link text-warning" style="width:70px" title="Agendar revisión" v-on:click="pantalla({PANTALLA:'agendar'})">
                                                        <span class="badge badge-light text-black-50" style="font-size: 11px; height: 11px; margin-top: -30px;  z-index: 10;">Agendar</span>
                                                        <b-avatar variant="outline-info" icon="calendar3" size="5rem"></b-avatar>
                                                    </span>
                                                    <span class="btn btn-link text-warning" style="width:70px" title="Guardar final" v-on:click="Guardar()">
                                                        <span class="badge badge-light text-black-50" style="font-size: 11px; height: 11px; margin-top: -30px;  z-index: 10;">Guardar</span>
                                                        <b-avatar variant="outline-info" icon="trophy" size="5rem"></b-avatar>
                                                    </span>
                                                </b-button-group>
                                                <br /><br />
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </b-overlay>
    </div>

    <b-modal id="graficoEstudios" size="lg" data-html="true" hide-footer hide-header @@hide="listarGraficoGeneral">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <b-row style=" height: 550px; overflow: scroll; ">
                        <b-table :items="ListaProceso"
                                 :fields="Columnas"
                                 stacked="md"
                                 head-variant="light"
                                 show-empty
                                 sticky-header
                                 small>
                            <template #cell(name)="row">
                                {{ row.value.first }} {{ row.value.last }}
                            </template>

                            <template #cell(ID)="row">
                                @*<b-avatar v-on:click="eliminar(row.item, row.index, $event.target)" title="Eliminar" button icon="trash" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>*@
                            </template>
                        </b-table>
                    </b-row>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="agendar" size="md" data-html="true" hide-footer hide-header>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header colorSanPablo" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">AGENDAR REGISTRO</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">

                            <b-row>
                                <b-col cols="12" class="mb-3"></b-col>
                                <p>Value: <b>'{{ value }}'  '{{ hora }}'</b></p>
                            </b-row>

                            <b-row>
                                <b-col cols="8">
                                    <b-calendar v-model="value" :min="minH" :max="maxH" locale="es" :state="false" class="mb-2"></b-calendar>
                                </b-col>
                                <b-col cols="4">
                                    <b-form-timepicker v-model="hora"></b-form-timepicker>

                                    <br /><br /><br />
                                    <hr />
                                    <br /><br /><br /><br /><br />
                                    <div class="text-center">
                                        <b-avatar button icon="briefcase" v-on:click="GuardarAgendado()" variant="light" title="Agendar revisión" class="align-center" size="4em"></b-avatar><br /><h4 class="align-center">Guardar</h4>

                                    </div>
                                </b-col>

                            </b-row>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="nuevo" size="md" data-html="true" hide-footer hide-header>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header bg-info" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">LISTA DE ESTUDIOS</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <template>
                                <p>Elige un grupo para empezar</p>
                                <br />
                                <div class="row">
                                    <div class="col-xs-6 col-md-6" v-for="i in ListaGruposxUsuario">
                                        <div class="bg-light">
                                            <b-avatar button icon="briefcase" v-on:click="configurar( { ID: 0, ID_SOURCE: 0, ID_GRUPO: i.ACCIONES } )" variant="info" title="Pendiente" class="align-center" size="4em"></b-avatar><br /><h4 class="align-center">{{i.TITULO}}</h4>
                                        </div>
                                    </div>
                                </div>
                            </template>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

</div>
<script>

    const configImg = {
            headers: { Authorization: `Bearer ${'@Session["Token"].ToString()'}` }
        };

    const now = new Date()
    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate())
    // 15th two months prior
    const minDate = new Date(today)
    minDate.setDate(minDate.getDate())
    //minDate.setDate(15)
    // 15th in two months
    const maxDate = new Date(today)
    maxDate.setMonth(maxDate.getMonth() + 1)
    //maxDate.setDate(15)
    const maxDate15 = new Date(today)
    maxDate15.setDate(maxDate15.getDate() + 20)


    var app = new Vue({
        el: '#app',
        data: {
            ID_USUARIO: '@User.Identity.Name',
            SERVER_URL: sessionStorage.getItem('SERVER_URL'),

            ID_SEDE: '@Session["ID_SEDE"].ToString()',
            SEDE: '@Session["SEDE"].ToString()',
            ROL: '@Session["ROL"].ToString()',
            USUARIO: '@Session["USUARIO"].ToString()',
            ID_GRUPO: sessionStorage.getItem('IMAGE'),
            //URL: 'https://aplicativos.sanpablo.com.pe/PortalPaciente/',
            //URL: 'https://mivida.sanpablo.com.pe/PortalPaciente/',
            URL: '@urlMVSP'+'/', // https://mivida.sanpablo.com.pe/PortalPaciente
            PLANTILLA: '',
            ID: 0,
            ID_FILE: 0,
            ID_SOURCE: 0,
            TXT_OBSERVACION: '',
            MODULOS: [],
            CAMPOS: {},
            CAMPO: '',
            show: false,
            value: [],
            currentTime: 1,
            min: 0,
            sec: 0,
            CONTAR: false,
            context: '',
            value: '',
            hora: '',
            minH: minDate,
            maxH: maxDate,


            graficoAvance: [],
            ListaGruposxUsuario: [],
            ListaItem: [],
            ListaBandeja: [],
            ListaQueList: [],
            ListaGeneral: [],
            ListaProceso: [],
            ListaExpedientes: [],

            Columnas: ['ID', 'TITULO', 'RESULTADO', 'FECHA'],
        },
        computed: {
            availableOptions() {
                return this.options.filter(opt => this.value.indexOf(opt) === -1)
            }
        },
        methods: {
            mostrarToast(variant = null) {
                this.$bvToast.toast(variant.msg, {
                    title: `Alerta de sistema`,
                    variant: variant.toast,
                    solid: true
                })
            },
            updateCurrentTime() {
                if (this.currentTime > 0 && this.currentTime < 3600000 && this.CONTAR == true) {
                    setTimeout(() => {
                        this.currentTime += 1
                        this.min = Math.trunc((this.currentTime) / 60) % 60;
                        this.min = this.min > 9 ? this.min : '0' + this.min;
                        this.sec = Math.trunc((this.currentTime)) % 60;
                        this.sec = this.sec > 9 ? this.sec : '0' + this.sec;
                        this.updateCurrentTime()
                    }, 1000)
                }
            },

            //onclick="window.open(URL + PLANTILLA + '/' + item.BANNER, '_blank', 'location=yes,height=570,width=520,scrollbars=yes,status=yes');"
            abrirPDF: function (url) {
                // Abrir nuevo tab
                var win = window.open(url, '_blank', 'location=yes,height=570,width=520,scrollbars=yes,status=yes');
                // Cambiar el foco al nuevo tab (punto opcional)
                win.focus();
            },
            pantalla: function (item) {
                this.$bvModal.show(item.PANTALLA);
            },

            configurar: function (item) {
                this.show = true;
                axios.post('@apiServidor' + '/api/Formulario/Mantenimiento', {
                    ID: item.ID,
                    ID_SOURCE: item.ID_SOURCE,
                    ID_GRUPO: item.ID_GRUPO,
                    ID_SEDE: this.ID_SEDE,
                    ID_USUARIO: this.ID_USUARIO,
                    TIPO: 30,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.show = false;
                        this.$bvModal.hide('nuevo');
                        this.iniciar();
                    }
                }).catch(e => {
                });
            },
            //MODIFICADO ML
            iniciar: function () {
                this.show = true;
                axios.post('@apiServidor' + '/api/Grupo/IniciarQueuexGrupo', {
                    ID: 0,
                    ID_SOURCE: 0,
                    ID_GRUPO: 0,
                    ID_SEDE: this.ID_SEDE,
                    ID_USUARIO: this.ID_USUARIO,
                }, configImg).then(response => {
                    if (response.data.ID > 0) {
                        //alert(JSON.stringify(response.data));
                        this.show = false;
                        if (this.CONTAR == false) { this.CONTAR = true; this.updateCurrentTime(); }
                        this.PLANTILLA = response.data.PLANTILLA;
                        this.ID = response.data.ID;
                        this.ID_SOURCE = response.data.ID_SOURCE;
                        this.ID_GRUPO = response.data.ID_GRUPO;
                        this.cargarExpedientes();
                    }
                }).catch(e => {
                });
            },
            //MODIFICADO ML
            cargarExpedientes: function () {
                this.ListaExpedientes = [];
                axios.post('@apiServidor' + '/api/PortalPaciente/ListarGaleriaxCarga', {
                    ID: this.ID_SOURCE,
                    ID_SEDE: this.ID_SEDE,
                    ID_USUARIO: this.ID_USUARIO,
                    TITULO: this.PLANTILLA,
                    TIPO: 0,
                }).then(response => {
                    if (response.data.length > 0) {
                        this.ListaExpedientes = response.data;
                    }
                }).catch(e => {
                });
            },

            doShow: function (field) {
                if (this.CAMPOS[field].if != undefined) {
                    //alert(this.CAMPOS[field].if)
                    let listaIf = this.CAMPOS[field].if
                    //alert(JSON.stringify(listaIf));
                    for (i in listaIf) {
                        let valor = listaIf[i].object;
                        let valor2 = listaIf[i].igual;
                        let campo = listaIf[i].value;
                        if (this.CAMPOS[valor].value != valor2) {
                            this.CAMPOS[campo].VALIDAR = 0;
                            return false;
                        } else { this.CAMPOS[campo].VALIDAR = 1; }
                    }
                }
                return true;
            },
            //MODIFICADO ML
            Guardar: function () {
                this.show = true;
                let CAMPOS = '';
                let Plan = '';
                let msg = 'Verificar los siguientes campos: ';
                for (var obj in this.CAMPOS) {
                    if (this.CAMPOS[obj].VALIDAR == 1 && (`${this.CAMPOS[obj].value}`.length < 1 || `${this.CAMPOS[obj].value}` == 'Seleccionar' || `${this.CAMPOS[obj].value}` == 'SELECCIONAR')) {
                        msg = msg + " " + `${this.CAMPOS[obj].NOMBRE}`;
                    }
                }
                let listaPendientes = this.ListaExpedientes.filter(x => x.CONFIRMAR == 1);
                if (listaPendientes.length > 0) msg = msg + ' Tienes ' + listaPendientes.length + ' archivo(s) pendiente de revisar';
                if (msg.length > 34) {
                    this.mostrarToast({ toast: 'danger', msg: msg });
                    this.show = false;
                } else {
                    for (var obj in this.CAMPOS) {
                        CAMPOS = CAMPOS + `${this.CAMPOS[obj].value_}` + '=|' + `${this.CAMPOS[obj].value}` + ',|';
                        Plan = Plan + `${this.CAMPOS[obj].NOMBRE}` + ':' + `${this.CAMPOS[obj].value}` + '|';
                    }

                    this.GuardarProceso({ STATUS: 3, CAMPOS: CAMPOS, PLAN: Plan });
                }
            },
            //MODIFICADO ML
            GuardarAvance: function () {    // MODIFICADO
                this.show = true;
                let CAMPOS = '';
                let Plan = '';
                for (var obj in this.CAMPOS) {
                    let val = `${this.CAMPOS[obj].value}`;
                    val = val.replace("'", " ");
                    CAMPOS = CAMPOS + `${this.CAMPOS[obj].value_}` + '=|' + val + ',|';
                    Plan = Plan + `${this.CAMPOS[obj].NOMBRE}` + ':' + val + '|';
                }
                this.GuardarProceso({ STATUS: 2 });
            },

            GuardarAgendado: function () {    // MODIFICADO
                if (this.hora.length > 2 && this.value != '') {
                    this.show = true;
                    let CAMPOS = '';
                    let Plan = '';
                    for (var obj in this.CAMPOS) {
                        let val = `${this.CAMPOS[obj].value}`;
                        val = val.replace("'", " ");
                        CAMPOS = CAMPOS + `${this.CAMPOS[obj].value_}` + '=|' + val + ',|';
                        Plan = Plan + `${this.CAMPOS[obj].NOMBRE}` + ':' + val + '|';
                    }
                    let val = (this.value + ' ' + this.hora.slice(0, 5));
                    this.GuardarProceso({ STATUS: 6, TITULO: val });
                } else { this.mostrarToast({ toast: 'warning', msg: 'Verificar fecha y hora ...' }); }
            },

            //MODIFICADO ML
            GuardarProceso: function (item) {  // 33 - 39
                axios.post('@apiServidor' + '/api/PortalPaciente/MantenimientoQUEUE', {
                    ID: this.ID,
                    ID_SOURCE: this.ID_SOURCE,
                    TITULO: item.TITULO,
                    ID_SEDE: this.ID_SEDE,
                    ID_GRUPO: this.ID_GRUPO,
                    ID_USUARIO: this.ID_USUARIO,
                    MENSAJE: item.CAMPOS,
                    STATUS: item.STATUS,
                }).then(response => {
                    if (response.data.ID > 0) {
                        document.location.href = '../Calidad/Galeria';
                    }
                }).catch(e => {
                });
            },

            test: function (item) {
                let valor = item.value;
                if (valor != undefined) {
                    let idPadre = 0; let lista = item.options;
                    for (i in lista) {
                        let listaItem = this.ListaItem.filter(x => x.ID_USUARIO == lista[i].id);
                        if (listaItem.length > 0) {
                            for (var obj in this.CAMPOS) {
                                if (`${this.CAMPOS[obj].COLUMNA}` == listaItem[0].PLANTILLA) {    //alert(nuevoControl);
                                    this.CAMPOS[obj].options = [];
                                    this.CAMPOS[obj].VALIDAR = 0;
                                    //let item = [];
                                    //item.push({ id: 10000, idControl: 0, text: 'Seleccionar', value: 'Seleccionar' });
                                    //this.CAMPOS[obj].options = item;
                                    //this.CAMPOS[obj].value = 'Seleccionar';
                                    //this.CAMPOS[obj].value = [];
                                }
                            }
                        }
                        if (lista[i].value == valor) idPadre = lista[i].id;
                    }
                    let listaItem = this.ListaItem.filter(x => x.ID_USUARIO == idPadre);
                    if (listaItem.length > 0) {
                        let nuevoControl = listaItem[0].PLANTILLA;
                        for (var obj in this.CAMPOS) {
                            if (`${this.CAMPOS[obj].COLUMNA}` == nuevoControl) {    //alert(nuevoControl);
                                this.CAMPOS[obj].options = [];
                                this.CAMPOS[obj].VALIDAR = 0;
                                let item = [];

                                for (var ite in listaItem) {
                                    item.push({ id: listaItem[ite].ID, idControl: listaItem[ite].ID_GRUPO, text: listaItem[ite].TITULO, value: listaItem[ite].TITULO });
                                    this.CAMPOS[obj].value = listaItem[ite].TITULO;
                                    this.CAMPOS[obj].VALIDAR = 1;
                                }
                                if (`${this.CAMPOS[obj].type}` == 'multi') {
                                    this.CAMPOS[obj].value = [];
                                }
                                this.CAMPOS[obj].options = item;
                            }
                        }
                    }
                }
            },

            eliminar: function (item) {
                var opcion = confirm("Deseas eliminar el item - " + item.TITULO + " del formulario " + item.RESULTADO);
                if (opcion == true) {
                    axios.post('@apiServidor' + '/api/Excel/MantenimientoCarga', {
                        ID: item.ID,
                        ID_USUARIO: this.ID_USUARIO,
                        ID_SEDE: this.ID_SEDE,
                        TIPO: 19,
                    }).then(response => {
                        if (response.data.ID > 0) {
                            this.ListaProceso = this.ListaProceso.filter(x => x.ID != item.ID);
                        }
                    }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ... 2' }); });

                } else { this.mostrarToast({ toast: 'warning', msg: 'Cancelado por el usuario' }); }
            },
            //MODIFICADO ML
            fileDescargar: function (item) {
                axios.get(item.URL, { responseType: 'blob' })
                    .then(response => {
                        const blob = new Blob([response.data], { type: 'application/pdf' })
                        const link = document.createElement('a')
                        link.href = URL.createObjectURL(blob)
                        link.download = item.LABEL
                        link.click()
                        URL.revokeObjectURL(link.href)
                        this.fileChange({ ID: item.ID, STATUS: 2, TITULO: item.TITULO, EXT: item.EXT, BANNER: item.BANNER });
                    }).catch(console.error)
            },
            //MODIFICADO ML
            fileEliminar: function (item) {
                this.fileChange({ ID: item.ID, STATUS: 3, TITULO: item.TITULO, EXT: item.EXT, BANNER: item.BANNER });
            },
            //MODIFICADO ML
            fileChange: function (item) {
                this.show = true;
                axios.post('@apiServidor' + '/api/PortalPaciente/MantenimientoGaleria', {
                    ID: item.ID,
                    ID_SEDE: this.ID_SEDE,
                    ID_USUARIO: this.ID_USUARIO,
                    TITULO: '',
                    TIPO: item.STATUS,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.show = false;
                        this.ListaExpedientes = this.ListaExpedientes.filter(x => x.ID != item.ID);
                        this.ListaExpedientes.push({ ID: item.ID, TITULO: item.TITULO, EXT: item.EXT, PESO: 0, IP_USUARIO: '', FECHA: '', CONFIRMAR: item.STATUS, BANNER: item.BANNER });
                        this.ListaExpedientes.sort((a, b) => (a.ID > b.ID) ? 1 : ((b.ID > a.ID) ? -1 : 0));
                    }
                }).catch(e => {
                });
            },

            grafico: function () {
                this.graficoAvance = [];
                axios.post('@apiServidor' + '/api/Usuario/ListarUsuariosxCarga_T', {
                    ID: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        let lista1 = response.data;
                        let columnas = {};
                        for (let tajada1 in lista1) {
                            columnas[`${lista1[tajada1].FECHA}`] = `${lista1[tajada1].ID}`; //  alert(JSON.stringify(`${lista[items].ESTADO}`));
                        }
                        this.graficoAvance = columnas;
                    }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            },

            //MODIFICADO ML
            listarGruposxUsuario: function () {   // MODIFICADO
                //this.show = true;
                axios.post('@apiServidor' + '/api/Grupo/ListarGruposxPrograma', {
                    ID: this.ID_USUARIO,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                }, configImg).then(response => {
                    if (response.data.length > 0) { this.ListaGruposxUsuario = response.data; }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            },
            //MODIFICADO ML
            listarGraficoGeneral: function () {    // MODIFICADO
                this.ListaGeneral = []; this.graficoGeneral = []; this.graficoAvance2 = []; this.ListaProceso = [];
                axios.post('@apiServidor' + '/api/Grupo/ListarQueuexGrupo', {
                    ID: this.ID,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        let lista = response.data;
                        let Pendiente = []; let Proceso = []; let Terminado = []; let Monitores = []; let Estudios = [];
                        Pendiente = lista.filter(x => x.ACCIONES == 'PENDIENTE');
                        Proceso = lista.filter(x => x.ACCIONES == 'PROCESO');
                        Terminado = lista.filter(x => x.ACCIONES == 'TERMINADO');

                        map = new Map();
                        for (let i of Pendiente) {
                            if (!map.has(i.RESULTADO)) {
                                map.set(i.RESULTADO, true);
                                Estudios.push({ ESTUDIO: i.RESULTADO });
                            }
                        }           //  alert(JSON.stringify(`${lista[items].ESTADO}`));

                        let uno = []; let grupos = { INC: 0 }; let registros = { INC: 0 };    //alert(i.ESTUDIO);
                        for (let i of Estudios) {
                            grupos = {};
                            registros = {};
                            let filas = lista.filter(x => x.RESULTADO == i.ESTUDIO);
                            if (filas.length > 0) {
                                grupos['GRAFICA'] = filas.length; //registros[i.ESTUDIO] = filas.length;
                                grupos['ESTUDIO'] = i.ESTUDIO;
                                uno.push(grupos);
                            }
                        }
                        this.ListaProceso = Proceso;
                        this.ListaGeneral.push({
                            PENDIENTE: Pendiente.length,
                            PROCESO: Proceso.length,
                            TERMINADO: Terminado.length,
                            TOTAL: lista.length,
                            MONITORES: Monitores.length,
                            ESTUDIOS: uno,
                            //ESTUDIOS: [
                            //    { ESTUDIO: "176 - TOYOTA VENTAS PERU", GRAFICA: { "NICOLAS": 33, "NANCY": 122 } },
                            //            { ESTUDIO: "175 - TOYOTA SERVICIOS PERU", GRAFICA: { "NICOLAS": 23, "NANCY": 10 } },
                            //    { ESTUDIO: "63 - IPSOS BCP_PYME SIN CARTERAS", GRAFICA: { "NICOLAS": 3, "NANCY": 2 } }]
                        });
                    }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ... 2' }); });
            }
        }
    })
    app.listarGraficoGeneral();
    app.grafico();

</script>
