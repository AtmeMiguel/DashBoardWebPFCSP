@{
    string Title = "Búsqueda";
    ViewBag.Title = Title;
    Layout = "~/Views/Shared/_ImageUpload.cshtml";
}

<div id="app">
    <div class="containerClaro">
        <b-overlay :show="show" rounded="lg">
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-lg-12" v-if="ID == 0">
                    <div class="card redondoCardLight  cajaGrisClaroDelgado">
                        <div class="card-body">
                            <b-form>
                                <b-row>
                                    <b-col lg="2" class="my-1">
                                        <b-form-group id="input-group-1" label="Campo de búsqueda:" label-for="input-2">
                                            <b-form-input id="input-1"
                                                          v-model="CAMPO"
                                                          required></b-form-input>
                                        </b-form-group>
                                    </b-col>
                                    <b-col lg="10" class="my-1">
                                        <b-row>
                                            <b-col lg="4" class="redondoCardLight cajaGrisClaroDelgado" v-for="i in ListaGruposxUsuario">
                                                <div class="bg-light" v-on:click="ID_GRUPO= i.ACCIONES, buscar()">
                                                    <b-avatar button icon="briefcase" variant="info" title="Pendiente" size="em"></b-avatar><span class="align-center">{{i.TITULO}}</span>
                                                </div>
                                            </b-col>
                                        </b-row>

                                    </b-col>
                                </b-row>
                            </b-form>

                            <b-row style=" height: 600px; overflow: scroll; ">
                                <b-table :items="ListaBandeja"
                                         stacked="md"
                                         head-variant="light"
                                         show-empty
                                         sticky-header
                                         small>
                                    <template #cell(name)="row">
                                        {{ row.value.first }} {{ row.value.last }}
                                    </template>
                                    <template #cell(RESULTADO)="row">
                                        <div variant="ligth" class="fa-pills align-center btn-outline-info">{{row.item.RESULTADO}}</div>
                                    </template>
                                    <template #cell(ACCIONES)="row">
                                        <b-avatar v-on:click="listaQueList({ ID: row.item.ID, ID_SOURCE: row.item.ID, ID_GRUPO: row.item.ID_GRUPO, PLANTILLA: row.item.ACCIONES })" title="Iniciar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                    </template>
                                </b-table>
                            </b-row>

                        </div>
                    </div>


                </div>
            </div>
        </b-overlay>
    </div>
    <b-modal id="lista" size="lg" data-html="true" hide-footer hide-header>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-body">
                        <div class="card-text">
                            <div style="height: 460px; overflow: scroll; ">
                                <template v-for="(item , index) in PLANTILLA">
                                    <div class="row">
                                        <div class="col-xs-4 col-md-4 col-lg-4">
                                            <p class="bg-info text-left text-light" v-bind:title="item.pri" style="font-size: 12px; width: 100%; white-space:nowrap; text-overflow: ellipsis; overflow: hidden;">{{item.pri}}</p>
                                        </div>
                                        <div class="col-xs-8 col-md-8 col-lg-8">
                                            <p class="text-right text-dark" style="font-size: 12px; ">{{item.seg}}</p>
                                        </div>
                                    </div>
                                </template>
                            </div>
                            <div class="row">
                                <div class="col-xs-4 col-md-4 redondoCardLight  cajaGrisClaroDelgado" v-for="i in ListaQueList_">
                                    <div class="text-black-50" v-if="i.RESULTADO =='PENDIENTE'">
                                        <p>{{i.RESULTADO}}-{{i.TITULO}}</p>
                                        <p>{{i.FECHA}}</p>
                                        <b-avatar button icon="pencil-square" v-on:click="iniciar({ ID: i.ID, TITULO: i.TITULO })" variant="warning" title="Pendiente" size="em"></b-avatar><span class="align-center"></span>
                                    </div>
                                    <div class="text-black-50" v-if="i.RESULTADO !='PENDIENTE'">
                                        <p>{{i.RESULTADO}}-{{i.TITULO}}</p>
                                        <p>{{i.FECHA}}-{{i.USUARIO}}</p>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>
</div>
<script>
    var app = new Vue({
        el: '#app',
        data: {
            ID_USUARIO: sessionStorage.getItem('ID_USUARIO'),
            USUARIO: sessionStorage.getItem('USUARIO'),
            SERVER_URL: sessionStorage.getItem('SERVER_URL'),
            ID_SEDE: sessionStorage.getItem('ID_SEDE'),
            ID_GRUPO: sessionStorage.getItem('IMAGE'),
            PLANTILLA: '',
            ID: 0,
            CAMPO: '',
            TXT_OBSERVACION: '',
            show: false,
            value: [],

            ListaGruposxUsuario: [],
            ListaBandeja: [],
            ListaQueList_: [],
        },
        methods: {
            mostrarToast(variant = null) {
                this.$bvToast.toast(variant.msg, {
                    title: `Alerta de sistema`,
                    variant: variant.toast,
                    solid: true
                })
            },
            pantalla: function (item) {
                this.$bvModal.show(item.PANTALLA);
            },
            mostrarModal: function (form) {
                this.$bvModal.show(form.MODAL);
            },
            listaQueList: function (item) {
                this.PLANTILLA = [];
                if (item.PLANTILLA != null) {
                    let separado = item.PLANTILLA.split("|");
                    for (var i in separado) {
                        let fil = separado[i].split(":"); let pri = ''; let seg = '';
                        for (var ii in fil) {
                            pri = (ii == 0 ? fil[0] : pri);
                            seg = (ii > 0 ? seg + ' ' + fil[ii] : '');
                        }
                        this.PLANTILLA.push({ pri: pri, seg: seg });
                    }
                }
                axios.post(this.SERVER_URL + '/api/Formulario/Listar', {
                    ID: 0,
                    ID_SOURCE: item.ID_SOURCE,
                    ID_GRUPO: item.ID_GRUPO,
                    ID_SEDE: this.ID_SEDE,
                    ID_USUARIO: this.ID_USUARIO,
                    TIPO: 36,
                }).then(response => {
                    if (response.data.length > 0) {
                        this.ListaQueList_ = response.data;
                        this.pantalla({ PANTALLA: 'lista' });

                    }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            },
            iniciar: function (item) {
                axios.post(this.SERVER_URL + '/api/Formulario/Mantenimiento', {
                    ID: item.ID,
                    ID_GRUPO: this.ID_GRUPO,
                    ID_SEDE: this.ID_SEDE,
                    ID_USUARIO: this.ID_USUARIO,
                    TIPO: 37
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.mostrarToast({ toast: 'warning', msg: 'Asignado correctamente ...' });
                        this.ListaQueList_ = this.ListaQueList_.filter(x => x.ID != response.data.ID);
                        this.ListaQueList_.push({ ID: response.data.ID, ID_GRUPO: 0, ID_USUARIO: this.ID_USUARIO, RESULTADO: 'ASIGNADO', FECHA: 'AHORA', TITULO: item.TITULO, USUARIO: 'YO' });

                    }
                }).catch(e => {
                });
            },

            buscar: function () {
                axios.post(this.SERVER_URL + '/api/Formulario/Listar', {
                    ID: 0,
                    ID_SOURCE: 0,
                    ID_GRUPO: this.ID_GRUPO,
                    TITULO: this.CAMPO,
                    ID_SEDE: this.ID_SEDE,
                    ID_USUARIO: this.ID_USUARIO,
                    TIPO: 35,   // 60
                }).then(response => {
                    if (response.data.length > 0) {
                        this.ListaBandeja = response.data;
                    } else { this.ListaBandeja = []; }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            },

            listarGruposxUsuario: function () {
                //this.show = true;
                axios.post(this.SERVER_URL + '/api/Grupo/ListarGruposxPrograma', {
                    ID: this.ID_USUARIO,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 10,
                }).then(response => {
                    if (response.data.length > 0) { this.ListaGruposxUsuario = response.data; }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            },
        }
    })
    app.listarGruposxUsuario();
</script>
