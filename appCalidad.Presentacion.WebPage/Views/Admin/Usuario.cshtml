@{
    string Title = "ADMIN | Usuario";
    ViewBag.Title = Title;
    string apiServidor = System.Configuration.ConfigurationManager.AppSettings["API_SERVIDOR"];
}

<div id="app">
    <div class="container">
        <br />
        <div class="row">
            <div class="col-xs-12 col-md-12">

                <b-overlay :show="show" rounded="sm">
                    <br />
                    <template>
                        <b-container fluid>
                            <!-- User Interface controls -->
                            <b-row>
                                <b-col lg="6" class="my-1">
                                    <b-form-group label="Buscar"
                                                  label-for="filter-input"
                                                  label-cols-sm="2"
                                                  label-align-sm="right"
                                                  label-size="sm"
                                                  class="mb-0">
                                        <b-input-group size="sm">
                                            <b-form-input id="filter-input"
                                                          v-model="filter"
                                                          type="search"
                                                          v-on:keyup="buscar()"
                                                          placeholder="Nombres"></b-form-input>

                                            <b-input-group-append>
                                                <b-button :disabled="!filter" @@click="filter = '', buscar()">Limpiar</b-button>
                                            </b-input-group-append>
                                        </b-input-group>
                                    </b-form-group>
                                </b-col>
                                <b-col lg="2" class="my-1">
                                    <b-form-group label="Registra nuevo"
                                                  description=""
                                                  label-cols-sm="8"
                                                  label-align-sm="right"
                                                  label-size="sm"
                                                  class="mb-0">
                                        <b-avatar v-on:click="editar(0, 0, '')" title="Editar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>

                                    </b-form-group>
                                </b-col>
                                @*<b-col lg="2" class="my-1">
                                        <b-form-group label="Carga masiva"
                                                      description=""
                                                      label-cols-sm="8"
                                                      label-align-sm="right"
                                                      label-size="sm"
                                                      class="mb-0">
                                            <b-avatar v-on:click="pantalla({PANTALLA: 'cargarUsuarios'})" title="Editar" button icon="file-earmark-excel" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>

                                        </b-form-group>
                                    </b-col>*@

                            </b-row>
                            <!-- Main table element -->
                            <b-row style=" height: 600px; overflow: scroll; ">
                                <b-table :items="ListaUsuarios"
                                         :fields="UsuariosColumnas"
                                         :current-page="currentPage"
                                         :per-page="perPage"
                                         stacked="md"
                                         head-variant="light"
                                         show-empty
                                         sticky-header
                                         small
                                         @@filtered="onFiltered">
                                    <template #cell(name)="row">
                                        {{ row.value.first }} {{ row.value.last }}
                                    </template>

                                    <template #cell(ACCIONES)="row">
                                        <b-avatar v-on:click="editar(row.item, row.index, $event.target)" title="Editar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                        <b-avatar v-on:click="eliminar(row.item, row.index, $event.target)" title="Eliminar" button icon="trash" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                    </template>
                                </b-table>
                            </b-row>
                            <br />

                            <!-- User Interface controls -->
                            <b-row>
                                <b-col sm="5" md="6" class="my-1">
                                    <b-form-group label="Per page"
                                                  label-for="per-page-select"
                                                  label-cols-sm="6"
                                                  label-cols-md="4"
                                                  label-cols-lg="3"
                                                  label-align-sm="right"
                                                  label-size="sm"
                                                  class="mb-0">
                                        <b-form-select id="per-page-select"
                                                       v-model="perPage"
                                                       :options="pageOptions"
                                                       size="sm"></b-form-select>
                                    </b-form-group>
                                </b-col>

                                <b-col sm="7" md="6" class="my-1">
                                    <b-pagination v-model="currentPage"
                                                  :total-rows="totalRows"
                                                  :per-page="perPage"
                                                  align="fill"
                                                  size="sm"
                                                  class="my-0"></b-pagination>
                                </b-col>
                            </b-row>


                        </b-container>
                    </template>
                </b-overlay>

            </div>

        </div>
    </div>

    <b-modal id="editarUsuario" size="md" data-html="true" hide-footer hide-header @@hide="salida">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header colorSanPablo" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">{{oUSUARIO}}</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <template>
                                <div>
                                    <b-tabs content-class="mt-3">
                                        <b-tab title="Perfil de usuario" active>
                                            <div>
                                                <b-form>
                                                    <b-form-group id="input-group-1" label="Usuario:" label-for="input-1">
                                                        <b-form-input id="input-1"
                                                                      v-model="oUSUARIO"
                                                                      type="tel"
                                                                      oninput="this.value = this.value.replace(/[^0-9.]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1');"
                                                                      maxlength="8"
                                                                      required></b-form-input>
                                                    </b-form-group>
                                                    <b-form-group id="input-group-2" label="Password:" label-for="input-2" description="Se modifica al detectar algun cambio">
                                                        <b-form-input id="input-2"
                                                                      v-model="oPASSWORD"
                                                                      placeholder="*******"
                                                                      type="password"
                                                                      required></b-form-input>
                                                    </b-form-group>
                                                    <b-form-group id="input-group-3" label="Nombres:" label-for="input-3" description="Dejar en blanco para casos PF">
                                                        <b-form-input id="input-3"
                                                                      type="tel"
                                                                      v-model="oNOMBRES"
                                                                      required></b-form-input>
                                                    </b-form-group>
                                                    <b-form-group id="input-group-4" label="Apellidos:" label-for="input-4" description="Dejar en blanco para casos PF">
                                                        <b-form-input id="input-4"
                                                                      type="tel"
                                                                      v-model="oAPELLIDOS"
                                                                      required></b-form-input>
                                                    </b-form-group>
                                                    <b-form-group id="input-group-4" label="Correo:" label-for="input-4" description="No es obligatorio">
                                                        <b-form-input id="input-4"
                                                                      type="tel"
                                                                      v-model="oCORREO"
                                                                      required></b-form-input>
                                                    </b-form-group>
                                                    <div class="text-right">
                                                        <b-button v-on:click="onSubmit" variant="outline-info" pill><b-avatar variant="outline-info" icon="person-fill" size="2rem"></b-avatar>Guardar</b-button>
                                                    </div><br />
                                                </b-form>
                                            </div>
                                        </b-tab>
                                        <b-tab title="Grupos asignados" v-if="oID_USUARIO > 0">
                                            <div>
                                                <b-form-group>
                                                    <p>Agregar un grupo al usuario</p>
                                                    <div class="form-group row">
                                                        <label for="inputEmail3" class="col-sm-4 col-form-label">Grupo:</label>
                                                        <div class="col-sm-8">
                                                            <select v-model="GRUPO" class="form-control" required disabled-field="notEnabled" v-on:change="asignar(GRUPO)">
                                                                <option v-for="item in ListaGrupos" v-bind:value="{ ID: item.ID, TITULO: item.TITULO }">
                                                                    {{ item.TITULO }}
                                                                </option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                </b-form-group>
                                                <b-row style=" height: 325px; overflow: scroll; ">
                                                    <b-col sm="12" md="12" class="my-1">
                                                        <b-table :items="ListaGruposxUsuario"
                                                                 stacked="md"
                                                                 head-variant="light"
                                                                 show-empty
                                                                 sticky-header
                                                                 small>
                                                            <template #cell(name)="row">
                                                                {{ row.value.first }} {{ row.value.last }}
                                                            </template>
                                                            <template #cell(ACCIONES)="row">
                                                                <b-avatar v-on:click="desasignar(row.item, row.index, $event.target)" title="eliminar" button icon="trash" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                                            </template>
                                                        </b-table>
                                                    </b-col>
                                                </b-row>
                                                <br />

                                            </div>
                                        </b-tab>
                                        <b-tab title="Roles asignados" v-if="oID_USUARIO > 0">
                                            <div>
                                                <b-form-group>
                                                    <p>Agregar un rol al usuario</p>
                                                    <div class="form-group row">
                                                        <label for="inputEmail3" class="col-sm-4 col-form-label">Roles:</label>
                                                        <div class="col-sm-8">
                                                            <select v-model="ROL" class="form-control" required disabled-field="notEnabled" v-on:change="asignarRol(ROL)">
                                                                <option v-for="item in ListaRoles" v-bind:value="{ ID: item.ID, TITULO: item.TITULO }">
                                                                    {{ item.TITULO }}
                                                                </option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                </b-form-group>
                                                <b-row style=" height: 325px; overflow: scroll; ">
                                                    <b-col sm="12" md="12" class="my-1">
                                                        <b-table :items="ListaRolesxUsuario"
                                                                 :fields="Columnas"
                                                                 stacked="md"
                                                                 head-variant="light"
                                                                 show-empty
                                                                 sticky-header
                                                                 small>
                                                            <template #cell(name)="row">
                                                                {{ row.value.first }} {{ row.value.last }}
                                                            </template>
                                                            <template #cell(RESULTADO)="row">
                                                                <b-avatar v-on:click="desasignarRol(row.item, row.index, $event.target)" title="eliminar" button icon="trash" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                                            </template>
                                                        </b-table>
                                                    </b-col>
                                                </b-row>
                                                <br />

                                            </div>
                                        </b-tab>
                                    </b-tabs>
                                </div>

                            </template>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="cargarUsuarios" size="md" title="ADMINISTRADOR" data-html="true" hide-footer hide-header @@hide="salida">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header bg-info" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">PROCESO DE CARGA DE USUARIOS</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-sm-12">

                                <p>Eligir un grupo </p>
                                <div class="form-group row">
                                    <label for="inputEmail3" class="col-sm-4 col-form-label">Grupo:</label>
                                    <div class="col-sm-8">
                                        <select v-model="GRUPO" class="form-control" required disabled-field="notEnabled">
                                            <option v-for="item in ListaGrupos" v-bind:value="{ ID: item.ID, TITULO: item.TITULO }">
                                                {{ item.TITULO }}
                                            </option>
                                        </select>
                                    </div>
                                </div>

                            </div>
                        </div>

                        <div class="row" v-if="GRUPO != ''">
                            <div class="col-sm-6 text-right">
                                <b-button v-on:click="excelEliminarUsuarios({ID: GRUPO.ID, TITULO: GRUPO.TITULO})" variant="outline-info" pill><b-avatar variant="outline-info" icon="people-fill" size="2rem"></b-avatar>Eliminar usuarios</b-button>
                            </div>
                            <div class="col-sm-6 text-left">
                                <b-button v-on:click="excelUsuarios({ID: GRUPO.ID, TITULO: GRUPO.TITULO})" variant="outline-info" pill><b-avatar variant="outline-info" icon="people-fill" size="2rem"></b-avatar>Registrar usuarios</b-button>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </b-modal>

    <!-- Info modal -->
    <b-modal :id="infoModal.id" hide-footer hide-header>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-body">
                        <div class="card-text">
                            <p>Esta seguro de eliminar</p>
                            <pre>{{ infoModal.content }}</pre>

                            <br /><br />
                            <div class="text-right">
                                <b-button v-on:click="eliminarOk" variant="outline-info" pill><b-avatar variant="outline-info" icon="trash" size="2rem"></b-avatar>Eliminar</b-button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="excelUsuarios" size="xl" title="ADMINISTRADOR" data-html="true" hide-footer hide-header @@hide="salida">
        <div class="col-xs-12">
            <b-embed type="iframe"
                     aspect="16by9"
                     v-bind:src="SITE"
                     allowfullscreen></b-embed>
        </div>
    </b-modal>
</div>

<script>
    var app = new Vue({
        el: '#app',
        data: {
            ID_USUARIO: '@User.Identity.Name',
            USUARIO: '@Session["Usuario"].ToString()',
            SERVER_URL: '@apiServidor',
            ID_SEDE: '@Session["ID_SEDE"].ToString()',
            SEDE: '@Session["SEDE"].ToString()',

            PAGINA: '@Title',
            SITE: '',

            oID_USUARIO: 0,
            oUSUARIO: '',
            oPASSWORD: '',
            oNOMBRES: '',
            oAPELLIDOS: '',
            oCORREO: '',
            oCANAL: '',
            oRUTA: '',

            GRUPO: '',
            ROL:'',

            ListaUsuarios: [],
            ListaUsuariosSinFiltro: [],
            ListaGrupos: [],
            ListaGruposxUsuario: [],
            ListaRoles: [],
            ListaRolesxUsuario: [],
            show: false,
            totalRows: 1000,
            currentPage: 1,
            perPage: 100,
            pageOptions: [100, 500, 1000, { value: 10000, text: "Show a lot" }],
            sortBy: '',
            sortDesc: false,
            sortDirection: 'asc',
            filter: '',
            filterOn: [],
            UsuariosColumnas: ['ID','USUARIO','APELLIDOS','NOMBRES','CORREO','ACCIONES','USUARIO_CREADOR','FECHA'],
            Columnas: [
                'ID', 'TITULO', 'SEDE',  'FECHA',  { key: 'RESULTADO', label: 'ACCIONES' }, 'ID_ROL'
            ],
            infoModal: {
                id: 'info-modal',
                title: '',
                content: ''
            }
        },
        mounted() {
            this.totalRows = this.ListaUsuarios.length
        },
        methods: {
            mostrarToast(variant = null) {
                this.$bvToast.toast(variant.msg, {
                    title: `Alerta de sistema`,
                    variant: variant.toast,
                    solid: true
                })
            },
            salida: function () {
                this.ListaUsuarios = [];
                document.location.href = '../Admin/Usuario';
                //this.listarUsuarios();
            },
            pantalla: function (item) {
                this.$bvModal.show(item.PANTALLA);
            },
            excelUsuarios: function (item) {
                this.SITE = './excelUsuarios/?idGrupo=' + item.ID+ '&idPrograma='+ this.ID_SEDE+'&idUsuario='+this.ID_USUARIO;
                this.$bvModal.show('excelUsuarios');
            },
            excelEliminarUsuarios: function (item) {
                this.SITE = './excelEliminarUsuarios/?idGrupo=' + item.ID + '&idPrograma=' + this.ID_SEDE + '&idUsuario=' + this.ID_USUARIO;
                this.$bvModal.show('excelUsuarios');
            },

            onFiltered(filteredItems) {
                this.totalRows = filteredItems.length;
                this.currentPage = 1;
            },
            buscar: function () {
                if (this.filter.length > 0) {
                    let palabra = this.filter.toUpperCase();
                    this.ListaUsuarios = this.ListaUsuariosSinFiltro.filter(x => {
                        return x.TITULO.includes(palabra);
                    });
                }
                else {
                    this.ListaUsuarios = this.ListaUsuariosSinFiltro;
                }
                this.currentPage = 1;
            },
            editar(item, index, button) {
                this.ListaGruposxUsuario = [];
                this.GRUPO = '';
                this.ROL = '';

                if (item == 0) {
                    this.oID_USUARIO = 0;
                    this.oUSUARIO = '';
                    this.oPASSWORD = '';
                    this.oNOMBRES = '';
                    this.oAPELLIDOS = '';
                    this.oCORREO = '';
                } else {
                    this.oID_USUARIO = item.ID;
                    this.oUSUARIO = item.USUARIO;
                    this.oPASSWORD = '';
                    this.oNOMBRES = item.NOMBRES;
                    this.oAPELLIDOS = item.APELLIDOS;
                    this.oCORREO = item.CORREO;
                    this.listarGruposxUsuario();
                    this.listarRolesxUsuario();
                }
               this.pantalla({ PANTALLA: 'editarUsuario' });
            },

            eliminar: function (item, index, button) {
                this.infoModal.title = `Row index: ${index}`
                this.infoModal.content = JSON.stringify(item, null, 2)
                this.oID_USUARIO = item.ID;
                this.$root.$emit('bv::show::modal', this.infoModal.id, button)
            },
            eliminarOk: function () {
                axios.post(this.SERVER_URL + '/api/Usuario/EliminarUsuario', {
                    ID: this.oID_USUARIO,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.ListaUsuariosSinFiltro = this.ListaUsuariosSinFiltro.filter(x => x.ID != this.oID_USUARIO);
                        this.ListaUsuarios = this.ListaUsuariosSinFiltro;
                        this.currentPage = 1;
                        this.mostrarToast({ toast: 'success', msg: 'Usuario eliminado correctamente...' });
                    } else {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                });
            },
            onSubmit(event) {
                this.show = true;
                this.MensajeSistema = "Verificar los siguientes campos: ";
                this.MensajeSistema = this.oUSUARIO.length < 8 ? this.MensajeSistema + " Usuario" : this.MensajeSistema;
                if (this.MensajeSistema.length < 35) {
                    axios.post(this.SERVER_URL + '/api/Usuario/MantenimientoUsuario', {
                        ID: this.oID_USUARIO,
                        USUARIO:   this.oUSUARIO,
                        PASSWORD:  this.oPASSWORD,
                        NOMBRES:   this.oNOMBRES,
                        APELLIDOS: this.oAPELLIDOS,
                        CORREO: this.oCORREO,
                        ID_GRUPO: 0,
                        ID_USUARIO: this.ID_USUARIO,
                        ID_SEDE: this.ID_SEDE,
                    }).then(response => {
                        if (response.data.ID > 0) {
                            this.oID_USUARIO = response.data.ID;
                            this.ListaUsuariosSinFiltro = []; this.ListaUsuarios = [];
                            this.listarGruposxUsuario();
                            this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                        }
                    }).catch(e => {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                    });
                } else {
                    this.mostrarToast({ toast: 'danger', msg: this.MensajeSistema });
                }
            },
            asignar(item) {
                let cantidad = this.ListaGruposxUsuario.filter(x => x.TITULO == item.TITULO);
                if (cantidad.length < 1) {
                    this.show = true;
                    axios.post(this.SERVER_URL + '/api/Grupo/AddGrupoxUsuario', {
                        ID: this.oID_USUARIO,
                        ID_GRUPO: item.ID,
                        ID_USUARIO: this.oID_USUARIO,
                        ID_SEDE: this.ID_SEDE,
                    }).then(response => {
                        if (response.data.ID > 0) {
                            this.show = false;
                            this.ListaGruposxUsuario.push({ ID: response.data.ID, TITULO: item.TITULO, ACCIONES: '', USUARIO: 'Yo', FECHA: 'Ahora' });
                            this.mostrarToast({ toast: 'success', msg: 'Grupo ' + item.TITULO + ' asignado correctamente' });
                        }
                    }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
                }
            },
            desasignar(item, index, button) {
                this.show = true;
                axios.post(this.SERVER_URL + '/api/Grupo/EliminarGrupoxUsuario', {
                    ID: item.ID,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 12,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.ListaGruposxUsuario = this.ListaGruposxUsuario.filter(x => x.ID != item.ID);
                        this.show = false;
                        this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                    }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            },

            asignarRol(item) {
                let cantidad = this.ListaRolesxUsuario.filter(x => x.ID_ROL == item.ID);
                if (cantidad.length < 1) {
                    this.show = true;
                    axios.post(this.SERVER_URL + '/api/Usuario/AgregarRolesxUsuario', {
                        ID: this.oID_USUARIO,
                        ID_ROL: item.ID,
                        ID_USUARIO: this.ID_USUARIO,
                    }).then(response => {
                        if (response.data.ID > 0) {
                            this.show = false;
                            this.ListaRolesxUsuario.push({ ID: response.data.ID, TITULO: item.TITULO, SEDE: this.SEDE, RESULTADO: '', FECHA: 'Ahora', ID_ROL: item.ID });
                            this.mostrarToast({ toast: 'success', msg: 'Rol ' + item.TITULO + ' asignado correctamente' });
                        }
                    }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
                }
            },

            desasignarRol(item) {
                this.show = true;
                axios.post(this.SERVER_URL + '/api/Usuario/EliminarRolesxUsuario', {
                    ID: item.ID,
                    ID_USUARIO: this.ID_USUARIO,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.ListaRolesxUsuario = this.ListaRolesxUsuario.filter(x => x.ID != item.ID);
                        this.show = false;
                        this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                    }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            },

            listarGruposxUsuario: function () {
                this.show = true;
                axios.post(this.SERVER_URL + '/api/Grupo/ListarGruposxUsuario', {
                    ID: this.oID_USUARIO,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                }).then(response => {
                    if (response.data.length > 0) { this.ListaGruposxUsuario = response.data; this.show = false }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            },

            listarRoles: function () {         //  alert(JSON.stringify(this.ListaMaestra));
                axios.post(this.SERVER_URL + '/api/Rol/ListarRolesxPrograma', {
                    ID_SEDE: this.ID_SEDE,
                }).then(response => {
                    if (response.data.length > 0) {
                        this.ListaRoles = response.data;
                    }
                 }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' });
                });
            },
            listarGrupos: function () {
                axios.post(this.SERVER_URL + '/api/Grupo/ListarGruposxPrograma', {
                    ID: this.ID_SEDE,
                }).then(response => {
                    if (response.data.length > 0) {
                        this.ListaGrupos = response.data;
                    } else { this.mostrarToast({ toast: 'warning', msg: 'No se pudo cargar lista de grupos' }); }
                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' });
                });
            },

            listarRolesxUsuario: function () {
                this.ListaRolesxUsuario = [];
                axios.post(this.SERVER_URL + '/api/Usuario/ListarRolesxUsuario', {
                    ID: this.oID_USUARIO,
                    ID_USUARIO: this.ID_USUARIO,
                }).then(response => {
                    if (response.data.length > 0) { this.ListaRolesxUsuario = response.data; }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            },

            listarUsuarios: function () {
                this.show = true;
                axios.post(this.SERVER_URL + '/api/Usuario/ListarUsuarios', {
                    ID: this.ID_SEDE,
                    //ID_USUARIO: this.ID_USUARIO,
                }).then(response => {
                    if (response.data.length > 0) {
                        this.ListaUsuarios = response.data;
                        this.totalRows = this.ListaUsuarios.length
                        this.ListaUsuariosSinFiltro = response.data;
                        this.show = false;
                        //this.listarGrupos();
                    }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            },

            Inicio: function () {
                axios.defaults.headers.common['Authorization'] = 'Bearer ' + '@Session["Token"].ToString()';
                this.listarUsuarios();
                this.listarGrupos();
                this.listarRoles();
            },
        }
    })
    app.Inicio();

</script>
