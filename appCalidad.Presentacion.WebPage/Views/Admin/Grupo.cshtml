
@{
    string Title = "ADMIN | Grupo";
    ViewBag.Title = Title;
    string apiServidor = System.Configuration.ConfigurationManager.AppSettings["API_SERVIDOR"];
}

<div id="app">
    <div class="container">
        <br />
        <div class="row">
            <div class="col-xs-12 col-md-12">
                <br />
                <template>
                    <b-container fluid>
                        <!-- User Interface controls -->
                        <b-row>
                            <b-col lg="6" class="my-1">
                                <b-form-group label="Buscar"
                                              label-for="filter-input"
                                              label-cols-sm="3"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-input-group size="sm">
                                        <b-form-input id="filter-input"
                                                      v-model="filter"
                                                      type="search"
                                                      v-on:keyup="buscar()"
                                                      placeholder="Nombre de grupo"></b-form-input>

                                        <b-input-group-append>
                                            <b-button :disabled="!filter" @@click="filter = '', buscar()">Limpiar</b-button>
                                        </b-input-group-append>
                                    </b-input-group>
                                </b-form-group>
                            </b-col>
                            <b-col lg="6" class="my-1">
                                <b-form-group label="Registra nuevo"
                                              description=""
                                              label-cols-sm="3"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-avatar v-on:click="editar(0, 0, '')" title="Editar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>

                                </b-form-group>
                            </b-col>

                        </b-row>
                        <!-- Main table element -->
                        <b-row style=" height: 600px; overflow: scroll; ">
                            <b-table :items="ListaGrupos"
                                     :current-page="currentPage"
                                     :per-page="perPage"
                                     stacked="md"
                                     head-variant="light"
                                     show-empty
                                     sticky-header
                                     small
                                     @@filtered="onFiltered">
                                <template #cell(name)="row">
                                    {{ row.value.first }} {{ row.value.last }}
                                </template>

                                <template #cell(ACCIONES)="row">

                                    <b-avatar v-on:click="editar(row.item, row.index, $event.target)" title="Editar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>

                                    <template v-if="row.item.ACCIONES == 1">
                                        <b-avatar v-on:click="standBy(row.item, row.index, $event.target)" title="Desactivar" button icon="star-fill" size="2rem" variant="light" class="align-center btn-outline-success"></b-avatar>
                                    </template>
                                    <template v-else="row.item.ACCIONES ==1">
                                        <b-avatar v-on:click="standBy(row.item, row.index, $event.target)" title="Activar" button icon="moon" size="2rem" variant="light" class="align-center btn-outline-warning"></b-avatar>
                                    </template>

                                    <b-avatar v-on:click="eliminar(row.item, row.index, $event.target)" title="Eliminar" button icon="trash" size="2rem" variant="light" class="align-center btn-outline-danger"></b-avatar>

                                </template>
                            </b-table>
                        </b-row>
                        <br />

                        <!-- User Interface controls -->
                        <b-row>
                            <b-col sm="5" md="6" class="my-1">
                                <b-form-group label="Per page"
                                              label-for="per-page-select"
                                              label-cols-sm="6"
                                              label-cols-md="4"
                                              label-cols-lg="3"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-form-select id="per-page-select"
                                                   v-model="perPage"
                                                   :options="pageOptions"
                                                   size="sm"></b-form-select>
                                </b-form-group>
                            </b-col>

                            <b-col sm="7" md="6" class="my-1">
                                <b-pagination v-model="currentPage"
                                              :total-rows="totalRows"
                                              :per-page="perPage"
                                              align="fill"
                                              size="sm"
                                              class="my-0"></b-pagination>
                            </b-col>
                        </b-row>


                    </b-container>
                </template>
            </div>

        </div>
    </div>

    <b-modal id="editarGrupo" size="md" data-html="true" hide-footer hide-header>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header colorSanPablo" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">{{TITULO}}</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <template>
                                <div>
                                    <b-tabs content-class="mt-3">
                                        <b-tab title="Editar Grupo" active>
                                            <b-form>
                                                <b-form-group id="input-group-2" label="Titulo:" label-for="input-2">
                                                    <b-form-input id="input-2"
                                                                  v-model="TITULO"
                                                                  required></b-form-input>
                                                </b-form-group>
                                                <b-form-group id="input-group-2" label="Item:" label-for="input-2">
                                                    <b-form-input id="input-2"
                                                                  v-model="ITEM"
                                                                  required></b-form-input>
                                                </b-form-group>
                                                <div class="text-right">
                                                    <b-button v-on:click="onSubmit" variant="outline-info" pill><b-avatar variant="outline-info" icon="pencil-square" size="2rem"></b-avatar>Guardar</b-button>
                                                </div><br />
                                            </b-form>
                                        </b-tab>
                                </div>
                            </template>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

    <!-- Info modal -->
    <b-modal :id="infoModal.id" hide-footer hide-header @@hide="resetInfoModal">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-body">
                        <div class="card-text">
                            <p>Esta seguro de eliminar</p>
                            <pre>{{ infoModal.content }}</pre>

                            <br /><br />
                            <div class="text-right">
                                <b-button v-on:click="eliminarOk" variant="outline-info" pill><b-avatar variant="outline-info" icon="trash" size="2rem"></b-avatar>Eliminar</b-button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>
</div>

<script>

    var app = new Vue({
        el: '#app',
        data: {

            ID_USUARIO: '@User.Identity.Name',
            USUARIO: '@Session["Usuario"].ToString()',
            SERVER_URL: '@apiServidor',
            ID_SEDE: '@Session["ID_SEDE"].ToString()',
            SEDE: '@Session["SEDE"].ToString()',
            PAGINA: '@Title',

            ID: 0,
            TITULO: '',
            ITEM: '',
            ESTADO: '',
            ListaGrupos: [],
            ListaGruposSinFiltro: [],
            filasComunicado: [
               'ID', 'TITULO', 'ITEM','CONTENIDO','ACCIONES','USUARIO','FECHA'
            ],

            totalRows: 100,
            currentPage: 1,
            perPage: 100,
            pageOptions: [100, 200, 400, { value: 1000, text: "Show a lot" }],
            sortBy: '',
            sortDesc: true,
            sortDirection: 'asc',
            filter: '',
            filterOn: [],
            infoModal: {
                id: 'info-modal',
                title: '',
                content: ''
            }
        },
        mounted() {
            this.totalRows = this.ListaGrupos.length
        },
        methods: {
            mostrarModal: function (form) {
                this.MensajeSistema = form.msg;
                this.$bvModal.show(form.modal);
            },
            mostrarToast(variant = null) {
                this.$bvToast.toast(variant.msg, {
                    title: `Alerta de sistema`,
                    variant: variant.toast,
                    solid: true
                })
            },
            buscar: function () {
                if (this.filter.length > 0) {
                    let palabra = this.filter.toUpperCase();
                    this.ListaGrupos = this.ListaGruposSinFiltro.filter(x => {
                        return x.TITULO.includes(palabra);
                    });
                }
                else {
                    this.ListaGrupos = this.ListaGruposSinFiltro;
                }
                this.currentPage = 1;
            },
            editar(item, index, button) {
                if (item == 0) {
                    this.TITULO = '';
                    this.ITEM = '';
                    this.ID = 0;
                } else {
                    this.ID = item.ID;
                    this.TITULO = item.TITULO;
                    this.ITEM = item.ITEM;
                }
               this.pantalla({ PANTALLA: 'editarGrupo' });
            },
            onSubmit(event) {
                this.MensajeSistema = "Verificar los siguientes campos: ";
                this.MensajeSistema = this.TITULO.length < 3 ? this.MensajeSistema + " titulo" : this.MensajeSistema;

                if (this.MensajeSistema.length < 35) {
                    this.ESTADO = 1;
                    this.mantenimiento();
                } else {
                    this.mostrarToast({ toast: 'danger', msg: this.MensajeSistema });
                }
            },
            standBy: function (item, index, button) {
                this.ID = item.ID;
                this.TITULO = item.TITULO;
                this.ESTADO = (item.ACCIONES == 1 ? 2 : 1);
                this.mantenimiento();
            },

            eliminar: function (item, index, button) {
                this.infoModal.title = `Row index: ${index}`
                this.infoModal.content = JSON.stringify(item, null, 2)
                this.ID = item.ID;
                this.$root.$emit('bv::show::modal', this.infoModal.id, button)
            },

            eliminarOk: function () {
                this.ESTADO = 0;
                this.mantenimiento();
            },

            mantenimiento: function () {
                axios.post(this.SERVER_URL + '/api/Grupo/MantenimientoGrupo', {
                    ID: this.ID,
                    TITULO: this.TITULO,
                    ITEM: this.ITEM,
                    ESTADO: this.ESTADO,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.ListaGruposSinFiltro = this.ListaGruposSinFiltro.filter(x => x.ID != this.ID);
                        this.ListaGrupos = this.ListaGrupos.filter(x => x.ID != this.ID);
                    if (this.ESTADO > 0) {
                        this.ID = response.data.ID;
                        this.ListaGrupos.push({ ID: response.data.ID, TITULO: this.TITULO, ITEM: this.ITEM, ACCIONES: this.ESTADO, USUSUARIO: 'YO', FECHA: 'AHORA' });
                        this.ListaGruposSinFiltro.push({ ID: response.data.ID, TITULO: this.TITULO, ITEM: this.ITEM, ACCIONES: this.ESTADO, USUSUARIO: 'YO', FECHA: 'AHORA' });
                        }
                        this.ListaGrupos.sort((a, b) => (a.ID > b.ID) ? 1 : ((b.ID > a.ID) ? -1 : 0))
                        this.totalRows = this.ListaGrupos.length
                        this.mostrarToast({ toast: 'success', msg: 'Realizado con éxito' });
                    }
                else {
                     this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, No se realizo cambios ...' });
                    }

                }).catch(e => {
                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                });
            },

            resetInfoModal() {
                this.infoModal.title = '';
                this.infoModal.content = '';
            },
            onFiltered(filteredItems) {
                // Trigger pagination to update the number of buttons/pages due to filtering
                this.totalRows = filteredItems.length;
                this.currentPage = 1;
            },
            pantalla: function (item) {
                this.$bvModal.show(item.PANTALLA);
            },

            listarGrupos: function () {
                axios.post(this.SERVER_URL + '/api/Grupo/ListarGruposxPrograma', {
                    ID: this.ID_SEDE,
                }).then(response => {
                    this.ListaGrupos = response.data;
                    this.totalRows = this.ListaGrupos.length
                    this.ListaGruposSinFiltro = response.data;

                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' });
                });
            },
            inicio: function () {
                axios.defaults.headers.common['Authorization'] = 'Bearer ' + '@Session["Token"].ToString()';
                this.listarGrupos();
            }
        }
    })
    app.inicio();
</script>
