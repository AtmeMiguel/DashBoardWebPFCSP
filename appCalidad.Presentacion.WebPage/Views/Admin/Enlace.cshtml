
@{
    string Title = "ADMIN | Enlace";
    ViewBag.Title = Title;
}

<div id="app">
    <div class="container">
        <br />
        <div class="row">
            <div class="col-xs-12 col-md-12">
                <br />
                <template>
                    <b-container fluid>
                        <!-- User Interface controls -->
                        <b-row>
                            <b-col lg="6" class="my-1">
                                <b-form-group label="Buscar"
                                              label-for="filter-input"
                                              label-cols-sm="3"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-input-group size="sm">
                                        <b-form-input id="filter-input"
                                                      v-model="filter"
                                                      type="search"
                                                      v-on:keyup="buscar()"
                                                      placeholder="Ingresar titulo del comunicado"></b-form-input>

                                        <b-input-group-append>
                                            <b-button :disabled="!filter" @@click="filter = '', buscar()">Limpiar</b-button>
                                        </b-input-group-append>
                                    </b-input-group>
                                </b-form-group>
                            </b-col>
                            <b-col lg="6" class="my-1">
                                @*<div class="text-right">
                                        <b-button v-on:click="onSubmit" variant="info" pill><b-avatar variant="outline-info" icon="pencil-square" size="2rem"></b-avatar>Guardar</b-button>
                                    </div>*@

                                <b-form-group label="Registra nuevo"
                                              description=""
                                              label-cols-sm="3"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-avatar v-on:click="editar(0, 0, '')" title="Editar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>

                                </b-form-group>
                            </b-col>

                        </b-row>
                        <!-- Main table element -->
                        <b-row style=" height: 600px; overflow: scroll; ">
                            <b-table :items="ListaLink"
                                     :current-page="currentPage"
                                     :per-page="perPage"
                                     stacked="md"
                                     head-variant="light"
                                     show-empty
                                     sticky-header
                                     small
                                     @@filtered="onFiltered">
                                <template #cell(name)="row">
                                    {{ row.value.first }} {{ row.value.last }}
                                </template>

                                <template #cell(ACCIONES)="row">
                                    <b-avatar v-on:click="editar(row.item, row.index, $event.target)" title="Editar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                    <b-avatar v-on:click="eliminar(row.item, row.index, $event.target)" title="Eliminar" button icon="trash" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                </template>
                            </b-table>
                        </b-row>
                        <br />

                        <!-- User Interface controls -->
                        <b-row>
                            <b-col sm="5" md="6" class="my-1">
                                <b-form-group label="Per page"
                                              label-for="per-page-select"
                                              label-cols-sm="6"
                                              label-cols-md="4"
                                              label-cols-lg="3"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-form-select id="per-page-select"
                                                   v-model="perPage"
                                                   :options="pageOptions"
                                                   size="sm"></b-form-select>
                                </b-form-group>
                            </b-col>

                            <b-col sm="7" md="6" class="my-1">
                                <b-pagination v-model="currentPage"
                                              :total-rows="totalRows"
                                              :per-page="perPage"
                                              align="fill"
                                              size="sm"
                                              class="my-0"></b-pagination>
                            </b-col>
                        </b-row>


                    </b-container>
                </template>
            </div>

        </div>
    </div>

    <b-modal id="editarLink" size="md" data-html="true" hide-footer hide-header>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header bg-info" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">{{titulo}}</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <template>
                                <div>
                                    <b-tabs content-class="mt-3">
                                        <b-tab title="Editar enlace" active>
                                            <div>
                                                <b-form>
                                                    <b-form-group id="input-group-2" label="Titulo:" label-for="input-2">
                                                        <b-form-input id="input-2"
                                                                      v-model="titulo"
                                                                      required></b-form-input>
                                                    </b-form-group>
                                                    <b-form-group id="input-group-2" label="Contenido:" label-for="input-2">
                                                        <b-form-input id="input-2"
                                                                      v-model="contenido"
                                                                      required></b-form-input>
                                                    </b-form-group>
                                                    <b-form-group id="input-group-2" label="Enlace:" label-for="input-2">
                                                        <b-form-input id="input-2"
                                                                      v-model="enlace"
                                                                      required></b-form-input>
                                                    </b-form-group>
                                                    <b-form-group>
                                                        <p>Elige el tamaño de vista</p>
                                                        <div class="form-group row">
                                                            <label for="inputEmail3" class="col-sm-3 col-form-label">vista:</label>
                                                            <div class="col-sm-9">
                                                                <select v-model="modo" class="form-control" required>
                                                                    <option v-for="item in ListaModo" v-bind:value="{ ID: item.ID, VALUE: item.VALUE }">
                                                                        {{ item.VALUE }}
                                                                    </option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                    </b-form-group>

                                                </b-form>

                                                <div class="text-right">
                                                    <b-button v-on:click="onSubmit" variant="outline-info" pill><b-avatar variant="outline-info" icon="pencil-square" size="2rem"></b-avatar>Guardar</b-button>
                                                </div>

                                            </div>
                                        </b-tab>
                                        <b-tab title="Grupos asignados" v-if="ID > 0">
                                            <div>
                                                <b-form-group>
                                                    <p>Agregar un grupo al usuario</p>
                                                    <div class="form-group row">
                                                        <label for="inputEmail3" class="col-sm-3 col-form-label">Grupo:</label>
                                                        <div class="col-sm-9">
                                                            <select v-model="GRUPO" class="form-control" v-on:change="asignarLink(GRUPO)" required disabled-field="notEnabled">
                                                                <option v-for="item in ListaGrupos" v-bind:value="{ ID: item.ID, TITULO: item.TITULO }">
                                                                    {{ item.TITULO }}
                                                                </option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                </b-form-group>
                                                <hr />
                                                <!-- Main table element -->
                                                <b-row style=" height: 400px; overflow: scroll; ">
                                                    <b-table :items="ListaGruposxLink"
                                                             :fields="Columnas"
                                                             stacked="md"
                                                             head-variant="light"
                                                             small>
                                                        <template #cell(name)="row">
                                                            {{ row.value.first }} {{ row.value.last }}
                                                        </template>

                                                        <template #cell(ACCIONES)="row">
                                                            <b-avatar v-on:click="eliminarLink(row.item, row.index, $event.target)" title="Editar" button icon="trash" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                                        </template>
                                                    </b-table>
                                                </b-row>
                                                <br />

                                            </div>
                                        </b-tab>

                                    </b-tabs>
                                </div>

                            </template>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

    <!-- Info modal -->
    <b-modal :id="infoModal.id" hide-footer hide-header @@hide="resetInfoModal">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-body">
                        <div class="card-text">
                            <p>Esta seguro de eliminar</p>
                            <pre>{{ infoModal.content }}</pre>

                            <br /><br />
                            <div class="text-right">
                                <b-button v-on:click="eliminarOk" variant="outline-info" pill><b-avatar variant="outline-info" icon="trash" size="2rem"></b-avatar>Eliminar</b-button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>
</div>


<script>

    var app = new Vue({
        el: '#app',
        data: {
            ID_USUARIO: sessionStorage.getItem('ID_USUARIO'),
            SERVER_URL: sessionStorage.getItem('SERVER_URL'),
            ID_SEDE: sessionStorage.getItem('ID_SEDE'),
            PAGINA: '@Title',
            SITE: '',
            ID: 0,

            titulo: '',
            contenido: '',
            formador: '',
            enlace: '',
            modo: '',
            ID_GRUPO: 0,
            GRUPO: '',
            ListaModo: [{ ID: 0, VALUE: 'SELECCIONAR' }, { ID: 1, VALUE: 'MODAL' }, { ID: 2, VALUE: 'PÁGINA EXTERNA' }, { ID: 3, VALUE: 'TIENE SUB NIVEL' }],

            ListaLink: [],
            ListaLinkSinFiltro: [],
            ListaGrupos: [],
            ListaGruposxLink: [],

            Columnas: [
                'ID', 'TITULO', 'ACCIONES', 'USUARIO', 'FECHA'
            ],
            totalRows: 100,
            currentPage: 1,
            perPage: 20,
            pageOptions: [20, 100, 200, { value: 1000, text: "Show a lot" }],
            sortBy: '',
            sortDesc: false,
            sortDirection: 'asc',
            filter: '',
            filterOn: [],
            infoModal: {
                id: 'info-modal',
                title: '',
                content: ''
            }
        },
        mounted() {
            this.totalRows = this.ListaLink.length
        },
        methods: {
            ocultarPantalla: function (form) {
                this.$bvModal.hide(form.PANTALLA);
            },
            pantalla: function (form) {
                this.$bvModal.show(form.PANTALLA);
            },
            mostrarToast(variant = null) {
                this.MensajeSistema = variant.msg;
                this.$bvToast.toast(this.MensajeSistema, {
                    title: `Alerta de sistema`,
                    variant: variant.toast,
                    solid: true
                })
            },
            buscar: function () {
                if (this.filter.length > 0) {
                    let palabra = this.filter.toUpperCase();
                    this.ListaLink = this.ListaLinkSinFiltro.filter(x => {
                        return x.TITULO.includes(palabra);
                    });
                }
                else {
                    this.ListaLink = this.ListaLinkSinFiltro;
                }
                this.currentPage = 1;
            },
            editar(item, index, button) {
                this.titulo = ''
                this.contenido = ''
                this.enlace = ''
                this.modo = {ID:0, VALUE: 'SELECCIONAR'} 
                this.GRUPO = ''
                this.ListaGruposxLink = [];
                this.listarGrupos();
                if (item == 0) {
                    this.ID = 0;
                } else {
                    this.ID = item.ID;
                    this.titulo = item.TITULO;
                    this.contenido = item.CONTENIDO;
                    this.enlace = item.ENLACE;

                    this.listarLinkxGrupo();
                }
               this.pantalla({ PANTALLA: 'editarLink' });
            },
            eliminar: function (item, index, button) {
                this.infoModal.title = `Row index: ${index}`
                this.infoModal.content = JSON.stringify(item, null, 2)
                this.ID = item.ID;
                this.$root.$emit('bv::show::modal', this.infoModal.id, button)
            },
            eliminarOk: function () {
                axios.post(this.SERVER_URL + '/api/Enlace/AdministrarEnlace', {
                    ID: this.ID,
                    TITULO: this.titulo,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 3,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.ListaLink = this.ListaLink.filter(enlace => enlace.ID != this.ID);
                        this.ListaLinkSinFiltro = this.ListaLink;
                        this.mostrarToast({ toast: 'success', msg: 'eliminado correctamente' });
                    } else {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, No se realizo cambios ...' });
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                });
            },
            salida: function () {
                this.listarEnlaces();
            },
            resetInfoModal() {
                this.infoModal.title = '';
                this.infoModal.content = '';
            },
            onFiltered(filteredItems) {
                // Trigger pagination to update the number of buttons/pages due to filtering
                this.totalRows = filteredItems.length;
                this.currentPage = 1;
            },

            onSubmit(event) {
                this.MensajeSistema = "Verificar los siguientes campos: ";
                this.MensajeSistema = this.titulo.length < 5 ? this.MensajeSistema + " titulo" : this.MensajeSistema;
                this.MensajeSistema = this.modo.ID < 1 ? this.MensajeSistema + " Modo" : this.MensajeSistema;

                if (this.MensajeSistema.length < 35) {
                    axios.post(this.SERVER_URL + '/api/Enlace/AdministrarEnlace', {
                        ID: this.ID,
                        TITULO: this.titulo,
                        CONTENIDO: this.contenido,
                        ENLACE : this.enlace,
                        MODO: this.modo.ID,

                        ID_USUARIO: this.ID_USUARIO,
                        ID_SEDE: this.ID_SEDE,
                        TIPO: 2,
                    }).then(response => {
                        if (response.data.ID > 0) {
                            if (this.ID > 0) {
                                this.ListaLink = this.ListaLink.filter(enlace => enlace.ID != this.ID);
                            }
                            this.ID = response.data.ID;
                            this.ListaLink.push({ ID: this.ID, TITULO: this.titulo, CONTENIDO: this.contenido, ENLACE: this.enlace, MODO: this.modo.ID, ACCIONES: '', USUARIO: '', FECHA: 'AHORA' });
                            this.ListaLinkSinFiltro = this.ListaLink;
                            this.totalRows = this.ListaLink.length
                            this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                        } else {
                            this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                        }
                    }).catch(e => {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                    });
                } else {
                    this.mostrarToast({ toast: 'danger', msg: this.MensajeSistema });
                }
            },
            asignarLink(item) {
                axios.post(this.SERVER_URL + '/api/Enlace/AdministrarEnlace', {
                    ID: this.ID,
                    ID_GRUPO: item.ID,
                    ID_USUARIO: this.ID_USUARIO,
                    TIPO: 6,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.ListaGruposxLink.push({ ID: response.data.ID, TITULO: item.TITULO, CONTENIDO: item.CONTENIDO, ENLACE: item.ENLACE, MODO: item.MODO, ACCIONES: '', USUARIO: 'Yo', FECHA: 'Ahora' });
                        this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                    } else {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                });
            },
            eliminarLink(item, index, button) {
                axios.post(this.SERVER_URL + '/api/Enlace/AdministrarEnlace', {
                    ID: item.ID,
                    ID_GRUPO: this.ID_GRUPO,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 7,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.ListaGruposxLink = this.ListaGruposxLink.filter(com => com.ID != response.data.ID);
                        this.mostrarToast({ toast: 'success', msg: 'Eliminado correctamente' });

                    } else {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                });
            },

            listarGrupos: function () {
                axios.post(this.SERVER_URL + '/api/Grupo/ListarGruposxPrograma', {
                    ID: this.ID,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 1,
                }).then(response => {
                    this.ListaGrupos = response.data;
                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' });
                });
            },
            listarLinkxGrupo: function () {         //  alert(JSON.stringify(this.ListaMaestra));
                axios.post(this.SERVER_URL + '/api/Enlace/ListarEnlaces', {
                    ID: this.ID,
                    ID_GRUPO: this.ID,
                    TIPO: 8,
                }).then(response => {
                    this.ListaGruposxLink = response.data;

                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' });
                });
            },
            listarEnlaces: function () {         //  alert(JSON.stringify(this.ListaMaestra));
                axios.post(this.SERVER_URL + '/api/Enlace/ListarEnlaces', {
                    ID: this.ID,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 1,
                }).then(response => {
                    this.ListaLink = response.data;
                    this.totalRows = this.ListaLink.length;
                    this.ListaLinkSinFiltro = response.data;
                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' });
                });
            }
        }
    })
    app.listarEnlaces();
</script>



