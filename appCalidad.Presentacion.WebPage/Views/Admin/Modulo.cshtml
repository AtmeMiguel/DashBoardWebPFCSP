
@{
    string Title = "ADMIN | Modulo";
    ViewBag.Title = Title;
}
<script src="https://cdn.quilljs.com/1.3.4/quill.js"></script>
@*<script src="https://cdn.jsdelivr.net/npm/vue"></script>*@
<!-- Quill JS Vue -->
<script src="https://cdn.jsdelivr.net/npm/vue-quill-editor@3.0.6/dist/vue-quill-editor.js"></script>
<!-- Include stylesheet -->
<link href="https://cdn.quilljs.com/1.3.4/quill.core.css" rel="stylesheet">
<link href="https://cdn.quilljs.com/1.3.4/quill.snow.css" rel="stylesheet">
<link href="https://cdn.quilljs.com/1.3.4/quill.bubble.css" rel="stylesheet">
<div id="app">
    <div class="container">
        <br />
        <div class="row">
            <div class="col-xs-12 col-md-12">
                <br />

                <b-overlay :show="show" rounded="sm">


                    <b-container fluid>
                        <!-- User Interface controls -->
                        <b-row>
                            <b-col lg="6" class="my-1">
                                <b-form-group label="Buscar"
                                              label-for="filter-input"
                                              label-cols-sm="3"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-input-group size="sm">
                                        <b-form-input id="filter-input"
                                                      v-model="filter"
                                                      type="search"
                                                      v-on:keyup="buscar()"
                                                      placeholder="Ingresar titulo del examen"></b-form-input>

                                        <b-input-group-append>
                                            <b-button :disabled="!filter" @@click="filter = '', buscar()">Limpiar</b-button>
                                        </b-input-group-append>
                                    </b-input-group>
                                </b-form-group>
                            </b-col>
                            <b-col lg="3" class="my-1">
                                @*<div class="text-right">
                                        <b-button v-on:click="onSubmit" variant="info" pill><b-avatar variant="outline-info" icon="pencil-square" size="2rem"></b-avatar>Guardar</b-button>
                                    </div>*@

                                <b-form-group label="Registrar nuevo"
                                              description=""
                                              label-cols-sm="8"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-avatar v-on:click="editar(0, 0, '')" title="Editar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>

                                </b-form-group>
                            </b-col>
                            <b-col lg="3" class="my-1">
                                <b-form-group label="Carga masiva"
                                              description=""
                                              label-cols-sm="8"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-avatar v-on:click="pantallaExternaPreguntas()" title="Cargar excel" button icon="file-earmark-excel" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>

                                </b-form-group>
                            </b-col>
                        </b-row>
                        <!-- Main table element -->
                        <b-row style=" height: 600px; overflow: scroll; ">
                            <b-table :items="ListaFormularios"
                                     :current-page="currentPage"
                                     :per-page="perPage"
                                     stacked="md"
                                     head-variant="light"
                                     show-empty
                                     sticky-header
                                     small
                                     @@filtered="onFiltered">
                                <template #cell(name)="row">
                                    {{ row.value.first }} {{ row.value.last }}
                                </template>

                                <template #cell(ACCIONES)="row">
                                    <b-avatar v-on:click="editar(row.item, row.index, $event.target)" title="Editar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                    <b-avatar v-on:click="listarPreguntas(row.item, row.index, $event.target)" title="agregar pregunta" button icon="question-diamond" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                    <b-avatar v-on:click="eliminar(row.item, row.index, $event.target)" title="Eliminar" button icon="trash" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>

                                </template>
                            </b-table>
                        </b-row>
                        <br />

                        <!-- User Interface controls -->
                        <b-row>
                            <b-col sm="5" md="6" class="my-1">
                                <b-form-group label="Per page"
                                              label-for="per-page-select"
                                              label-cols-sm="6"
                                              label-cols-md="4"
                                              label-cols-lg="3"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-form-select id="per-page-select"
                                                   v-model="perPage"
                                                   :options="pageOptions"
                                                   size="sm"></b-form-select>
                                </b-form-group>
                            </b-col>

                            <b-col sm="7" md="6" class="my-1">
                                <b-pagination v-model="currentPage"
                                              :total-rows="totalRows"
                                              :per-page="perPage"
                                              align="fill"
                                              size="sm"
                                              class="my-0"></b-pagination>
                            </b-col>
                        </b-row>


                    </b-container>
                </b-overlay>

            </div>

        </div>
    </div>

    <b-modal id="editarFormulario" size="md" data-html="true" hide-footer hide-header>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header bg-info" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">{{FORMULARIO}}</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <template>
                                <div>
                                    <b-form>
                                        <b-form-group id="input-group-1" label="Titulo del modulo:" label-for="input-2">
                                            <b-form-input id="input-1"
                                                          v-model="FORMULARIO"
                                                          required></b-form-input>
                                        </b-form-group>

                                        <div class="text-right">
                                            <b-button v-on:click="onSubmit" variant="outline-info" pill><b-avatar variant="outline-info" icon="pencil-square" size="2rem"></b-avatar>Guardar</b-button>
                                        </div>
                                    </b-form>
                                </div>
                            </template>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="editarPreguntas" size="xl" data-html="true" hide-footer hide-header>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header bg-info">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">
                                {{ID_FORMULARIO}} - {{FORMULARIO}}
                            </strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <b-row>
                                <b-col lg="10" class="my-1">
                                    <div v-if="ID_PREGUNTA == 0">
                                        <b-collapse id="collapse-2">
                                            <b-form-group label="Pregunta"
                                                          label-for="filter-input"
                                                          label-cols-sm="4"
                                                          label-align-sm="right"
                                                          label-size="sm"
                                                          class="mb-0">
                                                <b-input-group size="sm">
                                                    <b-form-input id="filter-input"
                                                                  v-model="PREGUNTA"
                                                                  type="tel"></b-form-input>
                                                    <b-input-group-append>
                                                        <b-button v-on:click="guardarPregunta()" title="guardar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info">Guardar</b-button>
                                                    </b-input-group-append>
                                                </b-input-group>
                                            </b-form-group>
                                        </b-collapse>
                                    </div>
                                    <div v-else="ID_PREGUNTA == 0">
                                        <b-form-group label="Pregunta"
                                                      label-for="filter-input"
                                                      label-cols-sm="4"
                                                      label-align-sm="right"
                                                      label-size="sm"
                                                      class="mb-0">
                                            <b-input-group size="sm">
                                                <b-form-input id="filter-input"
                                                              v-model="PREGUNTA"
                                                              type="tel"></b-form-input>

                                                <b-input-group-append>
                                                    <b-button v-on:click="guardarPregunta()" title="guardar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info">Guardar</b-button>
                                                </b-input-group-append>
                                            </b-input-group>
                                        </b-form-group>
                                    </div>
                                </b-col>
                                <b-col lg="2" class="my-1 text-right">
                                    <!-- Using modifiers -->
                                    <b-button v-b-toggle.collapse-2 @@click="ID_PREGUNTA = '', PREGUNTA= ''" title="Agregar pregunta" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info">+</b-button>

                                </b-col>
                            </b-row>

                            <b-row style=" height: 600px; overflow: scroll; ">
                                <b-table :items="ListarPreguntas"
                                         stacked="md"
                                         head-variant="light"
                                         show-empty
                                         sticky-header
                                         small>
                                    <template #cell(name)="row">
                                        {{ row.value.first }} {{ row.value.last }}
                                    </template>

                                    <template #cell(ACCIONES)="row">

                                        <b-avatar v-on:click="listarRespuestas(row.item, row.index, $event.target), ID_RESPUESTA=0" title="ver" button icon="question-diamond" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                        <b-avatar v-on:click="editarPregunta(row.item, row.index, $event.target)" title="editar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                        <b-avatar v-on:click="pantallaExterna( row.item)" title="imagen" button icon="file-image" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                        <b-avatar v-on:click="eliminarPregunta(row.item, row.index, $event.target)" title="Eliminar" button icon="trash" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                    </template>
                                </b-table>
                            </b-row>


                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>
    <b-modal id="editarRespuestas" size="xl" data-html="true" hide-footer hide-header>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header bg-info">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">{{ID_PREGUNTA}} - {{PREGUNTA}}</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <b-row>
                                <div scr class="col-sm-12 col-md-12">
                                    <b-form>

                                        <b-form-group id="fieldset-horizontal"
                                                      label-cols-sm="4"
                                                      label-cols-lg="3"
                                                      content-cols-sm
                                                      content-cols-lg="7"
                                                      label="Contenido del parrafo"
                                                      label-for="input-horizontal">
                                            <b-form-input id="input-horizontal" v-model="RESPUESTA"></b-form-input>
                                        </b-form-group>

                                        <div style="height:400px; overflow-y:auto;">
                                            <b-form-group description="Puedes pegar una imagen desde el portapapeles">
                                                <quill-editor ref="quillEditor"
                                                              class="editor"
                                                              v-model="CONTENIDO"
                                                              :options="editorOption"
                                                              @@blur="onEditorBlur($event)"
                                                              @@focus="onEditorFocus($event)"
                                                              @@ready="onEditorReady($event)" />

                                            </b-form-group>
                                        </div>
                                        @*<div style="height:400px; overflow-y:auto;">
                                                <div class="content ql-editor" v-html="CONTENIDO"></div>
                                            </div>*@
                                    </b-form>
                                </div>
                                <div scr class="col-sm-12 col-md-12 text-right">

                                    <div style="margin-right: 28px; margin-top: -150px;">
                                        <b-button-group vertical>
                                            <b-avatar badge-variant="danger" variant="danger" button icon="x-square" size="4rem" v-on:click="ID_RESPUESTA = 0, VALOR = 0,RESPUESTA = '',CONTENIDO = ''">
              
                                                <template #badge>
                                                    Cancel
                                                </template>
                                            </b-avatar><br />
                                            <b-avatar badge-variant="info" variant="info" button icon="pencil-square" size="4rem" v-on:click="guardarRespuesta()">
                                                <template #badge size="3rem">
                                                    Guardar
                                                </template>
                                            </b-avatar>
                                        </b-button-group>
                                    </div>
                                    <br />
                                </div>

                            </b-row>

                            <b-row style=" height: 300px; overflow: scroll; ">
                                <b-table :items="ListarRespuestas"
                                         stacked="md"
                                         head-variant="light"
                                         show-empty
                                         sticky-header
                                         small>
                                    <template #cell(name)="row">
                                        {{ row.value.first }} {{ row.value.last }}
                                    </template>

                                    <template #cell(ACCIONES)="row">
                                        <b-avatar v-on:click="ID_RESPUESTA= row.item.ID, CONTENIDO = row.item.ACCIONES, RESPUESTA = row.item.TITULO " title="Editar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                        <b-avatar v-on:click="eliminarRespuesta(row.item, row.index, $event.target)" title="Eliminar" button icon="trash" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                    </template>
                                </b-table>
                            </b-row>


                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>
    <!-- Info modal -->
    <b-modal :id="infoModal.id" hide-footer hide-header @@hide="resetInfoModal">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-body">
                        <div class="card-text">
                            <p>Esta seguro de eliminar</p>
                            <pre>{{ infoModal.content }}</pre>

                            <br /><br />
                            <div class="text-right">
                                <b-button v-on:click="eliminarOk" variant="outline-info" pill><b-avatar variant="outline-info" icon="trash" size="2rem"></b-avatar>Eliminar</b-button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="ImageFormulario" size="xl" data-html="true" hide-footer hide-header @@hide="salidaImagen">
        <div class="col-xs-12">
            <b-embed type="iframe"
                     aspect="16by9"
                     v-bind:src="SITE"
                     allowfullscreen></b-embed>
        </div>
    </b-modal>
    <b-modal id="excelPreguntas" size="xl" data-html="true" hide-footer hide-header @@hide="salidaExcelPreguntas">
        <div class="col-xs-12">
            <b-embed type="iframe"
                     aspect="16by9"
                     v-bind:src="SITE"
                     allowfullscreen></b-embed>
        </div>
    </b-modal>
</div>
<script>
    Vue.use(VueQuillEditor)
    var app = new Vue({
        el: '#app',
        data: {
            ID_USUARIO: sessionStorage.getItem('ID_USUARIO'),
            SERVER_URL: sessionStorage.getItem('SERVER_URL'),
            ID_SEDE: sessionStorage.getItem('ID_SEDE'),
            PAGINA: '@Title',

            ID_FORMULARIO: '4',
            FORMULARIO: '',
            SITE: '',

            ID_PREGUNTA: '0',
            PREGUNTA: '',
            ID_RESPUESTA: '0',
            RESPUESTA: '',
            VALOR: '',
            CONTENIDO: '',

            ListaFormularios: [],
            ListaFormulariosSinFiltro: [],
            ListarPreguntas: [],
            ListarRespuestas: [],

            show: true,
            totalRows: 100,
            currentPage: 1,
            perPage: 20,
            pageOptions: [20, 100, 200, { value: 1000, text: "Show a lot" }],
            sortBy: '',
            sortDesc: false,
            sortDirection: 'asc',
            filter: '',
            filterOn: [],
            infoModal: {
                id: 'info-modal',
                title: '',
                content: ''
            },
            editorOption: {
                theme: 'snow'
            }
        },
        computed: {
            editor() {
                return this.$refs.quillEditor.quill
            }
        },
        mounted() {
            this.totalRows = this.ListaFormularios.length
        },
        methods: {
            onEditorBlur(quill) {

            },
            onEditorFocus(quill) {

            },
            onEditorReady(quill) {

            },
            mostrarToast(variant = null) {
                this.$bvToast.toast(variant.msg, {
                    title: `Alerta de sistema`,
                    variant: variant.toast,
                    solid: true
                })
            },
            pantalla: function (item) {
                this.show = false;
                this.$bvModal.show(item.PANTALLA);
            },
            pantallaExterna: function (item) {
                this.SITE = './ImageFormulario/?idFormulario=' + item.ID + '&idUsuario=' + this.ID_USUARIO;
                sessionStorage.setItem('IMAGE', item.ID + item.EXT);
                this.pantalla({ PANTALLA: 'ImageFormulario' });
                this.$bvModal.hide('editarPreguntas');
            },

            pantallaExternaPreguntas: function (item) {
                this.SITE = './excelPreguntas/?idUsuario=' + this.ID_USUARIO;
                this.$bvModal.show('excelPreguntas');
            },

            salidaImagen: function () {
                this.listarPreguntas({ ID: this.ID_FORMULARIO, TITULO: this.FORMULARIO});
            },

            salidaExcelPreguntas: function () {
                this.listarFormularios();
            },

            buscar: function () {
                if (this.filter.length > 0) {
                    let palabra = this.filter.toUpperCase();
                    this.ListaFormularios = this.ListaFormulariosSinFiltro.filter(x => {
                        return x.TITULO.includes(palabra);
                    });
                }
                else {
                    this.ListaFormularios = this.ListaFormulariosSinFiltro;
                }
                this.currentPage = 1;
            },

            editar(item, index, button) {
                this.FORMULARIO = ''
                this.CANTIDAD = '0'
                this.FECHA_INI = ''
                this.FECHA_FIN = ''
                if (item == 0) {
                    this.ID_FORMULARIO = 0;
                } else {
                    this.ID_FORMULARIO = item.ID;
                    this.FORMULARIO = item.TITULO
                    this.CANTIDAD = item.CAMPO_1
                    this.FECHA_INI = item.CAMPO_2
                    this.FECHA_FIN = item.CAMPO_3
                }
               this.pantalla({ PANTALLA: 'editarFormulario' });

            },
            eliminar: function (item, index, button) {
                this.infoModal.title = `Row index: ${index}`
                this.infoModal.content = JSON.stringify(item, null, 2)
                this.ID_FORMULARIO = item.ID;
                this.$root.$emit('bv::show::modal', this.infoModal.id, button)
            },
            eliminarOk: function () {
                axios.post(this.SERVER_URL + '/api/Formulario/MantenimientoFormulario', {
                    ID: this.ID_FORMULARIO,
                    TITULO: this.FORMULARIO,

                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 3,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.listarFormularios();
                        this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                    } else {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                });
            },
            editarPregunta: function (item, index, button) {
                this.ID_PREGUNTA = item.ID;
                this.PREGUNTA = item.TITULO;
            },
            eliminarPregunta: function (item, index, button) {
                var opcion = confirm("Deseas eliminar el item - " + item.TITULO);
                if (opcion == true) {
                    axios.post(this.SERVER_URL + '/api/Formulario/MantenimientoPregunta', {
                        ID: item.ID,
                        TITULO: this.PREGUNTA,

                        ID_USUARIO: this.ID_USUARIO,
                        ID_SEDE: this.ID_SEDE,
                        TIPO: 12,
                    }).then(response => {
                        if (response.data.ID > 0) {
                            this.listarPreguntas({ ID: this.ID_FORMULARIO, TITULO: this.FORMULARIO }, 0, '');
                            this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                        } else {
                            this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                        }
                    }).catch(e => {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                    });
                } else {
                    this.mostrarToast({ toast: 'warning', msg: 'Cancelado por el usuario' });
                }
            },
            eliminarRespuesta: function (item, index, button) {
                var opcion = confirm("Deseas eliminar el item - " + item.TITULO);
                if (opcion == true) {
                    axios.post(this.SERVER_URL + '/api/Formulario/MantenimientoRespuesta', {
                        ID: item.ID,
                        TITULO: this.RESPUESTA,

                        ID_USUARIO: this.ID_USUARIO,
                        ID_SEDE: this.ID_SEDE,
                        TIPO: 22,
                    }).then(response => {
                        if (response.data.ID > 0) {

                            this.listarRespuestas({ ID: this.ID_PREGUNTA, TITULO: this.PREGUNTA }, 0, '');
                            this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                        } else {
                            this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                        }
                    }).catch(e => {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                    });
                } else {
                    this.mostrarToast({ toast: 'warning', msg: 'Cancelado por el usuario' });
                }
            },
            resetInfoModal() {
                this.infoModal.title = '';
                this.infoModal.content = '';
            },
            onFiltered(filteredItems) {
                // Trigger pagination to update the number of buttons/pages due to filtering
                this.totalRows = filteredItems.length;
                this.currentPage = 1;
            },
            onSubmit(event) {
                this.MensajeSistema = "Verificar los siguientes campos: ";
                this.MensajeSistema = this.FORMULARIO.length < 5 ? this.MensajeSistema + " titulo" : this.MensajeSistema;
                if (this.MensajeSistema.length < 35) {
                    axios.post(this.SERVER_URL + '/api/Formulario/MantenimientoFormulario', {
                        ID: this.ID_FORMULARIO,
                        TITULO: this.FORMULARIO,
                        CAMPO_1: '',
                        CAMPO_2: '',
                        CAMPO_3: '',

                        ID_USUARIO: this.ID_USUARIO,
                        ID_SEDE: this.ID_SEDE,
                        TIPO: 102,
                    }).then(response => {
                        if (response.data.ID > 0) {
                            this.listarFormularios();
                            this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                        } else {
                            this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                        }
                    }).catch(e => {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                    });
                } else {
                    this.mostrarToast({ toast: 'danger', msg: this.MensajeSistema });
                }
            },
            guardarPregunta (event) {
                this.MensajeSistema = "Verificar los siguientes campos: ";
                this.MensajeSistema = this.PREGUNTA.length < 5 ? this.MensajeSistema + " Pregunta" : this.MensajeSistema;
                if (this.MensajeSistema.length < 35) {

                    axios.post(this.SERVER_URL + '/api/Formulario/MantenimientoPregunta', {
                        ID: this.ID_PREGUNTA,
                        TITULO: this.PREGUNTA,

                        ID_USUARIO: this.ID_USUARIO,
                        ID_SEDE: this.ID_FORMULARIO,
                        TIPO: 11,
                    }).then(response => {
                        if (response.data.ID > 0) {
                            this.ID_PREGUNTA = 0;
                            this.PREGUNTA = '';

                            this.listarPreguntas({ ID: this.ID_FORMULARIO, TITULO: this.FORMULARIO },0,'');
                            this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                        } else {
                            this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                        }
                    }).catch(e => {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                    });
                } else {
                    this.mostrarToast({ toast: 'danger', msg: this.MensajeSistema });
                }
            },
            guardarRespuesta() {
                this.MensajeSistema = "Verificar los siguientes campos: ";
                this.MensajeSistema = this.RESPUESTA.length < 1 ? this.MensajeSistema + " Respuesta" : this.MensajeSistema;
                //this.MensajeSistema = this.VALOR.length < 1 ? this.MensajeSistema + " Valor" : this.MensajeSistema;

                if (this.MensajeSistema.length < 35) {
                    axios.post(this.SERVER_URL + '/api/Formulario/MantenimientoRespuesta', {
                        ID: this.ID_RESPUESTA,
                        TITULO: this.RESPUESTA,
                        CAMPO_1: '',  //this.VALOR,
                        CAMPO_2: this.PREGUNTA,
                        CAMPO_3: this.CONTENIDO,

                        ID_USUARIO: this.ID_USUARIO,
                        ID_SEDE: this.ID_PREGUNTA,
                        TIPO: 21,
                    }).then(response => {
                        if (response.data.ID > 0) {
                            this.RESPUESTA = '';
                            this.VALOR = 0;
                            this.ID = 0;
                            this.listarRespuestas({ ID: this.ID_PREGUNTA, TITULO: this.PREGUNTA }, 0, '');
                            this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                        } else {
                            this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                        }
                    }).catch(e => {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                    });
                } else {
                    this.mostrarToast({ toast: 'danger', msg: this.MensajeSistema });
                }
            },
            listarFormularios: function () {         //  alert(JSON.stringify(this.ListaMaestra));
                axios.post(this.SERVER_URL + '/api/Formulario/ListarFormulariosxPrograma', {
                    ID: this.ID,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 101,
                }).then(response => {
                    if (response.data.length > 0) {
                        this.ListaFormularios = response.data;
                        this.totalRows = this.ListaFormularios.length;
                        this.ListaFormulariosSinFiltro = response.data;
                        this.show = false;
                    }
                }).catch(e => {this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            },
            listarPreguntas: function (item, index, button) {         //  alert(JSON.stringify(this.ListaMaestra));   MantenimientoPregunta
                this.show = true;
                this.ID_FORMULARIO = item.ID;
                this.FORMULARIO = item.TITULO;
                this.ID_PREGUNTA = 0;
                this.PREGUNTA = '';
                axios.post(this.SERVER_URL + '/api/Formulario/ListarPreguntasxFormulario', {
                    ID: this.ID,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: item.ID,
                    TIPO: 10,
                }).then(response => {
                    if (response.data.length > 0) {
                        this.ListarPreguntas = response.data;
                        this.pantalla({ PANTALLA: 'editarPreguntas' });
                    }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            },
            listarRespuestas: function (item, index, button) {         //  alert(JSON.stringify(this.ListaMaestra));
                this.show = true;
                this.ID_PREGUNTA = item.ID
                this.PREGUNTA = item.TITULO
                this.ID_RESPUESTA = 0;
                this.VALOR = 0;
                this.RESPUESTA = '';
                this.CONTENIDO = '',

                axios.post(this.SERVER_URL + '/api/Formulario/ListarRespuestasxPregunta', {
                    ID: 0,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_PREGUNTA,
                    TIPO: 20,
                }).then(response => {
                    
                        this.ListarRespuestas = response.data;
                        this.pantalla({ PANTALLA: 'editarRespuestas' });
                   
                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' });
                });
            }
        }
    })
    app.listarFormularios();
</script>
