
@{
    string Title = "ADMIN | Comunicado";
    ViewBag.Title = Title;
}

<div id="app">
    <div class="container">
        <br />
        <div class="row">
            <div class="col-xs-12 col-md-12">
                <br />
                <template>
                    <b-container fluid>
                        <!-- User Interface controls -->
                        <b-row>
                            <b-col lg="4" class="my-1">
                                <b-form-group label="Buscar"
                                              label-for="filter-input"
                                              label-cols-sm="3"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-input-group size="sm">
                                        <b-form-input id="filter-input"
                                                      v-model="filter"
                                                      type="search"
                                                      v-on:keyup="buscar()"
                                                      placeholder="Ingresar título"></b-form-input>

                                        <b-input-group-append>
                                            <b-button :disabled="!filter" @@click="filter = '', buscar()">Limpiar</b-button>
                                        </b-input-group-append>
                                    </b-input-group>
                                </b-form-group>
                            </b-col>
                            <b-col lg="2" class="my-1">
                                <b-form-group label="Registrar nuevo"
                                              description=""
                                              label-cols-sm="8"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-avatar v-on:click="editar(0, 0, '')" title="Editar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>

                                </b-form-group>
                            </b-col>
                            <b-col lg="1" class="my-1">
                                <template>
                                    <b-form-checkbox v-model="checked" name="check-button" switch size="sm" v-on:change="filter = '', buscarConfirmados()">Confirmación</b-form-checkbox>
                                </template>
                            </b-col>
                            <b-col lg="5" class="my-1">
                                <b-form-group label="Lista"
                                              label-for="filter-input"
                                              label-cols-sm="4"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-input-group size="sm">
                                        <b-form-tags input-id="tags-basic" v-model="Lista"></b-form-tags>
                                        <b-input-group-append>
                                            <b-button @@click="extraerExcel()">Lectura</b-button>
                                        </b-input-group-append>
                                        <b-input-group-append>
                                            <b-button @@click="extraerExcelEncuesta()">Encuesta</b-button>
                                        </b-input-group-append>
                                    </b-input-group>
                                </b-form-group>
                            </b-col>

                        </b-row>
                        <!-- Main table element -->
                        <b-row style=" height: 600px; overflow: scroll; ">
                            <b-table :items="ListaComunicados"
                                     :current-page="currentPage"
                                     :fields="Columnas"
                                     :per-page="perPage"
                                     stacked="md"
                                     head-variant="light"
                                     show-empty
                                     sticky-header
                                     small
                                     @@filtered="onFiltered">
                                <template #cell(name)="row">
                                    {{ row.value.first }} {{ row.value.last }}
                                </template>

                                <template #cell(ACCIONES)="row">
                                    <b-avatar v-on:click="editar(row.item, row.index, $event.target)" title="Editar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                    <b-avatar v-on:click="pantallaExterna( row.item)" title="imagen" button icon="file-image" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                    <b-avatar v-on:click="eliminar(row.item, row.index, $event.target)" title="Eliminar" button icon="trash" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                    <b-avatar v-on:click="agregar(row.item, row.index, $event.target)" title="Agregar" button icon="archive" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                    <b-avatar v-on:click="graficoAvance(row.item, row.index, $event.target)" title="Gráfico" button icon="bar-chart-line" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                </template>
                            </b-table>
                        </b-row>
                        <br />

                        <!-- User Interface controls -->
                        <b-row>
                            <b-col sm="5" md="6" class="my-1">
                                <b-form-group label="Per page"
                                              label-for="per-page-select"
                                              label-cols-sm="6"
                                              label-cols-md="4"
                                              label-cols-lg="3"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-form-select id="per-page-select"
                                                   v-model="perPage"
                                                   :options="pageOptions"
                                                   size="sm"></b-form-select>
                                </b-form-group>
                            </b-col>

                            <b-col sm="7" md="6" class="my-1">
                                <b-pagination v-model="currentPage"
                                              :total-rows="totalRows"
                                              :per-page="perPage"
                                              align="fill"
                                              size="sm"
                                              class="my-0"></b-pagination>
                            </b-col>
                        </b-row>


                    </b-container>
                </template>
            </div>

        </div>

    </div>

    <b-modal id="editarComunicado" size="lg" data-html="true" hide-footer hide-header @@hide="salida">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado">
                    <div class="card-header bg-info" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">{{titulo}}</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <template>
                                <div>
                                    <b-tabs content-class="mt-3">
                                        <b-tab title="Editar comunicado" active>
                                            <div>
                                                <b-form>
                                                    <b-form-group id="input-group-2" label="Titulo:" label-for="input-2">
                                                        <b-form-input id="input-2"
                                                                      v-model="titulo"
                                                                      required></b-form-input>
                                                    </b-form-group>
                                                    <b-form-group id="input-group-2" label="Contenido:" label-for="input-2">
                                                        <b-form-input id="input-2"
                                                                      v-model="contenido"
                                                                      required></b-form-input>
                                                    </b-form-group>
                                                    <b-form-group id="input-group-2" label="Link externo:" label-for="input-2">
                                                        <b-form-input id="input-2"
                                                                      v-model="ENLACE"
                                                                      required></b-form-input>
                                                    </b-form-group>

                                                    <b-form-group id="input-group-2" label="" label-for="input-2">
                                                        <b-form-checkbox id="checkbox-1"
                                                                         v-model="CONFIRMAR"
                                                                         name="checkbox-1"
                                                                         value="1"
                                                                         unchecked-value="0" size="lg">
                                                            Confirmación lectura
                                                        </b-form-checkbox>
                                                    </b-form-group>

                                                </b-form>

                                                <div class="text-right">
                                                    <b-button v-on:click="onSubmit" variant="outline-info" pill><b-avatar variant="outline-info" icon="pencil-square" size="2rem"></b-avatar>Guardar</b-button>
                                                </div>

                                            </div>
                                        </b-tab>
                                        <b-tab title="Grupos asignados" v-if="ID > 0">
                                            <div>
                                                <b-form-group>
                                                    <p>Agregar un grupo</p>
                                                    <div class="form-group row">
                                                        <label for="inputEmail3" class="col-sm-3 col-form-label">Grupo:</label>
                                                        <div class="col-sm-9">
                                                            <select v-model="GRUPO" class="form-control" v-on:change="asignarComunicado(GRUPO)" required disabled-field="notEnabled">
                                                                <option v-for="item in ListaGrupos" v-bind:value="{ ID: item.ID, TITULO: item.TITULO }">
                                                                    {{ item.TITULO }}
                                                                </option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                </b-form-group>
                                                <hr />
                                                <p>Este comunicado esta visible en los siguientes grupos</p>
                                                <!-- Main table element -->
                                                <b-row style=" height: 400px; overflow: scroll; ">
                                                    <b-table :items="ListaGruposxComunicados"
                                                             :fields="filasComunicado"
                                                             stacked="md"
                                                             head-variant="light"
                                                             small>
                                                        <template #cell(name)="row">
                                                            {{ row.value.first }} {{ row.value.last }}
                                                        </template>

                                                        <template #cell(ACCIONES)="row">
                                                            <b-avatar v-on:click="eliminarComunicado(row.item, row.index, $event.target)" title="Editar" button icon="trash" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                                        </template>
                                                    </b-table>
                                                </b-row>
                                                <br />

                                            </div>
                                        </b-tab>
                                        <b-tab title="Encuesta" v-on:click="listarPreguntas() ,PREGUNTA='', CONTENIDO_=''" v-if="ID > 0">
                                            <div>
                                                <b-form>
                                                    <b-form-group id="input-group-2" label="Titulo:" label-for="input-2">
                                                        <b-form-input id="input-2"
                                                                      v-model="PREGUNTA" placeholder="Título de la pregunta"
                                                                      required></b-form-input>
                                                    </b-form-group>
                                                    <b-form-group id="input-group-2" label="Comentario:" label-for="input-2">
                                                        <b-form-input id="input-2"
                                                                      v-model="CONTENIDO_" placeholder="Comentario"
                                                                      required></b-form-input>
                                                    </b-form-group>
                                                </b-form>

                                                <div class="text-right">
                                                    <b-button v-on:click="guardarPregunta()" variant="outline-info" pill><b-avatar variant="outline-info" icon="pencil-square" size="2rem"></b-avatar>Guardar</b-button>
                                                </div>
                                                <hr />
                                                <p>La encuesta contiene las siguientes preguntas</p>
                                                <!-- Main table element -->
                                                <b-row style=" height: 400px; overflow: scroll; ">
                                                    <b-table :items="ListaEncuestaPreguntas"
                                                             :fields="filasEncuesta"
                                                             stacked="md"
                                                             head-variant="light"
                                                             small>
                                                        <template #cell(name)="row">
                                                            {{ row.value.first }} {{ row.value.last }}
                                                        </template>

                                                        <template #cell(ACCIONES)="row">
                                                            <b-avatar v-on:click="RESPUESTA='',VALOR=0,listarRespuestas(row.item, row.index, $event.target)" title="ver detalle" button icon="book" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                                            <b-avatar v-on:click="eliminarPregunta(row.item, row.index, $event.target)" title="Eliminar" button icon="trash" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                                        </template>
                                                    </b-table>
                                                </b-row>
                                                <br />

                                            </div>
                                        </b-tab>
                                    </b-tabs>
                                </div>

                            </template>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="agregarRespuesta" size="md" data-html="true" hide-footer hide-header @@hide="PREGUNTA='', CONTENIDO_=''">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header bg-info" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">{{PREGUNTA}}</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <template>

                                <div>
                                    <b-form>
                                        <b-form-group id="input-group-2" label="Titulo:" label-for="input-2">
                                            <b-form-input id="input-2"
                                                          v-model="RESPUESTA" placeholder="Título de la respuesta"
                                                          required></b-form-input>
                                        </b-form-group>
                                        <b-form-group id="input-group-2" label="Comentario:" label-for="input-2">
                                            <b-form-input id="input-1" v-model="VALOR" placeholder="Ingresar valor" oninput="this.value = this.value.replace(/[^0-9.]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1');"></b-form-input>
                                        </b-form-group>
                                    </b-form>

                                    <div class="text-right">
                                        <b-button v-on:click="guardarRespuesta()" variant="outline-info" pill><b-avatar variant="outline-info" icon="pencil-square" size="2rem"></b-avatar>Guardar</b-button>
                                    </div>
                                    <hr />
                                    <p>La pregunta contiene las siguientes respuestas</p>
                                    <!-- Main table element -->
                                    <b-row style=" height: 300px; overflow: scroll; ">
                                        <b-table :items="ListaEncuestaRespuestas"
                                                 :fields="filasEncuesta"
                                                 stacked="md"
                                                 head-variant="light"
                                                 small>
                                            <template #cell(name)="row">
                                                {{ row.value.first }} {{ row.value.last }}
                                            </template>

                                            <template #cell(ACCIONES)="row">
                                                <b-avatar v-on:click="eliminarRespuesta(row.item, row.index, $event.target)" title="Editar" button icon="trash" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                            </template>
                                        </b-table>
                                    </b-row>
                                    <br />

                                </div>



                            </template>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>
    <b-modal id="grafico" size="xl" data-html="true" hide-footer hide-header @@hide="resetInfoModal">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header bg-info">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">
                                {{ID}} - {{titulo}}
                            </strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <br />
                            <template v-for="item in grafico">
                                <div class="row">
                                    <div class="col-md-6">
                                        <h4>Datos por empresa</h4>
                                        <bar-chart :colors="['#19C4D4','#19C4D4' ]" :data="item.EMPRESA"></bar-chart>
                                    </div>
                                    <div class="col-md-6">
                                        <h4>Datos por canal</h4>
                                        <pie-chart :data="item.CANAL"></pie-chart>
                                    </div>
                                    <br /><hr /><br />
                                </div>
                                <br />
                                <hr />
                                <br />
                                <div class="row">
                                    <div class="col-md-12" v-for="i in item.PREGUNTAS">
                                        <h4>{{i.PREGUNTA}}</h4>
                                        <bar-chart :data="i.GRAFICO"></bar-chart>
                                        <br /><br />
                                    </div>
                                </div>
                            </template>



                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>
    <!-- Info modal -->
    <b-modal :id="infoModal.id" hide-footer hide-header @@hide="resetInfoModal">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-body">
                        <div class="card-text">
                            <p>Esta seguro de eliminar</p>
                            <pre>{{ infoModal.content }}</pre>

                            <br /><br />
                            <div class="text-right">
                                <b-button v-on:click="eliminarOk" variant="outline-info" pill><b-avatar variant="outline-info" icon="trash" size="2rem"></b-avatar>Eliminar</b-button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>
    <b-modal id="ImageComunicado" size="xl" data-html="true" hide-footer hide-header @@hide="salida">
        <div class="col-xs-12">
            <b-embed type="iframe"
                     aspect="16by9"
                     v-bind:src="SITE"
                     allowfullscreen></b-embed>
        </div>
    </b-modal>
</div>

@*<script>
        const ctx = document.getElementById('myChart').getContext('2d');
        const myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                datasets: [{
                    label: '# of Votes',
                    data: [12, 19, 3, 5, 2, 3],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>*@
<script>

    var app = new Vue({
        el: '#app',
        data: {
            ID_USUARIO: sessionStorage.getItem('ID_USUARIO'),
            SERVER_URL: sessionStorage.getItem('SERVER_URL'),
            ID_SEDE: sessionStorage.getItem('ID_SEDE'),
            PAGINA: '@Title',
            SITE: '',
            ID: 0,

            titulo: '',
            contenido: '',
            formador: '',
            BANNER: '',
            CONFIRMAR: '0',
            ID_GRUPO: 0,
            GRUPO: '',
            ENLACE: '',

            ID_PREGUNTA: 0,
            PREGUNTA: '',
            RESPUESTA: '',
            VALOR: '',
            CONTENIDO_:'',


            ListaComunicados: [],
            ListaComunicadosSinFiltro: [],
            ListaGrupos: [],
            ListaGruposxComunicados: [],
            ListaFormador: [],
            ListaEncuestaPreguntas: [],
            ListaEncuestaRespuestas: [],

            grafico: [],
            Lista: [],
            checked: false,
            Columnas: [
                'ID', 'TITULO', { key: 'CONTENIDO', label: 'FECHA DE CREACIÓN' },'FORMADOR','BANNER','EXT','CONFIRMAR', 'ACCIONES', 'USUARIO', 'FECHA'
            ],
            filasComunicado: [
                'ID', 'TITULO',  'ACCIONES', 'USUARIO', 'FECHA'
            ],
            filasEncuesta: [
                'ID', 'TITULO', 'RESULTADO', 'ACCIONES', 'USUARIO', 'FECHA'
            ],
            totalRows: 100,
            currentPage: 1,
            perPage: 100,
            pageOptions: [100, 200, 400, { value: 1000, text: "Show a lot" }],
            sortBy: '',
            sortDesc: false,
            sortDirection: 'asc',
            filter: '',
            filterOn: [],
            infoModal: {
                id: 'info-modal',
                title: '',
                content: ''
            }
        },
        mounted() {
            this.totalRows = this.ListaComunicados.length
        },
        methods: {
            ocultarPantalla: function (form) {
                this.$bvModal.hide(form.PANTALLA);
            },
            pantalla: function (form) {
                this.$bvModal.show(form.PANTALLA);
            },
            mostrarToast(variant = null) {
                this.MensajeSistema = variant.msg;
                this.$bvToast.toast(this.MensajeSistema, {
                    title: `Alerta de sistema`,
                    variant: variant.toast,
                    solid: true
                })
            },
            pantallaExterna: function (item) {
                this.SITE = './ImageComunicado/?idComunicado=' + item.ID + '&idUsuario=' + this.ID_USUARIO;
                sessionStorage.setItem('IMAGE', item.ID + item.EXT);
                this.$bvModal.show('ImageComunicado');
            },
            buscar: function () {
                if (this.filter.length > 0) {
                    let palabra = this.filter.toUpperCase();
                    this.ListaComunicados = this.ListaComunicadosSinFiltro.filter(x => {
                        return x.TITULO.includes(palabra);
                    });
                } else {
                    this.ListaComunicados = this.ListaComunicadosSinFiltro;
                }
                this.currentPage = 1;
            },
            buscarConfirmados: function () {
                if (this.checked == true) {
                    this.ListaComunicados = this.ListaComunicadosSinFiltro.filter(x => {
                        return x.CONFIRMAR == 1;
                    })
                } else {
                    this.ListaComunicados = this.ListaComunicadosSinFiltro;
                }
                this.currentPage = 1;
            },
            agregar(item, index, button) {
                this.Lista.push(item.ID);
            },
            extraerExcel() {
                let letras = '';
                for (item in this.Lista) {
                    letras = letras + `${this.Lista[item]}` + ', ';
                }
                letras = letras.slice(0, -2);
                document.location.href = this.SERVER_URL + 'Reportes/ComunicadoConfirmadoExcel/?idComunicado=' + letras;
            },
            extraerExcelEncuesta() {
                let letras = '';
                for (item in this.Lista) {
                    letras = letras + `${this.Lista[item]}` + ', ';
                }
                letras = letras.slice(0, -2);
                document.location.href = this.SERVER_URL + 'Reportes/ComunicadoEncuestaExcel/?idComunicado=' + letras;
            },
            editar(item, index, button) {
                this.titulo = ''
                this.contenido = ''
                this.CONFIRMAR = '0'
                this.GRUPO = ''
                this.ENLACE = '',
                this.ListaGruposxComunicados = [];
                //this.listarGrupos();
                if (item == 0) {
                    this.ID = 0;
                } else {
                    this.ID = item.ID;
                    this.titulo = item.TITULO;
                    this.contenido = item.CONTENIDO;
                    this.CONFIRMAR = item.CONFIRMAR;
                    this.ENLACE = item.ENLACE;
                    //this.listarComunicadosxGrupo();
                        //if (this.ListaGrupos[i].TITULO == item.GRUPO) {
                        //    this.grupo = `${this.ListaGrupos[i].ID}`
                        //} else {
                        //    this.grupo = 0
                        //}
                }
               this.pantalla({ PANTALLA: 'editarComunicado' });
            },
            eliminar: function (item, index, button) {
                this.infoModal.title = `Row index: ${index}`
                this.infoModal.content = JSON.stringify(item, null, 2)
                this.ID = item.ID;
                this.$root.$emit('bv::show::modal', this.infoModal.id, button)
            },
            eliminarOk: function () {
                axios.post(this.SERVER_URL + '/api/Comunicado/EliminarComunicado', {
                    ID: this.ID,
                    ID_USUARIO: this.ID_USUARIO,
                    TIPO: 3,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.listarComunicados({ ID_GRUPO: this.ID_GRUPO, GRUPO: this.GRUPO });
                        this.mostrarToast({ toast: 'success', msg: 'eliminado correctamente' });
                    } else {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                });
            },
            salida: function () {
                this.listarComunicados({ ID_GRUPO: this.ID_GRUPO, GRUPO: this.GRUPO });  // listarComunicados({ ID_GRUPO: item.ID, GRUPO: item.TITULO })
            },
            resetInfoModal() {
                this.infoModal.title = '';
                this.infoModal.content = '';
            },
            onFiltered(filteredItems) {
                // Trigger pagination to update the number of buttons/pages due to filtering
                this.totalRows = filteredItems.length;
                this.currentPage = 1;
            },

            onSubmit(event) {
                this.MensajeSistema = "Verificar los siguientes campos: ";
                this.MensajeSistema = this.titulo.length < 3 ? this.MensajeSistema + " titulo" : this.MensajeSistema;

                if (this.MensajeSistema.length < 35) {

                    axios.post(this.SERVER_URL + '/api/Comunicado/AdministrarComunicado', {
                        ID: this.ID,
                        TITULO: this.titulo,
                        CONTENIDO: this.contenido,
                        CONFIRMAR: this.CONFIRMAR,
                        ID_USUARIO: this.ID_USUARIO,
                    }).then(response => {
                        if (response.data.ID > 0) {
                            this.ID = response.data.ID;
                            //this.listarComunicadosxGrupo();
                            this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                        } else {
                            this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                        }
                    }).catch(e => {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                    });
                } else {
                    this.mostrarToast({ toast: 'danger', msg: this.MensajeSistema });
                }
            },
            asignarComunicado(item) {
                axios.post(this.SERVER_URL + '/api/Comunicado/MantenimientoComunicado', {
                    ID: this.ID,
                    ID_GRUPO: item.ID,
                    ID_USUARIO: this.ID_USUARIO,
                    TIPO: 6,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.ListaGruposxComunicados.push({ ID: response.data.ID, TITULO: item.TITULO, CONTENIDO: item.CONTENIDO, FORMADOR: item.FORMADOR, ACCIONES: '', USUARIO: 'Yo', FECHA: 'Ahora' });

                        this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                    } else {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                });
            },
            eliminarComunicado(item, index, button) {
                axios.post(this.SERVER_URL + '/api/Comunicado/MantenimientoComunicado', {
                    ID: item.ID,
                    ID_GRUPO: this.ID_GRUPO,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 7,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.ListaGruposxComunicados = this.ListaGruposxComunicados.filter(com => com.ID != response.data.ID);
                        this.mostrarToast({ toast: 'success', msg: 'Eliminado correctamente' });

                    } else {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                });
            },
            previewImage: function (event) {
                // Reference to the DOM input element
                var input = event.target;
                // Ensure that you have a file before attempting to read it
                if (input.files && input.files[0]) {
                    // create a new FileReader to read this image and convert to base64 format
                    var reader = new FileReader();
                    // Define a callback function to run, when FileReader finishes its job
                    reader.onload = (e) => {
                        // Note: arrow function used here, so that "this.imageData" refers to the imageData of Vue component
                        // Read image as base64 and set to imageData
                        this.imageData = e.target.result;
                    }
                    // Start the reader job - read file as a data url (base64 format)
                    reader.readAsDataURL(input.files[0]);
                }
            },

            guardarPregunta: function () {
                axios.post(this.SERVER_URL + '/api/Encuesta/AdministrarEncuesta', {
                    ID: this.ID,
                    TITULO: this.PREGUNTA,
                    CONTENIDO: this.CONTENIDO_,
                    ID_GRUPO: this.ID_GRUPO,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 2,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.ID_PREGUNTA = response.data.ID;
                        this.ListaEncuestaPreguntas.push({ ID: response.data.ID, TITULO: this.PREGUNTA, RESULTADO: this.CONTENIDO_, ACCIONES: '', USUARIO: 'Yo', FECHA: 'Ahora' });
                        this.listarRespuestas({ ID: this.ID_PREGUNTA});
                        this.RESPUESTA = ''; this.VALOR = '0';

                        //this.PREGUNTA = '', this.CONTENIDO_ = '',
                        this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                    } else {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                });
            },
            eliminarPregunta: function (item, index, button) {
                axios.post(this.SERVER_URL + '/api/Encuesta/AdministrarEncuesta', {
                    ID: item.ID,

                    ID_GRUPO: this.ID_GRUPO,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 3,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.ListaEncuestaPreguntas = this.ListaEncuestaPreguntas.filter(x => x.ID != response.data.ID);

                        this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                    } else {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                });
            },

            guardarRespuesta: function () {
                axios.post(this.SERVER_URL + '/api/Encuesta/AdministrarEncuesta', {
                    ID: this.ID_PREGUNTA,
                    TITULO: this.RESPUESTA,
                    VALOR: this.VALOR,
                    ID_GRUPO: this.ID_GRUPO,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 12,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.ListaEncuestaRespuestas.push({ ID: response.data.ID, TITULO: this.RESPUESTA, RESULTADO: this.VALOR, ACCIONES: '', USUARIO: 'Yo', FECHA: 'Ahora' });
                        this.RESPUESTA = '', this.VALOR = '0',
                        this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                    } else {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                });
            },
            eliminarRespuesta: function (item, index, button) {
                axios.post(this.SERVER_URL + '/api/Encuesta/AdministrarEncuesta', {
                    ID: item.ID,

                    ID_GRUPO: this.ID_GRUPO,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 14,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.ListaEncuestaRespuestas = this.ListaEncuestaRespuestas.filter(x => x.ID != item.ID);

                        this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                    } else {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                });
            },

            graficoAvance: function (item) {
                this.graficoTorta = [];
                this.ID = item.ID;
                this.titulo = item.TITULO;

                axios.post(this.SERVER_URL + '/api/Encuesta/ListarEncuesta', {
                    ID: this.ID,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 16,
                }).then(response => {
                    let lista = response.data;
                    // alert(JSON.stringify(lista));

                    if (lista.length > 0) {
                        let general = []; let agentes = []; let listaPreguntas = []; let preguntas = []; let listaRespuestas = []; let respuestas = []; let empresas = []; let canales = []; let e = {}; let c = {};
                        let map = new Map();
                        for (let item of lista) {
                            if (!map.has(item.ID)) {
                                map.set(item.ID, true);
                                agentes.push({ ID: item.ID, EMPRESA: item.PLANTILLA, CANAL: item.ACCIONES, AGENTE: item.USUARIO });
                            }
                        }
                        let mapP = new Map();
                        for (let item of lista) {
                            if (!mapP.has(item.TITULO)) {
                                mapP.set(item.TITULO, true);
                                listaPreguntas.push({ ID: item.ID, PREGUNTA: item.TITULO });
                            }
                        }

                        for (let i in listaPreguntas) {
                            respuesta = []; listaRespuestas = [];
                            let preg = lista.filter(x => x.TITULO == listaPreguntas[i].PREGUNTA);
                            for (let res in preg) {
                                let resp = preg.filter(x => x.TITULO == preg[res].TITULO);
                                let resp2 = preg.filter(x => x.RESULTADO == preg[res].RESULTADO);

                                let por = (parseFloat(resp2.length) * 100).toFixed(2);
                                por = (por / parseFloat(resp.length)).toFixed(2);

                                respuesta.push(preg[res].RESULTADO + ' (' + por + ' %) (' + preg[res].ID_USUARIO + ' Pts)');
                            }

                            let r = {};
                            respuesta.forEach((el) => { r[el] = r[el] ? (r[el] += 1) : 1; });
                            preguntas.push({
                                PREGUNTA: listaPreguntas[i].PREGUNTA,
                                GRAFICO: r,
                            });
                        }

                        for (var items in agentes) {
                            empresas.push(agentes[items].EMPRESA);
                            canales.push(agentes[items].CANAL);
                        }
                        empresas.forEach((el) => { e[el] = e[el] ? (e[el] += 1) : 1; });
                        canales.forEach((el) => { c[el] = c[el] ? (c[el] += 1) : 1; });

                        general.push({
                            EMPRESA: e,
                            CANAL: c,
                            PREGUNTAS: preguntas,
                        });

                        this.grafico = general;
                        this.$bvModal.show('grafico');
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' });
                });
            },


            listarPreguntas: function () {
                axios.post(this.SERVER_URL + '/api/Encuesta/ListarEncuesta', {
                    ID: this.ID,

                    ID_GRUPO: this.ID_GRUPO,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 1,
                }).then(response => {
                    if (response.data.length > 0) {
                        let lista = response.data;
                        for (item in lista) {
                            //alert(lista[item].TITULO);
                            this.ListaEncuestaPreguntas.push({ ID: lista[item].ID, TITULO: lista[item].TITULO, RESULTADO: lista[item].RESULTADO, ACCIONES: '', USUARIO: lista[item].USUARIO, FECHA: lista[item].FECHA });
                        }
                        //this.PREGUNTA = '', this.CONTENIDO_ = '',
                        this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                    } else {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                });
            },
            listarRespuestas: function (item) {
                this.ID_PREGUNTA = item.ID;
                this.ListaEncuestaRespuestas = [];
                axios.post(this.SERVER_URL + '/api/Encuesta/ListarEncuesta', {
                    ID: this.ID_PREGUNTA,
                    ID_GRUPO: this.ID_GRUPO,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 11,
                }).then(response => {
                    if (response.data.length > 0) {
                        let lista = response.data;
                        for (item in lista) {
                            this.ListaEncuestaRespuestas.push({ ID: lista[item].ID, TITULO: lista[item].TITULO, RESULTADO: lista[item].RESULTADO, ACCIONES: '', USUARIO: lista[item].USUARIO, FECHA: lista[item].FECHA });
                        }
                    }
                    this.$bvModal.show('agregarRespuesta');
                }).catch(e => {
                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                });
            },


            //listar: function () {         //  alert(JSON.stringify(this.ListaMaestra));
            //    axios.post(this.SERVER_URL + '/api/Rol/ListarRolesxPrograma', {
            //        ID: 21,
            //        ID_USUARIO: this.ID_USUARIO,
            //        ID_SEDE: this.ID_SEDE,
            //        TIPO: 12,
            //    }).then(response => {
            //        if (response.data.length > 0) {
            //            alert(JSON.stringify(response.data));
            //            //this.ListaFormador = response.data;
            //        }
            //    }).catch(e => {
            //        this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' });
            //    });
            //},
            listarGrupos: function () {
                axios.post(this.SERVER_URL + '/api/Grupo/ListarGruposxPrograma', {
                    ID: this.ID,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 1,
                }).then(response => {
                    let data = response.data;
                    this.ListaGrupos = [];
                    this.ListaGrupos.push({ ID: 1, TITULO: 'GENERAL', STATUS: 3})
                    for (i in data) {
                        this.ListaGrupos.push({ ID: data[i].ID, TITULO: data[i].TITULO, STATUS: data[i].ACCIONES})
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' });
                });
            },
            listarComunicados: function (item) {         //  alert(JSON.stringify(this.ListaMaestra));
                this.ID_GRUPO = 0; // item.ID_GRUPO;
                this.GRUPO = ''; // item.GRUPO;
                //let tipo = (item.ID_GRUPO == 1 ? 1 : 14);
                axios.post(this.SERVER_URL + '/api/Comunicado/ListarComunicadosxPrograma', {
                    ID: this.ID_GRUPO,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 1 // tipo,
                }).then(response => {
                    if (response.data.length > 0) {
                        this.ListaComunicados = response.data;
                        this.totalRows = this.ListaComunicados.length;
                        this.ListaComunicadosSinFiltro = response.data;
                    }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            },
            listarComunicadosxGrupo: function () {         //  alert(JSON.stringify(this.ListaMaestra));
                axios.post(this.SERVER_URL + '/api/Comunicado/ListarComunicadoxGrupo', {
                    ID: this.ID,
                    ID_SEDE: this.ID_SEDE,
                    TIPO: 8,
                }).then(response => {
                    this.ListaGruposxComunicados = response.data;

                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' });
                });
            }

        }   //
    })
    app.listarComunicados();
    //app.listar();
</script>





