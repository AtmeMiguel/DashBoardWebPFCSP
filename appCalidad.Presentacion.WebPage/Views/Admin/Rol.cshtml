
@{
    string Title = "ADMIN | Rol";
    ViewBag.Title = Title;
    string apiServidor = System.Configuration.ConfigurationManager.AppSettings["API_SERVIDOR"];
}

<div id="app">
    <div class="container">
        <br />
        <div class="row">
            <div class="col-xs-12 col-md-12">
                <br />
                <template>
                    <b-container fluid>
                        <!-- User Interface controls -->
                        <b-row>
                            <b-col lg="4" class="my-1">
                                <b-form-group label="Buscar"
                                              label-for="filter-input"
                                              label-cols-sm="3"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-input-group size="sm">
                                        <b-form-input id="filter-input"
                                                      v-model="filter"
                                                      type="search"
                                                      v-on:keyup="buscar()"
                                                      placeholder="Ingresar título"></b-form-input>

                                        <b-input-group-append>
                                            <b-button :disabled="!filter" @@click="filter = '', buscar()">Limpiar</b-button>
                                        </b-input-group-append>
                                    </b-input-group>
                                </b-form-group>
                            </b-col>
                            <b-col lg="2" class="my-1">
                                <b-form-group label="Registrar Rol"
                                              description=""
                                              label-cols-sm="8"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-avatar v-on:click="editar(0, 0, '')" title="Editar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>

                                </b-form-group>
                            </b-col>
                            <b-col lg="2" class="my-1">
                                <b-form-group label="Editar Modulo"
                                              description=""
                                              label-cols-sm="8"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-avatar v-on:click="ID=0,TITULO='',ICONO='',PAGINA='', pantalla({PANTALLA: 'permisos'}, listarPermisos())" title="Editar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                </b-form-group>
                            </b-col>
                        </b-row>
                        <!-- Main table element -->
                        <b-row style=" height: 600px; overflow: scroll; ">
                            <b-table :items="Lista"
                                     :current-page="currentPage"
                                     :fields="Columnas"
                                     :per-page="perPage"
                                     stacked="md"
                                     head-variant="light"
                                     show-empty
                                     sticky-header
                                     small
                                     @@filtered="onFiltered">
                                <template #cell(name)="row">
                                    {{ row.value.first }} {{ row.value.last }}
                                </template>

                                <template #cell(RESULTADO)="row">
                                    <b-avatar v-on:click="editar(row.item, row.index, $event.target), ORDEN=1" title="Editar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                    <b-avatar v-on:click="eliminar(row.item, row.index, $event.target)" title="Eliminar" button icon="trash" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                </template>
                            </b-table>
                        </b-row>
                        <br />

                        <!-- User Interface controls -->
                        <b-row>
                            <b-col sm="5" md="6" class="my-1">
                                <b-form-group label="Per page"
                                              label-for="per-page-select"
                                              label-cols-sm="6"
                                              label-cols-md="4"
                                              label-cols-lg="3"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-form-select id="per-page-select"
                                                   v-model="perPage"
                                                   :options="pageOptions"
                                                   size="sm"></b-form-select>
                                </b-form-group>
                            </b-col>
                            <b-col sm="7" md="6" class="my-1">
                                <b-pagination v-model="currentPage" :total-rows="totalRows" :per-page="perPage" align="fill" size="sm" class="my-0"></b-pagination>
                            </b-col>
                        </b-row>
                    </b-container>
                </template>
            </div>
        </div>
    </div>

    <b-modal id="editar" size="md" data-html="true" hide-footer hide-header>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header colorSanPablo" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">{{TITULO}}</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <template>
                                <div>
                                    <b-tabs content-class="mt-3">
                                        <b-tab title="Editar" active>
                                            <div>
                                                <b-form>
                                                    <b-form-group id="input-group-2" label="Titulo:" label-for="input-2">
                                                        <b-form-input id="input-2"
                                                                      v-model="TITULO"
                                                                      required></b-form-input>
                                                    </b-form-group>
                                                </b-form>

                                                <div class="text-right">
                                                    <b-button v-on:click="onSubmit(), PERMISO=''" variant="outline-info" pill><b-avatar variant="outline-info" icon="pencil-square" size="2rem"></b-avatar>Guardar</b-button>
                                                </div>

                                            </div>
                                        </b-tab>
                                        <b-tab title="Modulos asignados" v-if="ID > 0">
                                            <div>
                                                <b-form-group>
                                                    <p>Agregar un modulo al rol</p>
                                                    <b-row class="my-1">
                                                        <b-col sm="3">
                                                            <label for="input-none">Modulo:</label>
                                                        </b-col>
                                                        <b-col sm="9">
                                                            <select v-model="PERMISO" class="form-control" v-on:change="asignarPermiso(PERMISO)" required disabled-field="notEnabled">
                                                                <option v-for="item in ListaPermisos" v-bind:value="{ ID: item.ID, TITULO: item.TITULO }">
                                                                    {{ item.TITULO }}
                                                                </option>
                                                            </select>
                                                        </b-col>
                                                    </b-row>
                                                    <b-row class="my-1">
                                                        <b-col sm="3">
                                                            <label for="input-none">Orden:</label>
                                                        </b-col>
                                                        <b-col sm="9">
                                                            <input v-model="ORDEN" type="tel" class="form-control" oninput="this.value = this.value.replace(/[^0-9.]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1');" maxlength="2" required="" />
                                                        </b-col>
                                                    </b-row>


                                                </b-form-group>
                                                <hr />
                                                <!-- Main table element -->
                                                <b-row style=" height: 400px; overflow: scroll; ">
                                                    <b-table :items="ListaPermisosxRol"
                                                             :fields="Columnas"
                                                             stacked="md"
                                                             head-variant="light"
                                                             small>
                                                        <template #cell(name)="row">
                                                            {{ row.value.first }} {{ row.value.last }}
                                                        </template>
                                                        <template #cell(RESULTADO)="row">
                                                            <b-avatar v-on:click="eliminarPermisoAsignado(row.item, row.index, $event.target)" title="Editar" button icon="trash" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                                        </template>
                                                    </b-table>
                                                </b-row>
                                                <br />

                                            </div>
                                        </b-tab>

                                    </b-tabs>
                                </div>

                            </template>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="permisos" size="md" data-html="true" hide-footer hide-header>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header colorSanPablo" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">EDITAR MODULO</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <template v-if="ID != '' ">
                                <b-form>
                                    <b-form-group id="input-group-2" label="Titulo:" label-for="input-2">
                                        <b-form-input id="input-2"
                                                      v-model="TITULO"
                                                      required></b-form-input>
                                    </b-form-group>

                                    <b-form-group id="input-group-2" label="Icono:" label-for="input-2">
                                        <b-form-input id="input-2"
                                                      v-model="ICONO"
                                                      required></b-form-input>
                                    </b-form-group>
                                    <b-form-group id="input-group-2" label="Página:" label-for="input-2">
                                        <b-form-input id="input-2"
                                                      v-model="PAGINA"
                                                      required></b-form-input>
                                    </b-form-group>

                                </b-form>
                                <div class="text-right">
                                    <b-button v-on:click="ID='', TITULO='',ICONO='', PAGINA=''" variant="outline-info" pill><b-avatar variant="outline-light" icon="x-circle" size="2rem"></b-avatar>Cancelar</b-button>
                                    <b-button v-on:click="guardarPermiso()" variant="outline-info" pill><b-avatar variant="outline-info" icon="pencil-square" size="2rem"></b-avatar>Guardar</b-button>
                                </div>
                            </template>
                            <div v-if="ID==''">
                                <b-button v-on:click="ID='0', TITULO='',ICONO='', PAGINA=''" variant="outline-info" pill><b-avatar variant="outline-info" icon="folder-plus" size="2rem"></b-avatar>+</b-button>

                            </div>
                            <br />
                            <!-- Main table element -->
                            <b-row style=" height: 400px; overflow: scroll; ">
                                <b-table :items="ListaPermisos"
                                         :fields="ColumnasModulo"
                                         stacked="md"
                                         head-variant="light"
                                         small>
                                    <template #cell(name)="row">
                                        {{ row.value.first }} {{ row.value.last }}
                                    </template>
                                    <template #cell(RESULTADO)="row">
                                        <b-avatar v-on:click="editarPermiso(row.item, row.index, $event.target)" title="Editar" button icon="pencil-square" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                        <b-avatar v-on:click="eliminarPermiso(row.item, row.index, $event.target)" title="Editar" button icon="trash" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                    </template>
                                </b-table>
                            </b-row>
                            <br />


                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>
    <!-- Info modal -->
    <b-modal :id="infoModal.id" hide-footer hide-header @@hide="resetInfoModal">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-body">
                        <div class="card-text">
                            <p>Esta seguro de eliminar</p>
                            <pre>{{ infoModal.content }}</pre>

                            <br /><br />
                            <div class="text-right">
                                <b-button v-on:click="eliminarOk" variant="outline-info" pill><b-avatar variant="outline-info" icon="trash" size="2rem"></b-avatar>Eliminar</b-button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>
</div>


<script>

    var app = new Vue({
        el: '#app',
        data: {

            ID_USUARIO: '@User.Identity.Name',
            USUARIO: '@Session["Usuario"].ToString()',
            SERVER_URL: '@apiServidor',
            ID_SEDE: '@Session["ID_SEDE"].ToString()',
            SEDE: '@Session["SEDE"].ToString()',

            //PAGINA: '@Title',
            SITE: '',

            ID: 0,
            TITULO: '',
            ICONO: '',
            PAGINA: '',
            PERMISO: '',
            ORDEN: 1,
            Lista: [],
            Lista_: [],
            ListaPermisosxRol: [],
            ListaPermisos: [],

            checked: false,
            Columnas: [
                'ID', 'TITULO',  'FECHA' , { key: 'RESULTADO', label: 'ACCIONES' }
            ],
            ColumnasModulo: ['ID', 'TITULO', 'FECHA', { key: 'RESULTADO', label: 'ACCIONES' }],
            totalRows: 100,
            currentPage: 1,
            perPage: 100,
            pageOptions: [100, 200, 400, { value: 1000, text: "Show a lot" }],
            sortBy: '',
            sortDesc: false,
            sortDirection: 'asc',
            filter: '',
            filterOn: [],
            infoModal: {
                id: 'info-modal',
                title: '',
                content: ''
            }
        },
        mounted() {
            this.totalRows = this.Lista.length
        },
        methods: {
            ocultarPantalla: function (form) {
                this.$bvModal.hide(form.PANTALLA);
            },
            pantalla: function (form) {
                this.$bvModal.show(form.PANTALLA);
            },
            mostrarToast(variant = null) {
                this.$bvToast.toast(variant.msg, {
                    title: `Alerta de sistema`,
                    variant: variant.toast,
                    solid: true
                })
            },
            buscar: function () {
                if (this.filter.length > 0) {
                    let palabra = this.filter.toUpperCase();
                    this.Lista = this.Lista_.filter(x => {
                        return x.TITULO.includes(palabra);
                    });
                } else {
                    this.Lista = this.Lista_;
                }
                this.currentPage = 1;
            },

            editarPermiso: function (item) {
                this.ID = item.ID;
                this.TITULO = item.TITULO;
                let iconoTemp = item.ICONO.replace('../icons/', '');
                this.ICONO = iconoTemp.replace('.svg', '');
                this.PAGINA = item.PAGINA;
            },

            guardarPermiso: function () {            // MODIFICADO
                let mensaje = "Verificar los siguientes campos: ";
                mensaje = this.TITULO.length < 3 ? mensaje + " Titulo" : mensaje;
                mensaje = this.ICONO.length < 3 ? mensaje + " Icono" : mensaje;
                mensaje = this.PAGINA.length < 3 ? mensaje + " Enlace página" : mensaje;

                if (mensaje.length < 35) {
                    let iconoCompleto = "../icons/" + this.ICONO + ".svg";
                    axios.post(this.SERVER_URL + '/api/Rol/MantenimientoModulo', {
                        ID: this.ID,
                        TITULO: this.TITULO,
                        ICONO: iconoCompleto,  //this.ICONO,
                        PAGINA: this.PAGINA,
                        ID_USUARIO: this.ID_USUARIO,
                    }).then(response => {
                        if (response.data.ID > 0) {
                            this.ID = response.data.ID;
                            this.ListaPermisos = this.ListaPermisos.filter(x => x.ID != this.ID);
                            this.ListaPermisos.push({ ID: this.ID, TITULO: this.TITULO, FECHA: 'AHORA',  ICONO: this.ICONO, PAGINA: this.PAGINA });
                            this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                        } else {
                            this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                        }
                    }).catch(e => {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                    });
                } else {
                    this.mostrarToast({ toast: 'danger', msg: mensaje });
                }
            },

            editar(item, index, button) {
                this.TITULO = ''
                this.ListaPermisosxRol = [];
                if (item == 0) {
                    this.ID = 0;
                } else {
                    this.ID = item.ID;
                    this.TITULO = item.TITULO;
                    this.listarPermisosxRol();
                }
               this.pantalla({ PANTALLA: 'editar' });
            },
            eliminar: function (item, index, button) {
                this.infoModal.title = `Row index: ${index}`
                this.infoModal.content = JSON.stringify(item, null, 2)
                this.ID = item.ID;
                this.$root.$emit('bv::show::modal', this.infoModal.id, button)
            },

            eliminarOk: function () {           // MODIFICADO
                axios.post(this.SERVER_URL + '/api/Rol/EliminarRol', {
                    ID: this.ID,
                    ID_USUARIO: this.ID_USUARIO,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.Lista = this.Lista.filter(x => x.ID != this.ID);
                        this.mostrarToast({ toast: 'success', msg: 'eliminado correctamente' });
                        this.$bvModal.hide('editar');
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                });
            },

            salida: function () {
                this.listar();
            },

            resetInfoModal() {
                this.infoModal.title = '';
                this.infoModal.content = '';
            },
            onFiltered(filteredItems) {
                // Trigger pagination to update the number of buttons/pages due to filtering
                this.totalRows = filteredItems.length;
                this.currentPage = 1;
            },

            onSubmit() {
                let mensaje = "Verificar los siguientes campos: ";
                mensaje = this.TITULO.length < 3 ? mensaje + " titulo" : mensaje;
                if (mensaje.length < 35) {
                    axios.post(this.SERVER_URL + '/api/Rol/MantenimientoRol', {
                        ID: this.ID,
                        TITULO: this.TITULO,
                        ID_USUARIO: this.ID_USUARIO,
                        ID_SEDE: this.ID_SEDE,
                    }).then(response => {
                        if (response.data.ID > 0) {
                            this.ID = response.data.ID;
                            this.Lista = this.Lista.filter(x => x.ID != this.ID);
                            this.Lista.push({ ID: this.ID, TITULO: this.TITULO, FECHA: 'AHORA' });
                            this.Lista.sort((a, b) => (a.ID > b.ID) ? 1 : ((b.ID > a.ID) ? -1 : 0))
                            this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                        } else {
                            this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                        }
                    }).catch(e => {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                    });
                } else {
                    this.mostrarToast({ toast: 'danger', msg: mensaje });
                }
            },

            asignarPermiso(item) {
                axios.post(this.SERVER_URL + '/api/Rol/AgregarModulosxRol', {
                    ID: this.ID,
                    ID_MODULO: item.ID,
                    ORDEN: this.ORDEN,
                    ID_USUARIO: this.ID_USUARIO,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.ListaPermisosxRol.push({ ID: response.data.ID, TITULO: item.TITULO, RESULTADO: '', FECHA: 'Ahora', ORDEN:this.ORDEN });
                        this.ListaPermisosxRol.sort((a, b) => (a.ORDEN > b.ORDEN) ? 1 : ((b.ORDEN > a.ORDEN) ? -1 : 0))
                        this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });
                    } else {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                });
            },

            eliminarPermisoAsignado(item, index, button) {    // MODIFICADO
                axios.post(this.SERVER_URL + '/api/Rol/EliminarModulosxRol', {
                    ID: item.ID,
                    ID_USUARIO: this.ID_USUARIO,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.ListaPermisosxRol = this.ListaPermisosxRol.filter(com => com.ID != response.data.ID);
                        this.mostrarToast({ toast: 'info', msg: 'Eliminado correctamente' });
                    } else {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                });
            },

            eliminarPermiso(item, index, button) {    // MODIFICADO
                axios.post(this.SERVER_URL + '/api/Rol/EliminarModulo', {
                    ID: item.ID,
                    ID_USUARIO: this.ID_USUARIO,
                }).then(response => {
                    if (response.data.ID > 0) {
                        this.ListaPermisos = this.ListaPermisos.filter(com => com.ID != response.data.ID);
                        this.mostrarToast({ toast: 'info', msg: 'Eliminado correctamente' });
                    } else {
                        this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                });
            },

            listarPermisos: function () {  // MODIFICADO
                axios.post(this.SERVER_URL + '/api/Rol/ListarModulos', {
                    ID_SEDE: this.ID_SEDE,
                }).then(response => {
                    if (response.data.length > 0) { this.ListaPermisos = response.data; }
                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' });
                });
            },

            listarPermisosxRol: function () {         //  alert(JSON.stringify(this.ListaMaestra));
                axios.post(this.SERVER_URL + '/api/Usuario/ListarModulosxRol', {
                    ID: this.ID,
                }).then(response => {
                    if (response.data.length > 0) { this.ListaPermisosxRol = response.data; }
                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' });
                });
            },

            listar: function () {          // MODIFICADO          //  alert(JSON.stringify(this.ListaMaestra));
                axios.post(this.SERVER_URL + '/api/Rol/ListarRolesxPrograma', {
                    ID_SEDE: this.ID_SEDE,
                }).then(response => {
                    if (response.data.length > 0) {
                        this.Lista = response.data;
                        this.totalRows = this.Lista.length;
                        this.Lista_ = response.data;
                    }
                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' });
                });
            },
            inicio: function () {
                axios.defaults.headers.common['Authorization'] = 'Bearer ' + '@Session["Token"].ToString()';
                this.listar();
                this.listarPermisos();
            }
        }
    })
    app.inicio();
</script>





