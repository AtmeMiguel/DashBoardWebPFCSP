
@{
    ViewBag.Title = "LoginPrueba";
    Layout = "~/Views/Shared/_MasterExternoPagosPF.cshtml";
    string SERVIDOR = System.Configuration.ConfigurationManager.AppSettings["SERVIDOR"];
}

<div id="app">
    @*<img class="wave" src="~/Recursos/wave.png">*@
    @*<div class="container">*@
        @*<div class="img">
            <br />
            <img src="~/Recursos/doctor.svg" width="70%"><br />
        </div>*@
        <div class="login-content">
            @using (Html.BeginForm("Login", "Seguridad", FormMethod.Post, new { enctype = "multipart/form-data" ,id= "loginForm" }))
            {
            <form>

                @*<img src="~/Recursos/CSP.svg" width="90%">*@
                <br />
                <br /><br /><br />
                <p class="login-text-titulo">Bienvenido a Pagos en línea</p><br />
                <div class="input-container">
                    @*<div class="i">
                <i class="fas fa-user"></i>
            </div>*@
                    <div>

                        <input type="tel" v-model="USUARIO" name="USUARIO" maxlength="16" placeholder="Número de Documento" class="input">
                    </div>
                </div>

                <!--<div class="input-container">
    <input type="password" id="password" placeholder="Contraseña">

    <span class="eye-icon" onclick="togglePassword()">
        <i class="fas fa-eye"></i>-->
                <!-- Icono del ojo -->
                <!--</span>
    </div>-->


                <div class="input-container">
                    <input type="password" v-model="PASSWORD" name="PASSWORD" id="password" placeholder="Contraseña">
                    <span class="eye-icon" onclick="togglePassword()">
                        <i id="eye-icon" class="fas fa-eye"></i> <!-- Ojo abierto por defecto -->
                    </span>
                </div>

                @*<div class="div-flex-center pass">
            <div class="i">
                <i class="fas fa-lock"></i>
            </div>
            <div class="div">
                <input type="password" id="password" placeholder="Contraseña" v-model="PASSWORD" name="PASSWORD">
                <span class="eye-icon" onclick="togglePassword()">
                    👁️
                </span>

            </div>
        </div>*@
                @*<span class="fas fa-check"></span>*@
                <div class="div-flex-center">
                    <p class="msgAlerta" v-if="msgAlerta != ''   || '@ViewBag.Message' != '' " style="width:80%;text-align:center;">
                        <span v-if="msgAlerta != ''" class="bi bi-exclamation-circle">&nbsp;{{msgAlerta}}</span>
                        <span v-else="'@ViewBag.Message' != ''" class="bi bi-exclamation-circle">&nbsp;@ViewBag.Message</span>
                    </p>
                    @*<p class="msgAlerta" v-else style="width:80%;text-align:center;"><i v-if="'@ViewBag.Message' != ''" class="bi bi-exclamation-circle"></i>&nbsp;@ViewBag.Message</p>*@


                </div>

                <div class="div-flex-center">
                    <a href="~/Seguridad/RecuperarCuenta" class="enlacePass" style="padding-bottom: 8px; padding-top: 0px; text-decoration: underline;">Olvide mi contraseña</a>
                </div>
                <br />
                <div class="div-flex-center">
                    @*onclick="validar();"*@
                    <input class="cta-button-ini" style="width:80%;" v-if="stateloader=='Comenzar'" v-on:click.prevent="login();" type="submit" value="Ingresar">
                    <button class="cta-button-ini" style="width:80%;" disabled v-if="stateloader=='Cargando'" >Validando...&nbsp;<b-spinner small></b-spinner></button>
                </div>

                <br />

                <div class="div-flex-center">
                    <input class="cta-button-reg" style="width:80%;"  onclick="window.location.href='@Url.Content("~/Seguridad/RegistrarCuenta")';" type="button" value="Registrate">
                </div>

            </form>
            }

            <br />    <br />            <br />    <br />
        </div>
    @*</div>*@


</div>

<style>

    /*2025-09-23 */
    .input-container {
        position: relative;
        width: 100%;
        max-width: 300px;
        margin: 20px auto;
    }

    input {
        width: 100%;
        padding: 10px 40px 10px 15px; /* Espaciado para el icono */
        font-size: 15px;
        border: 2px solid #ddd;
        border-radius: 15px;
        background-color: #f9f9f9;
        box-sizing: border-box;
    }

        /*input:focus {
            outline: none;
            border-color: #00ffff;*/ /* Cambia el color del borde al hacer foco */
        /*}*/

    .eye-icon {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        cursor: pointer;
        font-size: 19px;
        color: #888;
       opacity:0.5;
    }

        .eye-icon:hover {
            color: black; /* Cambia el color del icono cuando pasa el ratón */
        }



    .cta-button-ini {
        background-color: #ED6A00;
        border: none;
        color: white;
        padding: 12px 24px;
        cursor: pointer;
        font-size: 16px;
        border-radius: 15px;
    }

    .cta-button-reg {
        background-color:transparent;
        border:1px solid #ED6A00;
        color: white;
        padding: 12px 24px;
        cursor: pointer;
        font-size: 16px;
        border-radius: 15px;
        opacity:1;
    }


    .login-content {
        width: 400px; /* Ancho del elemento */
        height: 600px; /* Alto del elemento */
        transform: rotate(0deg); /* Rotación en 0 grados */
        opacity: 1; /* Opacidad completa (sin transparencia) */
        position: absolute; /* Necesario para 'top' y 'left' */
        /*  top: 200px; Distancia desde la parte superior */
        /*   left: 840px; Distancia desde la parte izquierda */
        border-radius: 16px; /* Bordes redondeados */
        background-color: #FFFFFF33;
        top : 120px;
        left:15px;

    }

    .login-text-titulo {
        font-family: 'Inter', sans-serif; /* Asumiendo que la fuente 'Inter Tight' está disponible */
        font-weight: 700; /* Negrita (Bold) */
        line-height: 32px;
        letter-spacing: 0;
        text-align: center;
        font-size:20px;
    }


    .msgAlerta {
        font-family: 'Inter', sans-serif; /* Asegúrate de tener esta fuente disponible */
        font-weight: 200; /* Peso normal */
        font-style: normal; /* Estilo regular */
        font-size: 14px; /* Tamaño de la fuente */
        line-height: 24px; /* Altura de línea */
        letter-spacing: 0; /* Espaciado de letras */
        /*   font-size: 18px;
        margin-bottom: 15px;*/
        color: #FFEB3B;
        /*text-transform: lowercase;*/
    }

    .enlacePass {
        font-family: 'Inter', sans-serif; /* Asegúrate de tener esta fuente disponible */
        font-weight: 200; /* Peso normal */
        font-style: normal; /* Estilo regular */
        font-size: 15px; /* Tamaño de la fuente */
        line-height: 24px; /* Altura de línea */
        letter-spacing: 0; /* Espaciado de letras */
        /*   font-size: 18px;
        margin-bottom: 15px;*/
      
        /*text-transform: lowercase;*/
        color: white;
    }

    .content1-btn-login {
        /* display: none;*/
        visibility: hidden;
    }

    .vector-botton-right {
        display: none;
    }

    /* Cambios realizados en: 2025-09-16 11:00 */
    @@media screen and (max-width: 768px)  {

        .login-content {
            width: 100%; /* Ancho del elemento */
            top: 0;
            left:0;
        }

        .hero-content2 {
            position: relative;
            width: 100%;
            height: 100%;
        }

        .hero-content1 {
          display:none;
        }


        .content-mobile {
            display: none;
        }

       

       
    }

</style>



<script>


    function togglePassword() {
        const passwordField = document.getElementById("password");
        const eyeIcon = document.getElementById("eye-icon");

        // Cambiar el tipo de campo entre 'password' y 'text'
        if (passwordField.type === "password") {
            passwordField.type = "text";  // Mostrar la contraseña
            eyeIcon.classList.remove("fa-eye");  // Eliminar el ícono del ojo abierto
            eyeIcon.classList.add("fa-eye-slash");  // Agregar el ícono del ojo cerrado
        } else {
            passwordField.type = "password";  // Ocultar la contraseña
            eyeIcon.classList.remove("fa-eye-slash");  // Eliminar el ícono del ojo cerrado
            eyeIcon.classList.add("fa-eye");  // Agregar el ícono del ojo abierto
        }
    }

        const inputs = document.querySelectorAll(".input");

    function addcl() {
        let parent = this.parentNode.parentNode;
        parent.classList.add("focus");
    }

    function remcl() {
        let parent = this.parentNode.parentNode;
        if (this.value == "") {
            parent.classList.remove("focus");
        }
    }

    inputs.forEach(input => {
        input.addEventListener("focus", addcl);
        input.addEventListener("blur", remcl);
    });



    var app = new Vue({
        el: '#app',
        data: {
            stateloader: 'Comenzar',
            disabledComenzar: true,
            msgAlerta:'',
            MensajeSistema: '',
            USUARIO: '@ViewData["usuario"].ToString()',
            PASSWORD: '',
            SERVER_URL: '',
            ACCESS_TOKEN: '',
            URL: '@Url.RouteUrl("default")',
            URL_2: '@HttpContext.Current.Request.Url',
            URL_4: '@HttpContext.Current.Request.UserHostName',
            ListaMaestra: [],
        },
        methods: {
            login(event) {
                this.USUARIO = this.USUARIO.trim().toLowerCase();
                this.PASSWORD = this.PASSWORD.trim();
                this.stateloader = 'Cargando';
                // Limpiar mensajes de error antes de la validación
                this.msgAlerta = '';

                // Validaciones
                if (this.USUARIO.length==0 || this.PASSWORD.length==0) {
                    this.msgAlerta = 'Por favor, ingrese usuario y contraseña.';
                  /*  alert('ingrese datos');*/
                    //event.preventDefault(); // Evitar el envío del formulario
                    //return;
                    this.stateloader = 'Comenzar';
                } else {
                    this.submitForm();
                }

                // Si todo es válido, aquí podrías hacer la lógica para enviar el formulario o realizar alguna acción
               /* alert('Formulario válido. Procesando inicio de sesión...');*/
                // Si el formulario es válido, puedes enviarlo manualmente si lo necesitas
                // this.$refs.myForm.submit();  // Si necesitas hacer submit manualmente.
              
            },
            submitForm() {
                // Enviar el formulario manualmente
                document.getElementById('loginForm').submit();
                this.stateloader = 'Comenzar';
            },

            mostrarModal: function (form) {
                this.MensajeSistema = form.msg;
                this.$bvModal.show(form.modal);
            },
            mostrarToast(variant = null) {
                this.$bvToast.toast(variant.msg, {
                    title: `Alerta de sistema`,
                    variant: variant.toast,
                    solid: true
                })
            },


            asignarURL: function () {
                if (this.URL == '/') {
                    this.SERVER_URL = '';
                } else {
                    this.SERVER_URL = '@SERVIDOR';
                }
                sessionStorage.setItem('SERVER_URL', this.SERVER_URL);
            },
        }
    })
    app.asignarURL();
</script>


