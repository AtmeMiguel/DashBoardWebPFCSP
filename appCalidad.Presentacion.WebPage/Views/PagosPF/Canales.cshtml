@{
    ViewBag.Title = "Canales";
    Layout = "~/Views/Shared/_MasterInternoPagosPF.cshtml";
    string apiServidor = System.Configuration.ConfigurationManager.AppSettings["API_SERVIDOR"];
    string SERVIDOR = System.Configuration.ConfigurationManager.AppSettings["SERVIDOR"];
  

}


<style scoped>
    /* Estilo general para la lista */
    ul {
        list-style-type: disc; /* Marcadores tipo círculo */
        margin-left: 30px; /* Márgenes para las listas */
    }

        /* Estilo para las listas anidadas (sublistas) */
        ul ul {
            list-style-type: disc; /* Marcadores tipo círculo vacío */
            margin-left: 45px; /* Más margen para las sublistas */
        }

            /* Si hay más subniveles, puedes seguir añadiendo más margenes */
            ul ul ul {
                list-style-type: disc; /* Marcadores tipo cuadrado */
                margin-left: 65px; /* Márgenes adicionales para subniveles más profundos */
            }
    li {
        font-size: 15px;
        line-height: 23px;
    }

    a {
        font-size: 15px;
    }

    .modal-content {
        border-radius:2rem !important;

    }
</style>

<div id="app">
    <div class="container-fluid">

        <div class="row justify-content-center">


            <div v-if="v_paso=='1'" class="col-lg-12" style="background-color: #FAFAFA;border-radius:25px;">
                <div style="padding-left:20px;">
                    <br />
                    <br />
                    <br />
                    <p style="font-size:28px;font-weight:600;">Canales de pago</p>
                    <br />
                    <p style="color:#818181;font-size:14px;">Atención por ventanilla - APP de bancos - Banca por internet</p>
                    <br />
                    <b-img src="~/Recursos/PagosPF/canales.png" fluid alt="Responsive image canales pago"></b-img>

                    <p style="font-size:15px;font-weight:600;padding-top:25px;padding-bottom:15px;">Atención por ventanilla</p>



                    <ul>
                        <li>
                            Bancos:
                            <ul>
                                <li>
                                    BBVA Continental, Interbank, Scotiabank, BCP Banco de Crédito; <br />acercándose a la ventanilla del banco indicando su número de contrato
                                </li>

                            </ul>
                        </li>
                    </ul>
                    <br />


                    <ul>
                        <li>
                            Cajas autorizadas de la RED DE CLINICAS SAN PABLO

                        </li>
                    </ul>
                    <br />



                    <ul>
                        <li>
                            Oficinas de Interbank en:
                            <ul>
                                <li>
                                    Plaza Vea y Vivanda
                                </li>

                            </ul>
                        </li>
                    </ul>
                    <br />

                    <ul>
                        <li>
                            Agentes BCP:
                            <ul>
                                <li>
                                    Indicando el código 02262 + número de contrato
                                </li>

                            </ul>
                        </li>
                    </ul>
                    <br />

                    <p style="font-size:15px;font-weight:600;padding-top:25px;padding-bottom:10px;">Red de clínicas</p>

                    <p style="font-size:15px;font-weight:normal;padding-bottom:10px;">Con su número de contrato o datos personales podrá acceder al pago en las cajas <br /> autorizadas en cada clínica de nuestra RED SAN PABLO</p>

           
                    <ul>
                        <li>
                            <a href="#" @@click="abrirUbicacion(1)">Clinica Jesús del Norte</a>
                        </li>
                        <li>
                            <a href="#" @@click="abrirUbicacion(2)">Clinica San Gabriel</a>
                        </li>
                        <li>
                            <a href="#" @@click="abrirUbicacion(3)">Clinica San Juan Bautista</a>
                        </li>
                        <li>
                            <a href="#" @@click="abrirUbicacion(4)">Clinica Santa Martha del Sur</a>
                        </li>
                        <li>
                            <a href="#" @@click="abrirUbicacion(5)">Clinica San Pablo Surco</a>
                        </li>
                        <li>
                            <a href="#" @@click="abrirUbicacion(6)">Clinica San Pablo La Victoria</a>
                        </li>
                        <li>
                            <a href="#" @@click="abrirUbicacion(7)">Clinica San Pablo Arequipa</a>
                        </li>
                        <li>
                            <a href="#" @@click="abrirUbicacion(8)">Clinica San Pablo Huaraz</a>
                        </li>
                        <li>
                            <a href="#" @@click="abrirUbicacion(9)">Clinica San Pablo Trujillo</a>
                        </li>
                        <li>
                            <a href="#" @@click="abrirUbicacion(10)">Medikcenter</a>
                        </li>

                    </ul>


                </div>
            </div>


            <br />
            <br />
            <br />
            <br />
        </div>
    </div>

    <b-modal id="mdUbicacion" size="md"
             data-html="true" centered hide-footer hide-header>

        <div class="d-block text-center">
            <br />
            <br />

            <h3>{{empresa}}</h3>
            <p class="p-body-modal" style="line-height:25px;text-align:center;">{{direccion}}</p>

            <iframe :src="url" width="90%" height="350" frameborder="0" style="border:0" allowfullscreen></iframe>
            <br />
            <br />
            <button class="btn btn-primary" block @@click="$bvModal.hide('mdUbicacion')">Regresar</button>
            <br />
            <br />
        </div>

    </b-modal>


</div>


@section scripts {

    <script>

    var app = new Vue({
                el: '#app',
        data: {
            url: '',
            direccion: '',
            empresa:'',
            v_paso: '1',
                //loader
                    stateloader: 'Comenzar',
                    disabledComenzar: true,
                    ID_USUARIO: '@User.Identity.Name',

                    NOMBRES: '@Html.Raw(Session["Nombres"].ToString())' ,
                    APELLIDOS : '@Html.Raw(Session["Apellidos"].ToString())',
                    USUARIO: '@Session["Usuario"].ToString()',
                    SERVER_URL: '@apiServidor'

        },
        methods: {

            abrirUbicacion: function (item) {
                var url = '';
                var direccion = '';
                var empresa = '';
                switch (item) {
                    case 1:
                        url = "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3902.779478193064!2d-77.06097568622644!3d-11.989755291505269!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x456adf987e2477d%3A0x31167f7cd10d7d0d!2sCl%C3%ADnica+Jes%C3%BAs+del+Norte!5e0!3m2!1ses!2spe!4v1562886351347!5m2!1ses!2spe";
                        direccion = "Av. Carlos Izaguirre 159, Independencia";
                        empresa = "Clínica Jesús del Norte";
                        break;
                    case 2:
                        url = "https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d1950.76028679288!2d-77.096742!3d-12.0764723!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x9105c964ba5bf303%3A0x1c0b934524528363!2sSan%20Gabriel%20Clinic!5e0!3m2!1sen!2spe!4v1761858017292!5m2!1sen!2spe";
                        direccion = "Av. La Marina Nro 2955 Urb Maranga III San Miguel - Lima";
                        empresa = "Clinica San Gabriel";
                        break;
                    case 3:
                        url = "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3902.572783901263!2d-77.00887648585699!3d-12.004035344373825!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x9105c5863f5bd48d%3A0x5afc08add793b431!2sCl%C3%ADnica+San+Juan+Bautista!5e0!3m2!1ses!2spe!4v1562777270904!5m2!1ses!2spe";
                        direccion = "Av. Próceres de la Independencia 1764 - San Juan de Lurigancho";
                        empresa = "Clinica San Juan Bautista";
                        break;
                    case 4:
                        url = "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3900.2532330779823!2d-76.96746778585445!3d-12.163155147386599!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x9105b9d98ceb8357%3A0x2144078fcb65ffd9!2sClinica+Santa+Martha+Del+Sur!5e0!3m2!1ses!2spe!4v1562778029377!5m2!1ses!2spe";
                        direccion = "Av. Belisario Suarez Nro. 998, San Juan de Miraflores";
                        empresa = "Clinica Santa Martha del Sur";
                        break;
                    case 5:
                        url = "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d15604.700076200923!2d-76.9713223!3d-12.10016799999999!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x9105c7a4fb8382b1%3A0xc3abfb9a96a8b94b!2sCl%C3%ADnica%20San%20Pablo!5e0!3m2!1ses!2spe!4v1761858865231!5m2!1ses!2spe";
                        direccion = "Av. El Polo 789, El Derby – Monterrico, Surco";
                        empresa = "Clinica San Pablo Surco";
                        break;
                    case 6:
                        url = "https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d1950.8321554960603!2d-77.0327565!3d-12.0666023!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x9105c925cff4148f%3A0x16d36171fbe13640!2sCl%C3%ADnica%20San%20Pablo%20La%20Victoria!5e0!3m2!1ses!2spe!4v1761858297759!5m2!1ses!2spe";
                        direccion = "Av. Iquitos 600 con Jr. Alexander Von Humboldt - La Victoria";
                        empresa = "Clinica San Pablo La Victoria";
                        break;
                    case 7: 
                        url = "https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d3827.7504281977394!2d-71.556989!3d-16.386671!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x91424b2b0fa381cf%3A0x6241be45c9ab4f0f!2sClinica%20San%20Pablo%20Arequipa!5e0!3m2!1ses!2spe!4v1761858365401!5m2!1ses!2spe";
                        direccion = "Av. Metropolitana Esquina con Calle 7 , Urb. Teresa de Jesus K1 – K9 , Distrito de Cerro Colorado";
                        empresa = "Clinica San Pablo Arequipa";
                        break;
                    case 8:
                        url = "https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d15739.578616997205!2d-77.5308385!3d-9.5178816!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x91a90d6cfb2f4f57%3A0xbc87d1540dd38905!2sCl%C3%ADnica%20San%20Pablo%20-%20Huaraz!5e0!3m2!1ses!2spe!4v1761858426025!5m2!1ses!2spe";
                        direccion = "Jr, Huaylas Nº 172, Huaraz";
                        empresa = "Clinica San Pablo Huaraz";
                        break;
                    case 9:
                        url = "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3949.7984813464936!2d-79.0343487!3d-8.121989499999998!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x91ad3d7133c3a6d9%3A0xf0c1328851a5fb89!2sCl%C3%ADnica%20San%20Pablo%20Trujillo!5e0!3m2!1ses!2spe!4v1761858590152!5m2!1ses!2spe";
                        direccion = "Av. Husares de Junin 690 urb la merced - Trujillo";
                        empresa = "Clinica San Pablo Trujillo";
                        break;
                    case 10:
                        url = "https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d975.8205200632766!2d-77.0699798!3d-11.9549615!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x9105cf0897c2088f%3A0x699d35ee90fb1f0a!2sMedik%20Center%20San%20Pablo!5e0!3m2!1ses!2spe!4v1761858628429!5m2!1ses!2spe";
                        direccion = "Av. Alfredo Mendiola 6381, Los Olivos";
                        empresa = "Medikcenter";
                        break;
                    default:
                        url = "";
                        direccion = "";
                        empresa = "";
                        break;
                }

                this.direccion = direccion;
                this.url = url;
                this.empresa = empresa;
                this.pantalla({ PANTALLA: 'mdUbicacion' });

            },
            exportExcel() {
                lstCuotasExport = [];
                for (const item of this.lstCuotas) {
                    lstCuotasExport.push({
                        TipoPlan: item.TIPOPLAN,
                        Cuota: item.N_CUOTA,
                        Contrato: item.CONTRATO,
                        TipoPago: item.TIPOPAGO,
                        Contrato: item.CONTRATO,
                        FechaVencimiento: item.VENCIMIENTO,
                        Monto: item.MONTO,
                        FechaPago: item.FECHA_PAGO,
                        Estado: item.ESTADO,
                        Canal: item.CANAL
                    });
                }


                let data = XLSX.utils.json_to_sheet(lstCuotasExport)
                const workbook = XLSX.utils.book_new()
                const filename = 'MisPagos'
                XLSX.utils.book_append_sheet(workbook, data, filename)
                XLSX.writeFile(workbook, `${filename}.xls`)


                /*
                // Crear hoja de trabajo (worksheet)
                const worksheet = XLSX.utils.json_to_sheet(lstCuotasExport);
                // Convertir a CSV
                const csvOutput = XLSX.utils.sheet_to_csv(worksheet);
                // Crear un blob con el contenido CSV
                const blob = new Blob([csvOutput], { type: "text/csv;charset=utf-8;" });
                // Crear enlace temporal para descargar
                const link = document.createElement("a");
                const filename = "MisPagos.csv";
                if (link.download !== undefined) {
                    const url = URL.createObjectURL(blob);
                    link.setAttribute("href", url);
                    link.setAttribute("download", filename);
                    link.style.visibility = "hidden";
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                }
                */

            },
            pantalla: function (form) {
                this.$bvModal.show(form.PANTALLA);
            },
            Buscar: function (item) {
                this.limpiar();

                var monto = 0.00;
                //desmarcar y limpiar total
                this.lstCuotas.forEach(item => {
                    item['MARCADO'] = 'No Seleccionado';
                });
                this.monto = monto;
                //
                var indCuota = 1;
                var limite = this.selectedCuota;

                this.lstCuotas.sort((a, b) => a.INDICE - b.INDICE).forEach(item => {
                    if (indCuota <= limite) {
                        item['MARCADO'] = 'Seleccionado';
                        monto = monto + parseFloat(item['MONTO']);
                    }
                    indCuota = indCuota + 1;
                });

                const canCuotaSel = this.lstCuotas.filter(item => item.MARCADO == 'Seleccionado' ).length;

                if (canCuotaSel==0) {
                    this.msgSelCuotas = 'No hay cuotas a pagar';
                    this.indPagar = false;
                }

                else if (canCuotaSel == 1) {
                    this.msgSelCuotas = 'Usted selecciono 1 cuota';
                    this.indPagar = true;
                } else {
                    this.msgSelCuotas = 'Usted selecciono ' + canCuotaSel + ' cuotas';
                    this.indPagar = true;
                }

                this.monto = monto.toFixed(2);

                //----------


            },
            cargarContratos: async function (item) {
                try {

                    const response = await axios.post('@SERVIDOR' + '/api/PagosPF/ListarContratosPagoPF', {
                                DOCUMENTO : '@Session["Usuario"].ToString()'
                            });


                            if (response.data == null) {
                                this.msgAlerta = 'Ocurrio un error....';
                            } else {
                                this.optContratos = response.data.map(p => ({
                                    value: p.CONTRATO,
                                    text: p.NOMBREPLAN
                                }));

                                if (this.optContratos.length >= 1) {
                                    //let opcInicial = { value: "todos", text: 'Todos los contratos' };
                                    //this.optContratos.push(opcInicial);
                                    //this.selectedContrato = "todos";
                                    this.selectedContrato = this.optContratos[0].value;
                                }


                            }

                        } catch (e) {
                            this.msgAlerta = 'Error en la conexión...';
                        } finally {

                        }
            },
            cargarCuotasPagadas: async function (item) {

                try {

                    const response = await axios.post('@SERVIDOR' + '/api/PagosPF/ListarCuotasPagadasPF', {
                        DOCUMENTO: '@Session["Usuario"].ToString()',
                        CONTRATO : this.selectedContrato
                            });


                            if (response.data == null) {
                                this.msgAlerta = 'Ocurrio un error....';
                            } else {
                                this.lstCuotas = response.data;
                                this.canFilas = this.lstCuotas.length;
                                this.totalRows = this.canFilas;
                            }

                        } catch (e) {
                            this.msgAlerta = 'Error en la conexión...';
                        } finally {

                        }
            },

            inicio: async function (item) {
                await this.cargarContratos();
                await this.cargarCuotasPagadas();
                this.v_paso = '1';

            },

            /*this.pantalla({ PANTALLA: 'mdConfirmacion' });*/
            handleAceptar: async function (item) {

                if (this.clave !='' && this.claveRe!='') {
                    this.tipoVal = 'actualiza_data_clave';
                } else {
                    this.tipoVal = 'actualiza_data';
                }


                try {
                      this.stateloader = 'Cargando';

                       await new Promise(resolve => setTimeout(resolve, 60));

                       const response = await axios.post('@SERVIDOR' + '/api/Usuarios/ActualizaUsuPagoPF', {
                                USUARIO: '@Session["Usuario"].ToString()',
                                PASSWORD: this.clave,
                                TIPODOC: '',
                                TIPOVAL: this.tipoVal,
                                TEL_AFI: this.telefono,
                                CEL_AFI: this.celular,
                                CORREO :  this.correo
                            });


                        // Comprobamos el mensaje de la respuesta
                        if (response.data.MSG == null) {
                            this.msgAlerta = 'Ocurrio un error....';
                        } else {
                            if (response.data.MSG == 'OK') {
                                this.v_paso = '3';
                            } else {
                                // Si la respuesta es otro mensaje, lo mostramos
                                this.msgAlerta = response.data.MSG;
                            }
                        }

                } catch (e) {
                        // En caso de error en la conexión
                        this.msgAlerta = 'Error en la conexión...';
                } finally {
                        // Esto se ejecuta independientemente de si hay error o no
                        this.stateloader = 'Comenzar';
                }


            },

        }

})

app.inicio();
    </script>
}