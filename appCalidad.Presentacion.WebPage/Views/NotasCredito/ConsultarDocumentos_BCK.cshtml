
@{
    string Title = "CONSULTA FACTURAS";
    ViewBag.Title = Title;
}

<div id="app">
    <div class="container">
        <br />
       
        <div class="row">

            <b-col lg="3" class="my-0 p-0" id="colgrafico">
                <div class="m-2 border">
                    <div class="card-header">Avance General</div>
                    <div class="col-lg-12">
                        <template>
                            <br />
                            <canvas id="myChart" width="17" height="15"></canvas>

                        </template>
                    </div>
                </div>


            </b-col>

          

            <b-col lg="9" class="my-0 p-0 ">
                <div class="m-2 border">
                    <div class="card-header">Filtros</div>
                    <b-row class="pr-3 pl-3 pt-3">

                        <b-col lg="3" class="my-0">
                            <b-form-group id="input-group-3" label="Estado:" label-for="cboestado">
                                <b-form-select id="cboestado"
                                               v-model="selected"
                                               :options="options"></b-form-select>
                            </b-form-group>
                        </b-col>

                        <b-col lg="3" class="my-0">
                            <b-form-group label="Fec. Cambio Estado"
                                          label-for="txtfecmodificacion"
                                          class="mb-0">

                                <b-form-datepicker id="txtfecmodificacion" v-model="FEC_ESTADO_INI"
                                                   locale="es" class="mb-2" today-button reset-button
                                                   :date-format-options="{ year: 'numeric', month: '2-digit', day: '2-digit'}"></b-form-datepicker>
                            </b-form-group>
                        </b-col>

                        <b-col lg="3" class="my-0">
                            <b-form-group label="Fec. Lote Desde"
                                          label-for="txtfecini"
                                          cslass="mb-0">


                                <b-form-datepicker id="txtfecini" v-model="FEC_INI"
                                                   locale="es" class="mb-2" today-button reset-button
                                                   :date-format-options="{ year: 'numeric', month: '2-digit', day: '2-digit'}"></b-form-datepicker>

                            </b-form-group>
                        </b-col>


                        <b-col lg="3" class="my-0">
                            <b-form-group label="Fec. Lote Hasta"
                                          label-for="txtfecfin"
                                          class="mb-0">


                                <b-form-datepicker id="txtfecfin" v-model="FEC_FIN"
                                                   locale="es" class="mb-2" today-button reset-button
                                                   :date-format-options="{ year: 'numeric', month: '2-digit', day: '2-digit'}"></b-form-datepicker>
                            </b-form-group>
                        </b-col>

                      

                    </b-row>

                    <b-row class="pr-3 pl-3">

                        <b-col lg="3" class="my-0">
                            <b-form-group id="input-group-1-responsable"
                                          label="Responsable:"
                                          label-for="txtresponsable"
                                          description="">
                                <b-form-input id="txtresponsable"
                                              v-model="responsable"
                                              type="text"
                                              placeholder=""></b-form-input>
                            </b-form-group>

                        </b-col>

                        <b-col lg="2" class="my-0">
                            <b-form-group id="input-group-1-serie"
                                          label="Nro. Serie:"
                                          label-for="txtserie"
                                          description="">
                                <b-form-input id="txtserie"
                                              v-model="nroserie"
                                              type="text"
                                              placeholder=""></b-form-input>
                            </b-form-group>
                        </b-col>

                        <b-col lg="2" class="my-0">
                            <b-form-group id="input-group-1-factura"
                                          label="Correlativo:"
                                          label-for="txtfactura"
                                          description="">
                                <b-form-input id="txtfactura"
                                              v-model="nrofac"
                                              type="text"
                                              placeholder=""></b-form-input>
                            </b-form-group>

                        </b-col>



                        <b-col lg="5" class="my-0 text-left">
                            <b-form-group id="input-group-acciones" class="text-white"
                                          label="&nbsp;">
                                <b-button v-on:click="listarDocPago()" variant="warning" pill><b-avatar variant="outline-info" icon="funnel" size="2rem"></b-avatar>Filtrar</b-button>
                                @*extraerExcel()   exportExcel()*@

                            </b-form-group>

                        </b-col>



                    </b-row>
                </div>
            </b-col>

            <div class="col-xs-12 col-md-12">
                <br />
                <template>
                    <b-container fluid>




                        <!-- User Interface controls -->
                        <b-row class="pt-3">


                            <b-col lg="6" class="my-1">
                                <b> Total de Items: {{canFilas}}</b>, exportar a excel
                                <b-avatar @@click="exportExcel()" title="Exportar a Excel" button icon="file-earmark-excel" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                @*<b-button @@click="exportExcel()" variant="success" pill><b-avatar variant="outline-info" icon="file-earmark-excel" size="2rem"></b-avatar>Excel</b-button>*@

                            </b-col>



                        </b-row>

                        <!-- Main table element -->
                        <b-row>

                            <b-table hover :items="ListaDocPago"
                                     :current-page="currentPage"
                                     :fields="Columnas"
                                     :per-page="perPage"
                                     stacked="md"
                                     head-variant="light"
                                     show-empty
                                     responsive
                                     @*sticky-header="200px"*@
                                     small
                                     @@filtered="onFiltered">
                                <template #empty="scope">
                                    <h6 class="text-center">No hay filas para mostrar.</h6>
                                </template>
                                @*<template #cell(Seleccionar)="row">
                </template>*@
                                <template #cell(name)="row">
                                    {{ row.value.first }} {{ row.value.last }}
                                </template>

                                <template #cell(ACCIONES)="row">

                                    <b-avatar v-on:click="editar(row.item, row.index, $event.target)" title="Ver Detalle" button icon="eye" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>


                                </template>

                            </b-table>
                        </b-row>
                        <br />

                        <!-- User Interface controls -->
                        <b-row v-if="canFilas>0">
                            <b-col sm="5" md="6" class="my-1">
                                <b-form-group label="Por Pagina"
                                              label-for="per-page-select"
                                              label-cols-sm="6"
                                              label-cols-md="4"
                                              label-cols-lg="3"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-form-select id="per-page-select"
                                                   v-model="perPage"
                                                   :options="pageOptions"
                                                   size="sm"></b-form-select>
                                </b-form-group>
                            </b-col>

                            <b-col sm="7" md="6" class="my-1">
                                <b-pagination v-model="currentPage"
                                              :total-rows="totalRows"
                                              :per-page="perPage"
                                              align="fill"
                                              size="sm"
                                              class="my-0"></b-pagination>
                            </b-col>
                        </b-row>


                    </b-container>
                </template>
            </div>

        </div>



    </div>

    <b-modal id="VerDetalle" size="md" data-html="true" hide-footer hide-header @@hide="salida">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado">
                    <div class="card-header bg-info" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">Detalle de Documento : {{vd_nroserie}} - {{vd_nrofactura}}</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <template>
                              
                                <div>
                                    <p>
                                        Lote :{{vd_DNROLOTE}}
                                    </p>
                                    <p>
                                        Fecha Lote :{{vd_DFECHA_CAB}}
                                    </p>
                                    <p>
                                        Nro. Serie :{{vd_nroserie}}
                                    </p>
                                    <p>
                                        Nro. Factura: {{vd_nrofactura}}
                                    </p>
                                    <p>
                                        Responsable: {{vd_responsable}}
                                    </p>
                                    <p>
                                        Motivo: {{vd_MOTIVO}}
                                    </p>
                                    <p>
                                        Observación: {{vd_OBSERVACION}}
                                    </p>


                                    <p>
                                        Estado: {{vd_estado}}
                                    </p>


                                    <template v-if="vd_estado == 'APROBADO' || vd_estado == 'RECHAZADO'">
                                        <h5 class="text-center">
                                            <b-badge v-if="vd_estado == 'APROBADO'" variant="info">DETALLE DE APROBACIÓN</b-badge>
                                            <b-badge v-if="vd_estado == 'RECHAZADO'" variant="info">DETALLE DE RECHAZO</b-badge>
                                        </h5>
                                        <br />
                                        <p>
                                            Realizado Por: {{vd_AUTO_POR}}
                                        </p>

                                        <p>
                                            Fecha: {{vd_DFECHA_APRO}}
                                        </p>

                                        <p>
                                            Comentario: {{vd_COD_OBS}}
                                        </p>
                                    </template>


                                    <div class="text-right">
                                        <b-button v-on:click="cerrarDetalle('VerDetalle')" variant="outline-info" pill><b-avatar variant="outline-info" icon="box-arrow-right" size="2rem"></b-avatar>Cerrar</b-button>

                                    </div>

                                </div>
                            </template>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="ActualizarDocPago" size="md" data-html="true" hide-footer hide-header @@hide="salida">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado">
                    <div v-if="ACCION == 'RECHAZAR' || ACCION == 'RECHAZARM'" class="card-header bg-danger" style="float:right; font-size: 18px; margin-top: 0px;  z-index: 10;">

                        <div class="card-title text-center text-white">
                            <strong class="text-center">{{TITULO}}</strong>
                        </div>

                    </div>

                    <div v-else class="card-header bg-info" style="float:right; font-size: 18px;  margin-top: 0px;  z-index: 10;">

                        <div class="card-title text-center text-white">
                            <strong class="text-center">{{TITULO}}</strong>
                        </div>

                    </div>


                    <div class="card-body">
                        <div class="card-text">
                            <template>
                                <div>


                                    <div>
                                        <b-form>


                                            <b-form-group id="input-group-2" label="Comentario:" label-for="input-2">


                                                <b-form-textarea id="input-2"
                                                                 v-model="ad_comentario"
                                                                 placeholder="ingrese comentario opcional..."
                                                                 rows="3"
                                                                 max-rows="6"></b-form-textarea>
                                            </b-form-group>

                                        </b-form>

                                        <div class="text-right">
                                            <b-button v-on:click="onSubmit" variant="outline-info" pill><b-avatar variant="outline-info" icon="check-circle" size="2rem"></b-avatar>Aceptar</b-button>
                                            <b-button v-on:click="cerrarDetalle('ActualizarDocPago')" variant="outline-secondary" pill><b-avatar variant="outline-info" icon="box-arrow-right" size="2rem"></b-avatar>Cancelar</b-button>


                                        </div>

                                    </div>

                                </div>

                            </template>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>


    <!-- Info modal -->
    <b-modal :id="infoModal.id" hide-footer hide-header @@hide="resetInfoModal">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-body">
                        <div class="card-text">
                            <p>Esta seguro de eliminar</p>
                            <pre>{{ infoModal.content }}</pre>

                            <br /><br />
                            <div class="text-right">
                                <b-button v-on:click="eliminarOk" variant="outline-info" pill><b-avatar variant="outline-info" icon="trash" size="2rem"></b-avatar>Eliminar</b-button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>

</div>

<script>

            var app = new Vue({
                el: '#app',
                data: {
                    selected: 'P',
                    options: [ { text: 'APROBADO', value: 'A' }, { text: 'PENDIENTE', value: 'P' },{ text: 'RECHAZADO', value: 'R' } ],
                    status: '',
                    indicador: false,

                    ID_USUARIO: sessionStorage.getItem('ID_USUARIO'),
                    USUARIO: sessionStorage.getItem('USUARIO'),
                    SERVER_URL: sessionStorage.getItem('SERVER_URL'),
                    ID_SEDE: sessionStorage.getItem('ID_SEDE'),
                    PAGINA: '@Title',
                    SITE: '',
                    ID: 0,

                    canFilas: '0',

                    nrofac: '',
                    nroserie: '',
                    FEC_INI: '',
                    FEC_FIN: '',
                    FEC_ESTADO_INI: '',
                    responsable: '',
                  

                    vd_nroserie:'',
                    vd_nrofactura:'',
                    vd_responsable:'',

                    vd_estado: '',
                    vd_AUTO_POR: '',
                    vd_DFECHA_APRO: '',
                    vd_COD_OBS: '',
                    vd_DFECHA_CAB: '',
                    vd_DNROLOTE: '',
                    vd_MOTIVO: '',
                    vd_OBSERVACION: '',

                    ad_nroserie: '',
                    ad_nrofactura: '',
                    ad_comentario: '',
                    ad_idmasivo:'',
                    ACCION: '',

                    TITULO:'',

                    ListaSeleccionados:[],
                    ListaDocPago: [],

                    Lista: [],
                    checked: false,
                    Columnas: [
                        { key: 'DNROLOTE', label: 'LOTE' }, { key: 'DFECHA_CAB', label: 'FECHA LOTE' }, { key: 'DRESP_CAB', label: 'RESPONSABLE' }, { key: 'SNROFAC', label: 'SERIE' }, { key: 'DNROFAC', label: 'CORRELATIVO' } , 'MOTIVO', 'OBSERVACION', 'ACCIONES', { key: 'FLG_EST_DOC', label: 'ESTADO' }, { key: 'DFECHA_APRO', label: 'FEC MOD' },
                    ],
                    totalRows: 100,
                    currentPage: 1,
                    perPage: 100,
                    pageOptions: [100, 200, 400, { value: 1000, text: "Mostrar Todo" }],

                    sortBy: '',
                    sortDesc: false,
                    sortDirection: 'asc',
                    filter: '',
                    filterOn: [],
                    infoModal: {
                        id: 'info-modal',
                        title: '',
                        content: ''
                    }
                },
                mounted() {
                    this.totalRows = this.ListaDocPago.length
                },
                methods: {

                
                configurarChart:function(ctx, objdata) {
                const chart = new Chart(ctx, {
                    type: "bar",
                  
                    data: {
                        labels: ['Pendiente', 'Aprobado', 'Rechazado'],
                     
                        datasets: [
                            {
                               
                                label: "Cantidad",
                                data: [objdata.PENDIENTE, objdata.APROBADO, objdata.RECHAZADO],
                                backgroundColor: [
                                    '#F4A11D',
                                    '#264ABD',
                                    'rgb(205, 92, 92)',
                                   
                                ],
                           
                            }
                        ]
                    },
          
                    plugins: [ChartDataLabels],
                    options: {
                        plugins: {
                            // Change options for ALL labels of THIS CHART
                            /* backgroundColor: function (context) {
                                return context.dataset.backgroundColor;
                            },*/
                            datalabels: {
                               // backgroundColor: 'black',
                                borderRadius: 4,
                                color: 'black',
                                font: {
                                    weight: 'bold'
                                },
                                //formatter: Math.round,
                                //padding: 2,
                                //anchor: 'end',
                                align: 'end',//'center'
                                anchor: 'end',
                         
                            }
                        },
                        layout: {
                            padding: {
                                top: 25
                            }
                        },
                        scales: {
                            yAxes: [{
                             
                                ticks: { beginAtZero: true},
                                //ticks: {
                                //    min: 0,
                                //    max: 50,
                                //    stepSize: 10
                                //}
                            }],
                           
                            xAxes: [{
                              
                                gridLines: { display: false },
                                ticks: {
                                   // autoSkip: false,
                                    maxRotation: 70,
                                    minRotation: 70
                                }

                            }]
                        },
                        title: {
                            display: false,
                            text: 'Estado de atencion de Tickets',
                            fontSize: 17
                        },
                        legend: {
                            position: 'bottom', // , top
                            display: false   ,
                        },
                        tooltips: {
                            backgroundColor: '#70727A',
                           
                        }
                    },

                })
            },

               renderChart:  function() {
                const ctx = document.getElementById("myChart").getContext("2d");
                var objdata = {};
               
                   axios.post(this.SERVER_URL + '/api/NotasCredito/ListarDocPagoxPrograma', {
                       ID: this.ID_GRUPO,
                       ID_USUARIO: this.ID_USUARIO,
                       ID_PROGRAMA: this.ID_PROGRAMA,
                       TIPO: 'cantidadPorEstado', // tipo,
                       FLG_EST_DOC: this.selected,
                       SNROFAC: this.nroserie,
                       DNROFAC: this.nrofac,
                       FEC_INI: this.FEC_INI,
                       FEC_FIN: this.FEC_FIN,
                       DRESP_CAB: this.responsable,
                       ID_SEDE: this.ID_SEDE,
                   }).then(response => {
                      

                       objdata.PENDIENTE = response.data[0].PENDIENTE;
                       objdata.APROBADO = response.data[0].APROBADO;
                       objdata.RECHAZADO = response.data[0].RECHAZADO;
                       this.configurarChart(ctx, objdata);
                       this.listarDocPago();
                
                   }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            },


                    ocultarPantalla: function (form) {
                        this.$bvModal.hide(form.PANTALLA);
                    },
                    pantalla: function (form) {
                        this.$bvModal.show(form.PANTALLA);
                    },
                    mostrarToast(variant = null) {
                        this.MensajeSistema = variant.msg;
                        this.$bvToast.toast(this.MensajeSistema, {
                            title: `Alerta de sistema`,
                            variant: variant.toast,
                            solid: true
                        })
                    },
                    pantallaExterna: function (item) {
                        this.SITE = './ImageComunicado/?idComunicado=' + item.ID + '&idUsuario=' + this.ID_USUARIO;
                        sessionStorage.setItem('IMAGE', item.ID + item.EXT);
                        this.$bvModal.show('ImageComunicado');
                    },
                    buscar: function () {
                        if (this.filter.length > 0) {
                            let palabra = this.filter.toUpperCase();
                            this.ListaComunicados = this.ListaComunicadosSinFiltro.filter(x => {
                                return x.ID.includes(palabra);
                            });
                        } else {
                            this.ListaComunicados = this.ListaComunicadosSinFiltro;
                        }
                        this.currentPage = 1;
                    },
                    buscarConfirmados: function () {
                        if (this.checked == true) {
                            this.ListaComunicados = this.ListaComunicadosSinFiltro.filter(x => {
                                return x.CONFIRMAR == 1;
                            })
                        } else {
                            this.ListaComunicados = this.ListaComunicadosSinFiltro;
                        }
                        this.currentPage = 1;
                    },
                    agregar(item, index, button) {
                        this.Lista.push(item.ID);
                    },
                    extraerExcel() {
                        let letras = '';
                        for (item in this.Lista) {
                            letras = letras + `${this.Lista[item]}` + ', ';
                        }
                        letras = letras.slice(0, -2);
                        document.location.href = this.SERVER_URL + '/NotasCredito/ReporteExcel?estado=' + this.selected + '&fecini=' + this.FEC_INI + '&fecfin=' + this.FEC_FIN + '&nroserie=' + this.nroserie + '&nrofactura=' + this.nrofac + '&responsable=' + this.responsable  ;
                    },
                    exportExcel() {
                        lstdocs = [];

                        for (const item of this.ListaDocPago) {

                            lstdocs.push({
                                FechaLote: item.DFECHA_CAB,
                                Lote: item.DNROLOTE,
                                Responsable: item.DRESP_CAB,
                                Serie: item.SNROFAC,
                                Correlativo: item.DNROFAC,
                                Motivo: item.MOTIVO,
                                observacion: item.OBSERVACION,
                                Estado: item.FLG_EST_DOC,
                                Modificado_Por: item.AUTO_POR,
                                Fecha_Modificacion: item.DFECHA_APRO,
                                Comentario: item.COD_OBS


                            });
                        }

                        let data = XLSX.utils.json_to_sheet(lstdocs)
                        const workbook = XLSX.utils.book_new()
                        const filename = 'listadoDocumentos'
                      XLSX.utils.book_append_sheet(workbook, data, filename)
                      XLSX.writeFile(workbook, `${filename}.xls`)
                    },

                    marcar(item, index, button,tipo) {
                        var estado = button;


                        if (tipo == 'todo') {

                            this.ListaDocPago.forEach(item => {
                                if (item['FLG_EST_DOC']=='PENDIENTE') {
                                    item['MARCADO'] = (estado == true) ? 'Seleccionado' : 'No Seleccionado';
                                }

                            });

                            this.indicador = (estado == true) ? true : false;

                        } else if (tipo == 'individual') {
                            this.ListaDocPago.forEach(x => {
                                var id = x.SNROFAC + '-' + x.DNROFAC;
                                var idBusqueda = item.SNROFAC + '-' + item.DNROFAC;

                                if (id == idBusqueda) {

                                    item['MARCADO'] = (estado == true) ? 'Seleccionado' : 'No Seleccionado';
                                }
                               /* this.individual = !this.individual;*/
                            });
                        }

                      //  alert(JSON.stringify(this.ListaDocPago))
                    },
                    seleccionarDocBorrar(item, index, button) {
                        var id=item.SNROFAC + '-' + item.DNROFAC;
                        var existe = this.ListaSeleccionados.indexOf(id);
                        if (button.checked) {
                            if (existe==-1) {
                                this.ListaSeleccionados.push(id);
                            }
                        } else {
                            if (existe !== -1) {
                                this.ListaSeleccionados.splice(id,1);
                            }
                        }
                        console.log(this.ListaSeleccionados);
                    },
                    editar(item, index, button) {
                        this.titulo = ''
                        this.vd_nroserie = ''
                        this.vd_nrofactura = ''
                        this.vd_responsable = ''
                        this.vd_estado = ''
                        this.vd_AUTO_POR = ''
                        this.vd_DFECHA_APRO = ''
                        this.vd_COD_OBS = ''
                        this.vd_DFECHA_CAB = ''
                        this.vd_DNROLOTE = ''
                        this.vd_MOTIVO = ''
                        this.vd_OBSERVACION = ''

                        this.CONFIRMAR = '0'
                        this.GRUPO = ''
                        this.ENLACE = '';
                        if (item == 0) {
                            this.ID = 0;
                        } else {
                            this.ID = item.ID;
                            this.titulo = item.TITULO;
                            this.vd_nroserie = item.SNROFAC;
                            this.vd_nrofactura = item.DNROFAC;
                            this.vd_responsable = item.DRESP_CAB;
                            this.vd_estado = item.FLG_EST_DOC;
                            this.vd_AUTO_POR = item.AUTO_POR;
                            this.vd_DFECHA_APRO = item.DFECHA_APRO;
                            this.vd_COD_OBS = item.COD_OBS;
                            this.vd_DFECHA_CAB = item.DFECHA_CAB;
                            this.vd_DNROLOTE = item.DNROLOTE;
                            this.vd_MOTIVO = item.MOTIVO;
                            this.vd_OBSERVACION = item.OBSERVACION;
                        }
                        this.pantalla({ PANTALLA: 'VerDetalle' });
                    },
                    actualizar(item, index, button,accion,tipo) {
                        this.TITULO = ''
                        this.GRUPO = ''
                        this.ACCION = accion ;
                        this.ad_comentario = '';
                        this.ad_nroserie = '';
                        this.ad_nrofactura = '';
                        this.ad_idmasivo = '';
                        if ((accion == 'APROBARM') || (accion == 'RECHAZARM')) {
                            var ListaDocPagoSeleccionados = this.ListaDocPago.filter(x => x.MARCADO == 'Seleccionado');

                            ListaDocPagoSeleccionados = ListaDocPagoSeleccionados.map(x => {
                               //+ '\'\''
                                return x.SNROFAC + '-' + x.DNROFAC ;

                            });
                            var can = ListaDocPagoSeleccionados.length;
                            this.ad_idmasivo = ListaDocPagoSeleccionados.join(',');

                            if (can==0) {
                                return;
                            }

                            if (accion == 'APROBARM') {
                                this.TITULO = '¿SEGURO DE APROBAR LOS DOCUMENTOS NRO:' + this.ad_idmasivo + '?'
                            } else if (accion == 'RECHAZARM') {
                                this.TITULO = '¿SEGURO DE RECHAZAR LOS DOCUMENTO NRO:' + this.ad_idmasivo + '?'
                            }
                        } else {

                            if (item == 0) {

                            } else {
                                this.ad_nroserie = item.SNROFAC;
                                this.ad_nrofactura = item.DNROFAC;

                                if (accion == 'APROBAR') {
                                    this.TITULO = '¿SEGURO DE APROBAR EL DOCUMENTO NRO:' + this.ad_nroserie + '-' + this.ad_nrofactura + '?'
                                } else if (accion == 'RECHAZAR') {
                                    this.TITULO = '¿SEGURO DE RECHAZAR EL DOCUMENTO NRO:' + this.ad_nroserie + '-' + this.ad_nrofactura + '?'
                                }

                            }
                        }
                        this.pantalla({ PANTALLA: 'ActualizarDocPago' });
                    },

                    cerrarDetalle(nomModal) {
                        if (nomModal == 'VerDetalle') {
                            this.ocultarPantalla({ PANTALLA: 'VerDetalle' });
                        } else if (nomModal == 'ActualizarDocPago') {
                            this.ocultarPantalla({ PANTALLA: 'ActualizarDocPago' });
                        }

                    },
                    eliminar: function (item, index, button) {
                        this.infoModal.title = `Row index: ${index}`
                        this.infoModal.content = JSON.stringify(item, null, 2)
                        this.ID = item.ID;
                        this.$root.$emit('bv::show::modal', this.infoModal.id, button)
                    },
                    eliminarOk: function () {
                      },
                    salida: function () {
                        //this.listarDocPago();
                       // this.listarComunicados({ ID_GRUPO: this.ID_GRUPO, GRUPO: this.GRUPO });  // listarComunicados({ ID_GRUPO: item.ID, GRUPO: item.TITULO })
                    },
                    resetInfoModal() {
                        this.infoModal.title = '';
                        this.infoModal.content = '';
                    },
                    onFiltered(filteredItems) {
                        // Trigger pagination to update the number of buttons/pages due to filtering
                        this.totalRows = filteredItems.length;
                        this.currentPage = 1;
                    },

                    onSubmit(event) {
                        this.MensajeSistema = "Verificar los siguientes campos: ";
                        this.MensajeSistema = this.ad_comentario.length > 100 ? this.MensajeSistema + " Comentario" : this.MensajeSistema;
                        var tipo = '';
                        if (this.MensajeSistema.length < 35) {


                            if (this.ACCION == 'APROBARM' || this.ACCION == 'RECHAZARM' ) {
                                tipo = 'masivo';
                                this.ad_nroserie = this.ad_idmasivo;
                            }

                            if (this.ACCION == 'APROBAR' || this.ACCION == 'APROBARM') {
                                this.ACCION = 'A'

                            } else if (this.ACCION == 'RECHAZAR' || this.ACCION == 'RECHAZARM') {
                                this.ACCION = 'R'
                            }


                            axios.post(this.SERVER_URL + '/api/NotasCredito/AdministrarDocPago', {
                                SNROFAC: this.ad_nroserie,
                                DNROFAC: this.ad_nrofactura,
                                AUTO_POR: this.USUARIO,
                                FLG_EST_DOC: this.ACCION,
                                COD_OBS: this.ad_comentario,
                                TIPO: tipo,
                                ID_SEDE: this.ID_SEDE,
                            }).then(response => {
                                if (response.data.MSG > 0) {
                                   // this.ID = response.data.ad_nroserie;
                                    this.mostrarToast({ toast: 'success', msg: 'Guardado correctamente' });

                                    this.listarDocPago();

                                } else {
                                    this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error, registro no guardado ...' });
                                }

                            //    this.cerrarDetalle("ActualizarDocPago");
                            }).catch(e => {
                                this.mostrarToast({ toast: 'danger', msg: 'Ocurrio un error en la conexión, registro no guardado ...' });
                            });
                        } else {
                            this.mostrarToast({ toast: 'danger', msg: this.MensajeSistema });
                        }
                        this.cerrarDetalle("ActualizarDocPago");
                    },

                    listarDocPago: function (item) {         //  alert(JSON.stringify(this.ListaMaestra));
                        this.ID_GRUPO = 0; // item.ID_GRUPO;
                        this.GRUPO = ''; // item.GRUPO;
                        //let tipo = (item.ID_GRUPO == 1 ? 1 : 14);
                        axios.post(this.SERVER_URL + '/api/NotasCredito/ListarDocPagoxPrograma', {
                            ID: this.ID_GRUPO,
                            ID_USUARIO: this.ID_USUARIO,
                            ID_PROGRAMA: this.ID_PROGRAMA,
                            TIPO: 'bandejaPorEstado', // tipo,
                            FLG_EST_DOC: this.selected,
                            SNROFAC: this.nroserie,
                            DNROFAC: this.nrofac,
                            FEC_INI: this.FEC_INI,
                            FEC_FIN: this.FEC_FIN,
                            DRESP_CAB: this.responsable,
                            FEC_ESTADO_INI: this.FEC_ESTADO_INI,
                            ID_SEDE: this.ID_SEDE,
                        }).then(response => {
                            this.ListaDocPago = response.data;
                            this.totalRows = this.ListaDocPago.length;
                            this.canFilas = this.totalRows;
                            this.indicador = false;
                               

                        }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });


                    }

                }   //
            })

     //app.listarDocPago();
     app.renderChart()
        
</script>



