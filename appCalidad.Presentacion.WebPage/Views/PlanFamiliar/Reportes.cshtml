
@{
    string Title = "Seguimiento de afiliados";
    ViewBag.Title = Title;
    string user = System.Configuration.ConfigurationManager.AppSettings["JWT_USUARIO"];
    string pass = System.Configuration.ConfigurationManager.AppSettings["JWT_PASSWORD"];
    string apiServidor = System.Configuration.ConfigurationManager.AppSettings["API_SERVIDOR"];
}

<div id="app">
    <div class="container">
        <br />
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-5 ">
                <div class="card-header">RESUMEN</div>
                <div class="text-center m-2  text-secondary ">
                    <div class="row" v-if="ListaDocPago.length > 0">
                        <bar-chart :styles="myStyles" :data="graficoGeneral"></bar-chart>
                    </div>
                </div>
            </div>
            <div class="col-sm-12 col-md-12 col-lg-7 ">
                <div class="card-header">FILTROS</div>
                <br /><br />
                <div class="row">
                    <div class="col-6">
                        <b-form-group label="Fecha inicio"
                                      label-for="txtfecini"
                                      class="mb-0">
                            <b-form-datepicker id="txtfecini" v-model="FEC_INI"
                                               class="mb-2" :max="max" today-button reset-button
                                               @*:date-format-options="{ year: 'numeric', month: 'numeric', day: 'numeric' }"  locale="en"*@
                                               :date-format-options="{ day: '2-digit', month: '2-digit' , year: 'numeric' }" locale="es"></b-form-datepicker>
                        </b-form-group>
                    </div>
                    <div class="col-6">
                        <b-form-group label="Fecha final"
                                      label-for="txtfecfin"
                                      class="mb-0">
                            <b-form-datepicker id="txtfecfin" v-model="FEC_FIN"
                                               locale="es" :max="max" class="mb-2" today-button reset-button
                                               :date-format-options="{ day: '2-digit', month: '2-digit' , year: 'numeric' }"></b-form-datepicker>
                        </b-form-group>
                    </div>
                </div>
                <div class="row">
                    <div class="col-6">
                        <b-form-group id="input-group-3" label="Estado:" label-for="cboestado" > 
                            <b-form-select id="cboestado" v-on:change="ListaDocPago=[]"
                                           v-model="selected"
                                           :options="options"></b-form-select>
                        </b-form-group>
                    </div>
                    <div class="col-6">
                        <br />
                        <center>
                            <b-button size="large" v-on:click="listarDocPago({ ESTADO: selected}), NOMBRE=''" variant="warning" pill><b-avatar variant="outline-info" icon="funnel" size="2rem"></b-avatar>Buscar</b-button>
                        </center>
                    </div>
                </div>
                <br /><br /><br />
                <div class="row" v-if="ListaDocPago.length > 0">

                    <div class="col-12">
                        <b-form-group id="input-group-1-responsable"
                                      label="Búsqueda secundaria:"
                                      label-for="txtresponsable"
                                      description="">
                            <b-form-input id="txtresponsable"
                                          v-model="NOMBRE"
                                          type="text"
                                          v-on:keyup="buscar()"
                                          placeholder=""></b-form-input>
                        </b-form-group>
                    </div>

                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12 col-md-12">
                <br />
                <template v-if="ListaDocPago.length>0">
                    <b-container fluid>
                        <!-- User Interface controls -->
                        <b-row class="p-0">
                            <b-col lg="12" class="my-1" >
                                <div class="alert alert-warning" role="alert">
                                    <strong> Cantidad de registros: {{canFilas}}</strong>, exportar a excel
                                    @*<input type="button" onclick="tableToExcel('ListaDocPago', 'W3C Example Table')" value="Export to Excel">*@

                                    <b-avatar v-on:click="exportExcel()" title="Exportar a Excel" button icon="file-earmark-excel" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                    <template v-if="selected<3">
                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;realizar carga&nbsp;&nbsp;&nbsp;
                                        <b-avatar v-on:click="cargarRegistros()" title="Exportar a Excel" button icon="cloud-arrow-up" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                        @*<b-avatar onclick="tableToExcel('ListaDocPago', 'Reporte')" title="Exportar a Excel" button icon="file-earmark-excel" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>*@
                                    </template>
                                </div>
                            </b-col>
                        </b-row>
                        <b-row>
                            <b-table hover
                                     id="ListaDocPago"
                                     :items="ListaDocPago"
                                     :current-page="currentPage"
                                     :fields="Columnas"
                                     :per-page="perPage"
                                     stacked="md"
                                     head-variant="light"
                                     responsive
                                     show-empty
                                     @*sticky-header="200px"*@
                                     small
                                     @@filtered="onFiltered">
                                <template #empty="scope">
                                    <h6 class="text-center">No hay filas para mostrar.</h6>
                                </template>
                                @*<template #cell(Seleccionar)="row">
                                    </template>*@
                                <template #cell(name)="row">
                                    {{ row.value.first }} {{ row.value.last }}
                                </template>
                                <template #cell(ID)="row">
                                    @*<b-avatar v-if="row.item.FAMILIAR == null " title="Ver Detalle" button icon="person" size="3rem" variant="light" class="align-center btn-outline-secondary"></b-avatar>
                                        <b-avatar v-else="row.item.FAMILIAR == null " v-on:click="listarDocPagoDetalle(row.item, row.index, false,'individual')" title="Ver Detalle" button icon="people" size="3rem" variant="light" class="align-center btn-outline-info"></b-avatar>*@

                                    <b-avatar v-if="row.item.TIPO_AFILIACION == 1 " title="Ver Detalle" button icon="person" size="3rem" variant="light" class="align-center btn-outline-secondary"></b-avatar>
                                    <b-avatar v-if="row.item.TIPO_AFILIACION == 2 " v-on:click="listarDocPagoDetalle(row.item, row.index, false,'individual')" title="Ver Detalle" button icon="people" size="3rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                                    <b-avatar v-if="row.item.TIPO_AFILIACION == 3 " v-on:click="listarDocPagoDetalle(row.item, row.index, false,'individual')" title="Ver Detalle" button icon="people" size="3rem" variant="light" class="align-center btn-outline-warning"></b-avatar>
                                </template>
                            </b-table>
                        </b-row>
                        <br />

                        <!-- User Interface controls -->
                        <b-row v-if="canFilas>0">

                            <b-col sm="5" md="6" class="my-1">
                                <b-form-group label="Por Pagina"
                                              label-for="per-page-select"
                                              label-cols-sm="6"
                                              label-cols-md="4"
                                              label-cols-lg="3"
                                              label-align-sm="right"
                                              label-size="sm"
                                              class="mb-0">
                                    <b-form-select id="per-page-select"
                                                   v-model="perPage"
                                                   :options="pageOptions"
                                                   size="sm"></b-form-select>
                                </b-form-group>
                            </b-col>

                            <b-col sm="7" md="6" class="my-1">
                                <b-pagination v-model="currentPage"
                                              :total-rows="totalRows"
                                              :per-page="perPage"
                                              align="fill"
                                              size="sm"
                                              class="my-0"></b-pagination>
                            </b-col>

                        </b-row>

                    </b-container>
                </template>
            </div>
        </div>

    </div>
    <b-modal id="VerDetalle" size="md" data-html="true" hide-footer hide-header>
        @*@@hide="salida"*@
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado">
                    <div class="card-header colorSanPablo" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">Detalle de afiliados}</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">
                            <b-table hover :items="ListaDocPagoDet"
                                     :current-page="currentPage"
                                     @*:fields="Columnas"*@
                                     :per-page="perPage"
                                     stacked="md"
                                     head-variant="light"
                                     responsive
                                     show-empty
                                     @*sticky-header="200px"*@
                                     small
                                     @@filtered="onFiltered">
                            </b-table>


                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>


</div>

<script>

    var tableToExcel = (function () {
        var uri = 'data:application/vnd.ms-excel;base64,'
            , template = '<html xml:lang="es" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/1999/xhtml"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>'
            , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
            , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }
        return function (table, name) {
            if (!table.nodeType) table = document.getElementById(table)
            var ctx = { worksheet: name || 'Worksheet', table: table.innerHTML }
            window.location.href = uri + base64(format(template, ctx))
        }
    })()

    const configImg = {
            headers: { Authorization: `Bearer ${'@Session["Token"].ToString()'}` }
        };
    const now = new Date()
    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate())
    // 15th two months prior           216
    const minDate = new Date(today)
    minDate.setMonth(minDate.getMonth() - 1)
    //minDate.setDate(15)
    // 15th in two months
    const maxDate = new Date(today)
    maxDate.setMonth(maxDate.getMonth())
    //maxDate.setDate(15)

    var app = new Vue({
                el: '#app',
        data: {
            min: minDate,
            max: maxDate,
            graficoGeneral: [],
            selected: '3',
            options: [{ text: 'REGISTRO Y COTIZACIÓN', value: '1' }, { text: 'AFILIACIÓN', value: '2' }, { text: 'CONFIRMACIÓN PAGO', value: '3' }],
            indicador: false,

            ID_USUARIO: '@User.Identity.Name',
            USUARIO: '@Session["Usuario"].ToString()',
            NOMBRE_USUARIO: '@Session["Nombres"].ToString()' + ' ' + '@Session["Apellidos"].ToString()',
            SERVER_URL: sessionStorage.getItem('SERVER_URL'),
            ID_SEDE: '@Session["ID_SEDE"].ToString()',

            PAGINA: '@Title',
            SITE: '',
            ID: 0,
            desFiltros: '',
            canFilas: '0',
            nrofac: '',
            nroserie: '',
            FEC_INI: maxDate,
            FEC_FIN: maxDate,
            NOMBRE: '',
            FEC_ESTADO_INI: '',
            responsable: '',

            ACCION: '',
            TITULO: '',

            ListaSeleccionados: [],
            ListaDocPago: [],
            ListaDocPago_: [],
            ListaDocPagoDet: [],

            Lista: [],
            //  { key: 'DNROLOTE', label: 'LOTE', sortable: true, variant: 'secondary' }
            Columnas: [
                'ID', 'DESC_AFILIACION', 'TIPO', 'DOC_IDEN', 'NOMBRES', 'APE_PATERNO', 'APE_MATERNO', 'EDAD', { key: 'FEC_NACIMIENTO', label: 'F. NACIMIENTO' }, { key: 'CELULAR', label: 'CELULAR 1' }, { key: 'TELEFONO', label: 'CELULAR 2' }, { key: 'EMAIL', label: 'CORREO' }, 'FAMILIAR', 'COD_UBIGEO', 'DEPARTAMENTO', 'PROVINCIA', 'DISTRITO', 'DIRECCION', 'SEXO', 'DETALLE_DJ', 'DETALLE_DJO',
                'COD_PLAN', 'FEC_REGISTRO', { key: 'FEC_MODIFICA', label: 'FEC_COTIZACION' }, { key: 'FECHA', label: 'FECHA_AFILIACION'}, 'MONTO', 'ESTADO_PAGO', 'FECHA_PAGO', 'CODIGO_PAGO', 'NRO_COMPROBANTE', 'NRO_RUC','ESTADO_BACKOFFICE', 'USU_BACKOFFICE', 'FECHA_BACKOFFICE', 'OBSERVACION'

                // F. NACIMIENTO
            ],
            totalRows: 100,
            currentPage: 1,
            perPage: 100,
            pageOptions: [100, 200, 500, { value: 1000, text: "Mostrar Todo" }],

            sortBy: '',
            sortDesc: false,
            sortDirection: 'asc',
            filter: '',
            filterOn: [],
            graficoGeneral: [],
            myStyles: {
                height: '100px',
                width: '100%',
                position: 'relative',
            },
            infoModal: {
                id: 'info-modal',
                title: '',
                content: ''
            }
        },
        mounted() {
            this.totalRows = this.ListaDocPago.length
        },
        methods: {
            ocultarPantalla: function (form) {
                this.$bvModal.hide(form.PANTALLA);
            },

            pantalla: function (form) {
                this.$bvModal.show(form.PANTALLA);
            },

            mostrarToast(variant = null) {
                this.MensajeSistema = variant.msg;
                this.$bvToast.toast(this.MensajeSistema, {
                    title: `Alerta de sistema`,
                    variant: variant.toast,
                    solid: true
                })
            },

            cargarRegistros: function () {

                var opcion = confirm("Deseas realizar la carga de registros - con status " + this.selected + " de fecha " + this.FEC_INI + " hasta " + this.FEC_FIN);
                if (opcion == true) {
                    this.show = true;
                    axios.post('@apiServidor' + '/api/PlanFamiliar/cargarRegistrosBO', {
                    ESTADO: this.selected,
                    FEC_INI: this.FEC_INI,  // '02-06-2023', //
                    FEC_FIN: this.FEC_FIN,  // '02-03-2024', //
                    }, configImg).then(response => {
                    if (response.data.length > 0) {
                        this.show = false;
                        this.mostrarToast({ toast: 'success', msg: 'Se carga correctamente todos los registros.' });
                    }
                    }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
                } else { this.mostrarToast({ toast: 'warning', msg: 'Cancelado por el usuario' }); }
            },

            exportExcel: function() {
                lstdocs = [];
                for (const item of this.ListaDocPago) {
                    lstdocs.push({
                        ID: item.ID,
                        DESC_AFILIACION: item.DESC_AFILIACION,
                        TIPO: item.TIPO,
                        DOC_IDEN: item.DOC_IDEN,
                        NOMBRES: item.NOMBRES,
                        APELLIDOS: item.APE_PATERNO + ' ' + item.APE_MATERNO,
                        EDAD: item.EDAD,
                        F_NACIMIENTO: item.FEC_NACIMIENTO,
                        SEXO: item.SEXO,
                        PESO: item.PESO,
                        TALLA: item.TALLA,
                        FUMADOR: item.FUMADOR,
                        FAMILIAR: item.FAMILIAR,
                        CELULAR_1: item.CELULAR,
                        CELULAR_2: item.TELEFONO,
                        CORREO: item.EMAIL,
                        IND_COMUNICACIONELEC: item.IND_COMUNICACIONELEC,
                        IND_POLITICASEGURIDAD: item.IND_POLITICASEGURIDAD,
                        COD_ORIGEN: item.COD_ORIGEN,
                        COD_UBIGEO: item.COD_UBIGEO,
                        DEPARTAMENTO: item.DEPARTAMENTO,
                        PROVINCIA: item.PROVINCIA,
                        DISTRITO: item.DISTRITO,
                        DIRECCION: item.DIRECCION,
                        DETALLE_DJ: item.DETALLE_DJ,
                        DETALLE_DJO: item.DETALLE_DJO,
                        COD_PLAN: item.COD_PLAN,
                        FEC_REGISTRO: item.FEC_REGISTRO,
                        FEC_COTIZACION: item.FEC_MODIFICA,
                        FECHA_AFILIACION: item.FECHA,
                        MONTO: item.MONTO,
                        ESTADO_PAGO: item.ESTADO_PAGO,
                        FECHA_PAGO: item.FECHA_PAGO,
                        CODIGO_PAGO: item.CODIGO_PAGO,
                        NRO_COMPROBANTE: item.NRO_COMPROBANTE,
                        NRO_RUC: item.NRO_RUC,
                        USU_BACKOFFICE: item.USU_BACKOFFICE,
                        FECHA_BACKOFFICE: item.FECHA_BACKOFFICE,
                        ESTADO_BACKOFFICE: item.ESTADO_BACKOFFICE,
                        OBSERVACION: item.OBSERVACION
                    });
                }

                let data = XLSX.utils.json_to_sheet(lstdocs) //this.ListaDocPago)
                const workbook = XLSX.utils.book_new()
                const filename = 'PF';  // + this.FEC_INI ;
                XLSX.utils.book_append_sheet(workbook, data, filename)
                XLSX.writeFile(workbook, `${filename}.xlsx`)
            },

            onFiltered(filteredItems) {
                // Trigger pagination to update the number of buttons/pages due to filtering
                this.totalRows = filteredItems.length;
                this.currentPage = 1;
            },

            buscar: function () {
                this.graficoGeneral = [];
                if (this.NOMBRE.length > 0) {
                    let palabra = this.NOMBRE.toUpperCase();
                    this.ListaDocPago = this.ListaDocPago_.filter(x => {
                        return x.CAMPO_BUSQUEDA.includes(palabra);
                    });
                }
                else {
                    this.ListaDocPago = this.ListaDocPago_;
                }
                this.renderChart();
                this.currentPage = 1;
            },

            listarDocPago: function (item) {         //  alert(JSON.stringify(this.ListaMaestra));
                let estadoDoc = item.ESTADO;
                this.ListaDocPago = []; this.ListaDocPago_ = []; this.graficoGeneral = []; this.totalRows = []; this.canFilas = 0;
                var detalleFiltros = '';
                this.show = true;
                axios.post('@apiServidor' + '/api/PlanFamiliar/ListarClientesPF2', {
                    ID: this.ID_GRUPO,
                    ESTADO: estadoDoc,
                    FEC_INI: this.FEC_INI,  // '02-06-2023', //
                    FEC_FIN: this.FEC_FIN,  // '02-03-2024', //
                }, configImg).then(response => {
                    detalleFiltros = 'FILTROS APLICADOS / ';
                    detalleFiltros = detalleFiltros + ' Estado : ' + estadoDoc + ' / ';
                    this.desFiltros = detalleFiltros;
                    if (response.data.length > 0) {
                        this.ListaDocPago = response.data;
                        this.ListaDocPago_ = response.data;
                        this.renderChart();
                        this.totalRows = this.ListaDocPago.length;
                        this.canFilas = this.totalRows;
                        this.indicador = false;
                    }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            },

            renderChart: function () {    // MODIFICADO
                this.graficoGeneral = [];
                let lista = this.ListaDocPago;
                let Universo = lista; // lista.filter(x => x.USUARIO != '');
                let Torta = []; let counts = {};
                for (var tajada in Universo) {
                    Torta.push(`${Universo[tajada].COD_PLAN}`);   //  alert(JSON.stringify(`${lista[items].ESTADO}`));
                }
                Torta.forEach((el) => {
                    counts[el] = counts[el] ? (counts[el] += 1) : 1;
                });
                this.graficoGeneral = counts;
            },

            listarDocPagoDetalle: function (item) {         //  alert(JSON.stringify(this.ListaMaestra));
                this.show = true;
                //alert(item.ID);
                axios.post('@apiServidor' +'/api/PlanFamiliar/ListarClientesPF_Det2', {
                    ID: item.ID,
                    ESTADO: '',
                    FEC_INI: '',
                    FEC_FIN: '',
                }, configImg).then(response => {
                    this.ListaDocPagoDet = response.data;
                    this.pantalla({ PANTALLA: 'VerDetalle' });
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            }
        }
    })
    app.listarDocPago({ ESTADO: '0' });

</script>





