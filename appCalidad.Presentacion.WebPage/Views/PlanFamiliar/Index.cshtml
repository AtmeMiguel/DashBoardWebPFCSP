@{ string Title = "SEGUIMIENTO";
    ViewBag.Title = Title;
    string apiServidor = System.Configuration.ConfigurationManager.AppSettings["API_SERVIDOR"];
    string webServidor = System.Configuration.ConfigurationManager.AppSettings["SERVIDOR"];
}

<div id="app">
    <div class="containerClaro">
        <br />
        <b-overlay :show="show" rounded="lg">

            <div class="row">
                <div class="col-xs-12 col-sm-12 col-lg-12" v-if="ID == 0">
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="card redondoCardLight   shadow-lg">
                                <div class="card-body">
                                    <div class="row colorSanPablo">
                                        <div class="col-sm-8 col-md-8 col-lg-8">
                                            <div class="card-title  text-left text-white">
                                                <br /><h3>Gráfico de avance</h3>
                                            </div>
                                        </div>
                                        <div class="col-sm-4 col-md-4 col-lg-4">
                                            <div class="card-title  text-right text-white">
                                                <br /><span> <b-avatar button icon="bar-chart" size="3rem" variant="light"></b-avatar></span>
                                            </div>
                                        </div>
                                    </div>

                                    <h4 class="text-center">(semanal)</h4>
                                    <br />
                                    <template>
                                        <bar-chart :data="graficoAvance"></bar-chart>
                                    </template>
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 col-lg-9">
                            <div class="card redondoCardLight   shadow-lg">
                                <div class="card-body">

                                    <div class="row colorSanPablo">
                                        <div class="col-sm-8 col-md-8 col-lg-8">
                                            <div class="card-title  text-left text-white">
                                                <br /><h3>
                                                    BACKOFFICE FUERZA DE VENTAS
                                                </h3>
                                            </div>
                                        </div>
                                        <div class="col-sm-4 col-md-4 col-lg-4">
                                            <div class="card-title  text-right text-white">
                                                <br /><span> <b-avatar button icon="alarm" size="3rem" variant="light"></b-avatar></span><span>&nbsp;&nbsp;&nbsp;Tiempo: {{min}} : {{sec}}</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 col-lg-6">
                                            <br /><br /><br /><br />
                                            <template v-for="item in ListaGeneral">
                                                <div class="row">
                                                    <div class="col-lg-6 text-center">

                                                        <b-avatar button icon="tags" v-on:click="pantalla({PANTALLA:'listaPendientes'})" variant="danger" title="Pendiente" class="align-center" size="4em"></b-avatar>
                                                        <br />Pendiente<br /><h4 class="align-center">{{item.PENDIENTE}}</h4>
                                                    </div>
                                                    <div class="col-lg-6 text-center">
                                                        <b-avatar button icon="tags" v-on:click="pantalla({PANTALLA:'graficoEstudios'})" variant="warning" title="Proceso" class="align-center" size="4em"></b-avatar>
                                                        <br />En proceso
                                                        <br />
                                                        <h4 class="align-center">{{item.PROCESO}}</h4>
                                                    </div>
                                                </div>
                                                <hr />
                                                <br />
                                                <br />
                                                <h4 class="text-center">Detalle de casos por Grupo</h4>
                                                <br />
                                                <br />

                                                <div class="row" v-for="e in item.ESTUDIOS">
                                                    <div class="col-lg-12 text-left">
                                                        <span><b-avatar button icon="diagram-3" variant="info" title="Pendiente" class="align-center" size="2em"></b-avatar>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="align-center">{{e.ESTUDIO}} - {{e.GRAFICA}}</span></span><br />
                                                    </div>
                                                </div>
                                            </template>
                                        </div>
                                        <div class="col-sm-6 col-md-6 col-lg-6">
                                            <br /><br /><br /><br /><br /><br />
                                            <h2>Bienvenido</h2>
                                            <br />
                                            <p>Tus talentos y habilidades irán mejorando con el tiempo, pero para eso has de empezar</p><br /><br />

                                            <div class="col-sm-6 col-md-10 col-lg-10 text-right">
                                                <template v-for="item in ListaGeneral">
                                                    <templat v-if="item.PENDIENTE > 0 || item.PROCESO > 0">
                                                        <b-button v-on:click="iniciar( { ID: 0, ID_SOURCE: 0, ID_GRUPO: 0 } )" variant="outline-info" pill><b-avatar variant="outline-info" icon="power" size="2rem"></b-avatar>Iniciar</b-button>
                                                </template>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xs-12 col-sm-12 col-lg-12" v-else="ID == 0">
                    <div class="row">
                        <div class="col-xs-12 col-lg-9">
                            <div class="card redondoCardLight shadow-lg">
                                <div class="card-body reDimBox">
                                    <div class="row colorSanPablo">
                                        <div class="col-sm-8 col-md-8 col-lg-8">
                                            <div class="card-title  text-left text-white">
                                                <br /><h3> Datos del contratante   </h3>
                                            </div>
                                        </div>
                                        <div class="col-sm-4 col-md-4 col-lg-4">
                                            <div class="card-title  text-right text-white">
                                                <br /><span> <b-avatar button icon="alarm" size="3rem" variant="light"></b-avatar></span><span>&nbsp;&nbsp;&nbsp;Tiempo: {{min}} : {{sec}}</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-xs-12 col-md-12 col-lg-12 ">
                                            <br />
                                            <h3 class="texto-morado"></h3>
                                        </div>
                                    </div>
                                    <template v-for="i in ListaAfiliados">
                                        <div class="row">
                                            <div class="col-xs-12 col-md-6 col-lg-3 cajaTexto">
                                                <span class="text-black-50 text-sm-right">
                                                    Tipo document {{i.TIP_DOC_IDEN}}
                                                </span> <br />
                                                <b-form-input v-model="i.DOC_IDEN" class="cajaTexto2" type="text" placeholder="Número documento"></b-form-input>
                                            </div>
                                            <div class="col-xs-12 col-md-6 col-lg-3 cajaTexto">
                                                <span class="text-black-50 text-sm-right">Nombres completos</span> <br />
                                                <b-form-input v-model="i.NOMBRES" class="cajaTexto2" type="text" placeholder="Nombres"></b-form-input>
                                            </div>
                                            <div class="col-xs-12 col-md-6 col-lg-3 cajaTexto">
                                                <span class="text-black-50 text-sm-right">Apellidos</span><br />
                                                <b-form-input v-model="i.APE_PATERNO" class="cajaTexto2" type="text" placeholder="Apellidos"></b-form-input>
                                            </div>

                                            <div class="col-xs-12 col-md-3 col-lg-3 cajaTexto">
                                                <span class="text-black-50 text-sm-right">Fecha Nac.</span> <br />
                                                <b-form-input v-model="i.FEC_NACIMIENTO" class="cajaTexto2" type="tel" placeholder="Fecha nacimiento" maxlength="3" required=""></b-form-input>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-xs-12 col-md-3 col-lg-3 cajaTexto" v-if="i.ID_CLIENTE==0">
                                                <span class="text-black-50 text-sm-right">Celular</span> <br />
                                                <b-form-input v-model="i.NUM_CELULAR2" class="cajaTexto2" type="tel" placeholder="Celular" maxlength="9" required=""></b-form-input>
                                            </div>
                                            <div class="col-xs-12 col-md-3 col-lg-3 cajaTexto" v-if="i.ID_CLIENTE==0">
                                                <span class="text-black-50 text-sm-right">Correo electrónico</span><br />
                                                <b-form-input v-model="i.EMAIL" class="cajaTexto2" type="text" placeholder="Apellidos"></b-form-input>
                                            </div>
                                            <div class="col-xs-12 col-md-3 col-lg-3 cajaTexto" v-if="i.ID_CLIENTE==0">
                                                <span class="text-black-50 text-sm-right">Sexo</span><br />
                                                <b-form-input v-model="i.SEXO" class="cajaTexto2" type="text" placeholder="Sexo"></b-form-input>
                                            </div>
                                            <div class="col-xs-12 col-md-1 col-lg-1 cajaTexto">
                                                <span class="text-black-50 text-sm-right">Peso</span> <br />
                                                <b-form-input v-model="i.PESO" class="cajaTexto2" type="tel" placeholder="Peso" oninput="this.value = this.value.replace(/[^0-9]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1');" maxlength="3" required=""></b-form-input>
                                            </div>
                                            <div class="col-xs-12 col-md-1 col-lg-1 cajaTexto">
                                                <span class="text-black-50 text-sm-right">Talla</span> <br />
                                                <b-form-input v-model="i.TALLA" class="cajaTexto2" type="tel" placeholder="Talla" oninput="this.value = this.value.replace(/[^0-9]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1');" maxlength="3" required=""></b-form-input>
                                            </div>
                                            <div class="col-xs-12 col-md-1 col-lg-1 cajaTexto">
                                                <span class="text-black-50 text-sm-right">Fum.</span> <br />
                                                <b-form-input v-model="i.FUMADOR" class="cajaTexto2" type="tel" placeholder="¿Fumador?" oninput="this.value = this.value.replace(/[^0-9]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1');" maxlength="3" required=""></b-form-input>
                                            </div>
                                        </div>

                                        <div class="row" v-if="i.ID_CLIENTE==0">
                                            <div class="col-xs-12 col-md-6 col-lg-3 cajaTexto">
                                                <span class="text-black-50 text-sm-right">Departamento</span><br />
                                                <b-form-input v-model="i.DEPARTAMENTO" class="cajaTexto2" type="text" placeholder="Departamento"></b-form-input>
                                            </div>
                                            <div class="col-xs-12 col-md-6 col-lg-3 cajaTexto">
                                                <span class="text-black-50 text-sm-right">Provincia</span><br />
                                                <b-form-input v-model="i.PROVINCIA" class="cajaTexto2" type="text" placeholder="Provincia"></b-form-input>
                                            </div>
                                            <div class="col-xs-12 col-md-6 col-lg-3 cajaTexto">
                                                <span class="text-black-50 text-sm-right">Distrito</span><br />
                                                <b-form-input v-model="i.DISTRITO" class="cajaTexto2" type="text" placeholder="Distrito"></b-form-input>
                                            </div>
                                            <div class="col-xs-12 col-md-6 col-lg-3 cajaTexto">
                                                <span class="text-black-50 text-sm-right">Dirección</span><br />
                                                <b-form-input v-model="i.DIRECCION" class="cajaTexto2" type="text" placeholder="Dirección"></b-form-input>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-xs-12 col-md-12 col-lg-6 cajaTexto">
                                                <span class="text-black-50 text-sm-right">Declaración jurada</span><br />
                                                @*<b-form-input v-model="i.DETALLE_DJ" class="cajaTexto2" type="text" placeholder="Departamento"></b-form-input>*@
                                                <b-form-textarea id="textarea" class="cajaTexto2" type="text"
                                                                 v-model="i.DETALLE_DJ" placeholder="No lleno declaración" rows="3" max-rows="6"></b-form-textarea>
                                            </div>
                                            <div class="col-xs-12 col-md-12 col-lg-6 cajaTexto">
                                                <span class="text-black-50 text-sm-right">Declaración oncológica</span><br />
                                                @*<b-form-input v-model="i.DETALLE_DJO" class="cajaTexto2" type="text" placeholder="No lleno declaración"></b-form-input>*@
                                                <b-form-textarea id="textarea" class="cajaTexto2" type="text"
                                                                 v-model="i.DETALLE_DJO" placeholder="No lleno declaración" rows="3" max-rows="6"></b-form-textarea>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-xs-12 col-md-12 col-lg-12 ">
                                                <hr style="height: 1px; border-width: 0; color: darkorange; background-color: darkorange">
                                            </div>
                                        </div>
                                    </template>


                                    <br />
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="card redondoCardLight  shadow-lg">
                                <div class="card-body reDimBox">
                                    <div class="row colorSanPablo">
                                        <div class="col-sm-12 col-md-6 col-lg-6">
                                            <div class="card-title  text-left text-white">
                                                <br /><h3>N° {{ID_SOURCE}}</h3>
                                            </div>
                                        </div>
                                        <div class="col-sm-4 col-md-4 col-lg-4">
                                            <div class="card-title  text-right text-white">
                                                <br /><span> <b-avatar button icon="diagram-2" size="3rem" variant="light"></b-avatar></span>
                                            </div>
                                        </div>
                                    </div><br />

                                    <div class="row" v-if="ListaPlanes.length>0">
                                        <div class="col-sm-12 col-md-12">
                                            <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                                                <b-row>
                                                    <b-table :items="ListaPlanes"
                                                             :fields="ColumnasPlanes"
                                                             stacked="md"
                                                             head-variant="light"
                                                             show-empty
                                                             sticky-header
                                                             small>
                                                        <template #cell(name)="row">
                                                            {{ row.value.first }} {{ row.value.last }}
                                                        </template>
                                                    </b-table>
                                                </b-row>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row" v-if="ListaPlanes.length<1">
                                        <div class="col-xs-12 col-md-6 col-lg-6 cajaTexto">
                                            <span class="text-black-50 text-sm-right">Fecha Registro</span><br />
                                            <b-form-input v-model="FEC_REGISTRO" class="cajaTexto2" type="text"></b-form-input>
                                        </div>
                                        <div class="col-xs-12 col-md-6 col-lg-6 cajaTexto">
                                            <span class="text-black-50 text-sm-right">Plan</span><br />
                                            <b-form-input v-model="COD_PLAN" class="cajaTexto2" type="text"></b-form-input>
                                        </div>
                                    </div>
                                    <br />
                                    <div class="row text-center">
                                        <div class="col-xs-12 col-md-6" style="cursor: pointer;">
                                            <CENTER>
                                                <div class="cajaNaranjaDelgado colorSanPabloOK" style=" margin: 1px;" v-if="IND_TIPO_AFILIACION=='1'">
                                                    <img src="~/Recursos/img/A.png" id="logo-cotizador" style="display: block;" width="60px" alt="San Pablo">
                                                    <span>&nbsp;&nbsp;&nbsp;Solo a mí</span>
                                                </div>
                                                <div class="cajaNaranjaDelgado colorSanPabloOK" style=" margin: 1px;" v-if="IND_TIPO_AFILIACION=='2'">
                                                    <img src="~/Recursos/img/B.png" id="logo-cotizador" style="display: block;" width="60px" alt="San Pablo">
                                                    <span>&nbsp;&nbsp;&nbsp;A mí y otra persona</span>
                                                </div>
                                                <div class="cajaNaranjaDelgado colorSanPabloOK" style=" margin: 1px;" v-if="IND_TIPO_AFILIACION=='3'">
                                                    <img src="~/Recursos/img/C.png" id="logo-cotizador" style="display: block;" width="60px" alt="San Pablo">
                                                    <span>&nbsp;&nbsp;&nbsp;A otra persona</span>
                                                </div>
                                            </CENTER>
                                        </div>
                                        <div class="col-xs-12 col-md-6" style="cursor: pointer;">
                                            <CENTER>
                                                <div class="cajaNaranjaDelgado colorSanPabloOK" style=" margin: 1px;" v-if="FLAT=='1' || FLAT=='2'">
                                                    <div style="height: 60px; font-size:42px;">{{FLAT}}</div>
                                                    <span>&nbsp;&nbsp;&nbsp;Cotización</span>
                                                </div>
                                                <div class="cajaNaranjaDelgado colorSanPabloOK" style=" margin: 1px;" v-if="FLAT=='3' || FLAT=='4'">
                                                    <div style="height: 60px; font-size: 42px; ">{{FLAT}}</div>
                                                    <span>&nbsp;&nbsp;&nbsp;Afiliación</span>
                                                </div>
                                                <div class="cajaNaranjaDelgado colorSanPabloOK" style=" margin: 1px;" v-if="FLAT=='5'">
                                                    <div style="height: 60px; font-size: 42px; ">{{FLAT}}</div>
                                                    <span>&nbsp;&nbsp;&nbsp;Pago</span>
                                                </div>
                                            </CENTER>
                                        </div>
                                    </div><br />
                                    <div class="row">
                                        <div class="col-2 text-right"><span v-if="IND_COMUNICACIONELEC>0" class="colorSanPabloNaranja" style=" width: 15px; height: 15px; border-radius: 50%;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span v-else="IND_COMUNICACIONELEC>0" style="  border-radius: 50%;"></span></div>
                                        <div class="col-10">
                                            <span>Acepto los fines comerciales</span>
                                        </div>
                                        <div class="col-2 text-right"><span v-if="IND_POLITICASEGURIDAD>0" class="colorSanPabloNaranja" style=" width: 15px; height: 15px; border-radius: 50%;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span v-else="IND_POLITICASEGURIDAD>0" style=" border-radius: 50%;"></span></div>
                                        <div class="col-10">
                                            <span>Acepto la Política de Privacidad</span>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-xs-12 col-md-12 col-lg-12 cajaTexto">
                                            <br />
                                            <span class="text-black-50 text-sm-right">Estado<b-badge v-if="ESTADO.length<5" pill variant="danger">!</b-badge></span> <br />
                                            <b-form-select v-model="ESTADO" class="cajaTexto2">
                                                <template #first>
                                                    <b-form-select-option v-model="SELECCIONAR" value="null" disabled>SELECCIONAR</b-form-select-option>
                                                </template>
                                                <b-form-select-option v-for="i in ListaEstado" :key="i.ID" :value="i.TITULO">{{i.TITULO}}</b-form-select-option>
                                            </b-form-select>
                                        </div>
                                        <div class="col-xs-12 col-md-12 col-lg-12 cajaTexto">
                                            <span class="text-black-50 text-sm-right">Observación</span><br />
                                            <b-form-textarea id="textarea" v-model="OBSERVACION" placeholder="llenar Observación ..." rows="4" class="cajaTexto2" max-rows="6"></b-form-textarea>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-xs-12 col-md-12 col-lg-12 text-right">
                                            <b-button-group>
                                                <span class="btn btn-link text-black-50" style="width:70px" title="Detalles" v-if="ListaHistorico.length>0" v-on:click="verDetalle(), pantalla({ PANTALLA:'listaHistorial'})">
                                                    <span class="badge badge-light text-black-50" style="font-size: 11px; height: 11px; margin-top: -30px;  z-index: 10;">Historico {{ListaHistorico.length}}</span>
                                                    <b-avatar title="Archivo" variant="outline-light" icon="bookmarks" size="5rem"></b-avatar>
                                                </span>
                                                <span class="btn btn-link text-black-50" style="width:70px" title="Agendar revisión" v-on:click="pantalla({PANTALLA:'agendar'})">
                                                    <span class="badge badge-light text-black-50" style="font-size: 11px; height: 11px; margin-top: -30px;  z-index: 10;">Agendar</span>
                                                    <b-avatar variant="outline-light" icon="calendar3" size="5rem"></b-avatar>
                                                </span>
                                                <span class="btn btn-link text-black-50" style="width:70px" title="Guardar final" v-on:click="Guardar()">
                                                    <span class="badge badge-light text-black-50" style="font-size: 11px; height: 11px; margin-top: -30px;  z-index: 10;">Guardar</span>
                                                    <b-avatar variant="outline-light" icon="trophy" size="5rem"></b-avatar>
                                                </span>
                                            </b-button-group>
                                            <br /><br />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <br />
                        </div>
                    </div>
                </div>
            </div>
        </b-overlay>
    </div>

    <b-modal id="listaPendientes" size="xl" data-html="true" hide-footer hide-header @@hide="listarGraficoGeneral">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <b-row style=" height: 550px; overflow: scroll; ">
                        <b-table :items="ListaPendiente"
                                 :fields="Columnas"
                                 stacked="md"
                                 head-variant="light"
                                 show-empty
                                 sticky-header
                                 small>
                            <template #cell(name)="row">
                                {{ row.value.first }} {{ row.value.last }}
                            </template>

                            <template #cell(ID)="row">
                                <b-avatar v-on:click="darPrioridad(row.item, row.index, $event.target)" title="dar prioridad" button icon="award" size="2rem" variant="light" class="align-center btn-outline-info"></b-avatar>
                            </template>
                        </b-table>
                    </b-row>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="graficoEstudios" size="xl" data-html="true" hide-footer hide-header @@hide="listarGraficoGeneral">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <b-row style=" height: 550px; overflow: scroll; ">
                        <b-table :items="ListaProceso"
                                 :fields="Columnas"
                                 stacked="md"
                                 head-variant="light"
                                 show-empty
                                 sticky-header
                                 small>
                            <template #cell(name)="row">
                                {{ row.value.first }} {{ row.value.last }}
                            </template>

                            <template #cell(ID)="row">
                                <b-avatar v-on:click="darPrioridad(row.item, row.index, $event.target)" title="Dar prioridad" button icon="award" size="2rem" variant="light" class="align-center btn-outline-warning"></b-avatar>
                                <b-avatar v-if="row.item.ACCIONES!='GRUPO'" v-on:click="retirarPrioridad(row.item, row.index, $event.target)" title="No lo voy a atender" button icon="person-x" size="2rem" variant="light" class="align-center btn-outline-danger"></b-avatar>
                            </template>
                            <template #cell(ACCIONES)="row">

                                <b-badge v-if="row.item.ACCIONES =='PROCESO'" pill variant="warning">{{row.item.ACCIONES}}</b-badge>
                                <b-badge v-if="row.item.ACCIONES =='AGENDADO'" pill variant="info">{{row.item.ACCIONES}}</b-badge>
                                <b-badge v-if="row.item.ACCIONES =='GRUPO'" pill variant="dark">{{row.item.ACCIONES}}</b-badge>
                            </template>
                        </b-table>
                    </b-row>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="agendar" size="md" data-html="true" hide-footer hide-header>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <div class="card-header colorSanPablo" style="float:right; font-size: 18px; height: 40px; margin-top: 0px;  z-index: 10;">
                        <div class="card-title text-center text-white">
                            <strong class="text-center">AGENDAR REGISTRO</strong>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-text">

                            <b-row>
                                <b-col cols="12" class="mb-3"></b-col>
                                <p>Value: <b>'{{ value }}'  '{{ hora }}'</b></p>
                            </b-row>

                            <b-row>
                                <b-col cols="8">
                                    <b-calendar v-model="value" :min="minH" :max="maxH" locale="es" :state="false" class="mb-2"></b-calendar>
                                </b-col>
                                <b-col cols="4">
                                    <b-form-timepicker v-model="hora"></b-form-timepicker>

                                    <br /><br /><br />
                                    <hr />
                                    <br /><br /><br /><br /><br />
                                    <div class="text-center">
                                        <b-avatar button icon="briefcase" v-on:click="GuardarAgendado()" variant="light" title="Agendar revisión" class="align-center" size="4em"></b-avatar><br /><h4 class="align-center">Guardar</h4>

                                    </div>
                                </b-col>

                            </b-row>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </b-modal>
    <b-modal id="listaHistorial" size="lg" data-html="true" hide-footer hide-header>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="card redondoCardLight  cajaGrisClaroDelgado ">
                    <b-row>
                        <b-table :items="ListaHistorico"
                                 :fields="ColumnasHistorial"
                                 stacked="md"
                                 head-variant="light"
                                 show-empty
                                 sticky-header
                                 small>
                            <template #cell(name)="row">
                                {{ row.value.first }} {{ row.value.last }}
                            </template>
                        </b-table>
                    </b-row>
                </div>
            </div>
        </div>
    </b-modal>

    <b-modal id="ImageCarta" size="xl" data-html="true" hide-footer hide-header @@hide="">
        <div class="col-xs-12">
            <b-embed type="iframe"
                     aspect="16by9"
                     v-bind:src="SITE"
                     allowfullscreen></b-embed>
        </div>
    </b-modal>
</div>
<script>

    const configImg = {
            headers: { Authorization: `Bearer ${'@Session["Token"].ToString()'}` }
        };

    const now = new Date()
    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate())
    // 15th two months prior
    const minDate = new Date(today)
    minDate.setDate(minDate.getDate())
    //minDate.setDate(15)
    // 15th in two months
    const maxDate = new Date(today)
    maxDate.setMonth(maxDate.getMonth() + 1)
    //maxDate.setDate(15)
    const maxDate15 = new Date(today)
    maxDate15.setDate(maxDate15.getDate() + 20)


    var app = new Vue({
        el: '#app',
        data: {
            ID_USUARIO: '@User.Identity.Name',
            SERVER_URL: sessionStorage.getItem('SERVER_URL'),
            SERVER_API: '@apiServidor',

            ID_SEDE: '@Session["ID_SEDE"].ToString()',
            SEDE: '@Session["SEDE"].ToString()',
            ROL: '@Session["ROL"].ToString()',
            USUARIO: '@Session["USUARIO"].ToString()',
            ID_GRUPO: sessionStorage.getItem('IMAGE'),
            GRUPO: '',
            GRUPO_COBERTURA: '',
            URL: '@webServidor',
            PLANTILLA: '',
            ID: 0,
            ID_FILE: 0,
            ID_SOURCE: 0,
            TXT_OBSERVACION: '',
            SELECCIONAR: 'SELECCIONAR',
            TEXTO_BUSQUEDA: '',
            SEDE: '',

            IND_COMUNICACIONELEC: '', IND_POLITICASEGURIDAD: '', FEC_REGISTRO: '',FLAT: '', COD_PLAN: '',  IND_TIPO_AFILIACION: '',
            NRO_CELULAR: 0, NRO_DOCUMENTO: '', CORREO: '',
            OBSERVACION: '',
            ESTADO: 'SELECCIONAR',
            SUB_ESTADO: 'SELECCIONAR',
            CAMPOS: {},
            show: false,
            value: [],
            currentTime: 1,
            min: 0,
            max: minDate,
            sec: 0,
            CONTAR: false,
            SITE: '',
            context: '',
            value: '',
            hora: '09:00',
            minH: minDate,
            maxH: maxDate,
            INC: 0,
            tabIndex: 1,
            graficoAvance: [],
            ListaGruposxUsuario: [],
            ListaItem: [],
            ListaSedes: [],
            ListaGeneral: [],
            ListaEstado: [],
            ListaPendiente: [],
            ListaProceso: [],
            ListaAfiliados: [],
            ListaHistorico: [],
            ListaPlanes: [],
            Columnas: ['ID', 'TITULO', 'ACCIONES', 'FECHA'],
            ColumnasHistorial: ['ID', 'TITULO', 'USUARIO', 'FECHA', { key: 'PLANTILLA', label: 'OBSERVACIÓN' }],
            ColumnasPlanes: [ { key: 'TITULO', label: 'PLAN ELEGIDO' }, 'RESULTADO', 'FECHA'],
            dismissSecs: 3600,
            dismissCountDown: 0,
        },
        computed: {
            availableOptions() {
                return this.options.filter(opt => this.value.indexOf(opt) === -1)
            }
        },
        methods: {
            mostrarToast(variant = null) {
                this.$bvToast.toast(variant.msg, {
                    title: `Alerta de sistema`,
                    variant: variant.toast,
                    solid: true
                })
            },
            countDownChanged(dismissCountDown) {
                this.dismissCountDown = dismissCountDown
            },
            showAlert() {
                this.dismissCountDown = this.dismissSecs
            },
            pantalla: function (item) {
                this.$bvModal.show(item.PANTALLA);
            },
            updateCurrentTime() {
                if (this.currentTime > 0 && this.currentTime < 3600000 && this.CONTAR == true) {
                    setTimeout(() => {
                        this.currentTime += 1
                        this.min = Math.trunc((this.currentTime) / 60) % 60;
                        this.min = this.min > 9 ? this.min : '0' + this.min;
                        this.sec = Math.trunc((this.currentTime)) % 60;
                        this.sec = this.sec > 9 ? this.sec : '0' + this.sec;
                        this.updateCurrentTime()
                    }, 1000)
                }
            },

            pantallaExterna: function (item) {
                this.SITE = './ImagenCarta/?idSource=' + item.ID + '&idUsuario=' + this.ID_USUARIO;
                this.$bvModal.show('ImageCarta');
            },

            validaCampos(item) {
                /*switch (item) {
                    case 1: {
                        this.TEXTO_BUSQUEDA = this.TEXTO_BUSQUEDA.toUpperCase();
                        break;
                    }
                    case 2: {
                        this.stateLimiteCG = false;
                        this.stateDeducible = false;
                        this.stateLimiteCG = this.LIMITE_CG.length < 2 ? false : true;
                        this.stateDeducible = this.DEDUCIBLE.length < 2 ? false : true;
                        break;
                    }
                    case 3: {
                        this.stateArea = false;
                        this.statePlanTrabajo = false;
                        this.stateMotivo = false;

                        this.stateArea = this.AREA != 'SELECCIONAR' ? true : false;
                        this.statePlanTrabajo = this.PLAN_TRABAJO != 'SELECCIONAR' ? true : false;
                        this.stateMotivo = this.MOTIVO != 'SELECCIONAR' ? true : false;
                        break;
                    }

                    case 4: {
                        // this.stateApeMaterno = this.APE_MATERNO.length < 2 ? false : true; this.APE_MATERNO = this.APE_MATERNO.toUpperCase(); break;
                        if (/^[a-zA-ZÁÉÍÓÚáéíóúñÑ ]+$/.test(this.APE_MATERNO)) {

                            if (this.APE_MATERNO != null) {
                                if (this.APE_MATERNO.trim().length < 3) {

                                    this.stateApeMaterno = false;
                                } else {
                                    this.APE_MATERNO = this.APE_MATERNO.toUpperCase();
                                    this.stateApeMaterno = true;
                                }
                            }
                        } else {
                            //this.APE_MATERNO = '';
                            this.stateApeMaterno = false;
                        }
                        break;
                    }
                    case 5: {
                        this.MEDICO = this.MEDICO.toUpperCase();
                        this.DIAGNOSTICO = this.DIAGNOSTICO.toUpperCase();
                        this.PROCEDIMIENTO = this.PROCEDIMIENTO.toUpperCase();
                        break;
                    }

                    case 6: {
                        this.stateFecHospital = false;
                        this.stateFecSolicitud = false;
                        this.stateFecHospital = this.FEC_HOSPITAL != null ? true : false;
                        this.stateFecSolicitud = this.FEC_SOLICITUD != null ? true : false;
                        break;
                    }
                    case 7: {
                        this.CIE = this.CIE.toUpperCase();
                        break;
                    }


                }*/
            },

            iniciar: async function () {
                this.show = true;
                await axios.post('@apiServidor' + '/api/Grupo/IniciarQueuexGrupoSede', {
                    ID: 0,
                    ID_SOURCE: 0,
                    ID_GRUPO: 20,
                    ID_SEDE: this.ID_SEDE,
                    ID_USUARIO: this.ID_USUARIO
                }, configImg).then(response => {
                    if (response.data.ID > 0) {
                        if (this.CONTAR == false) { this.CONTAR = true; this.updateCurrentTime(); }
                        this.PLANTILLA = response.data.PLANTILLA;
                        this.ID = response.data.ID;
                        this.ID_SOURCE = response.data.ID_SOURCE;
                        this.ID_GRUPO = response.data.ID_GRUPO;
                        this.cargarRegistro();
                        this.verDetalle();
                    } 
                }).catch(e => {
                });
            },

            cargarRegistro:async function () {
                 await axios.post('@apiServidor' + '/api/PlanFamiliar/ListarCarta', {
                    ID:         this.ID_SOURCE,
                    ID_USUARIO: this.ID_USUARIO,
                    USUARIO:    this.USUARIO,
                    ID_SEDE:    this.ID_SEDE,
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        this.verPlaneElegido();
                        this.ListaAfiliados = response.data;
                        this.show = false;

                        let Titular = this.ListaAfiliados.filter(x => x.ID_CLIENTE == 0);
                        //alert(JSON.stringify(Titular));
                        for (i in Titular) {
                            this.FLAT = Titular[i].FLAT;
                            this.IND_TIPO_AFILIACION = Titular[i].IND_TIPO_AFILIACION;

                            this.ESTADO = 'SELECCIONAR'; // (Titular[i].ESTADO.length > 5 ) ? Titular[i].ESTADO : 'SELECCIONAR';
                            this.OBSERVACION = Titular[i].OBSERVACION;
                            this.IND_COMUNICACIONELEC = Titular[i].IND_COMUNICACIONELEC;
                            this.IND_POLITICASEGURIDAD = Titular[i].IND_POLITICASEGURIDAD;
                            this.FEC_REGISTRO = Titular[i].FEC_REGISTRO;
                            this.COD_PLAN = Titular[i].COD_PLAN;
                            this.NRO_CELULAR = Titular[i].NUM_CELULAR;
                            this.NRO_DOCUMENTO = Titular[i].NUM_DOCUMENTO;
                            this.CORREO = Titular[i].EMAIL;
                        }
                    } else {
                        document.location.href = '../PlanFamiliar/Index';
                    }
                }).catch(e => {
                    alert('Ocurrio un error' + e);
                });
            },

            verPlaneElegido: async function () {
                await axios.post('@apiServidor' + '/api/PlanFamiliar/ListarBoPlanesElegidos', {
                    ID: this.ID_SOURCE,
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        this.ListaPlanes = response.data;        //alert(JSON.stringify(lista));
                    }
                }).catch(e => { });
            },

            Guardar: function () {
                let msg = 'Verificar los siguientes campos: ';
                // msg = this.DIAGNOSTICO == '' ? msg + " Diagnostico" : msg;
                // msg = this.CIE == '' ? msg + " CIE 10" : msg;
                // msg = this.LIM_CARTA_APROBADA == '' ? msg + " Límite de carta aprobada" : msg;
                // msg = Number(this.LIM_CARTA_APROBADA) < 9 ? msg + " Límite de carta de garantía" : msg;
                // msg = this.listaCoberturasAgregadas.length == 0 ? msg + " Agregar cobertura" : msg;
                //
                msg = this.ESTADO == 'SELECCIONAR' ? msg + " Estado" : msg;
                // if (this.ListaSubEstado.length > 1) {
                //     msg = this.SUB_ESTADO == 'SELECCIONAR' ? msg + " Sub Estado" : msg;
                // }
                // let calculo = this.BENECICIO_MAXIMO>0 ? (parseFloat(this.BENECICIO_MAXIMO) - parseFloat(this.SINIESTRO_BI) - parseFloat(this.LIM_CARTA_APROBADA)).toFixed(2) : 1;
                //msg = calculo > 0 ? msg : msg + 'Saldo disponible superado, verificar límite de carta aprobado';
                     if (msg.length > 34) {
                         this.mostrarToast({ toast: 'danger', msg: msg });
                         return 0;
                     } else {
                         this.GuardarProceso({ STATUS: 3 });
                     }
            },

            //MODIFICADO ML
            GuardarAvance: function () {    // MODIFICADO
                let msg = 'Verificar los siguientes campos: ';
                this.ESTADO = 'RECIBIDO';
                //this.SUB_ESTADO = '';
                this.GuardarProceso( { STATUS: 2} );
            },

            GuardarAgendado: function () {    // MODIFICADO
                if (this.hora.length > 2 && this.value != '') {
                    this.show = true;
                    let CAMPOS = '';
                    this.ESTADO = 'AGENDADO';
                    //this.SUB_ESTADO = '';
                    let val = (this.value + ' ' + this.hora.slice(0, 5));
                    this.GuardarProceso({ STATUS: 6, TITULO: val });
                } else { this.mostrarToast({ toast: 'warning', msg: 'Verificar fecha y hora ...' }); }
            },

            //MODIFICADO ML
            GuardarProceso: async function (item) {
                // if (this.ListaSubEstado.length > 1) {
                // } else {
                //     this.SUB_ESTADO = '';
                // }
                this.show = true;
                await axios.post('@apiServidor' + '/api/PlanFamiliar/UPD_Registro', {
                    ID: this.ID_SOURCE,
                    ID_USUARIO: this.ID_USUARIO,
                    USUARIO: this.USUARIO,
                    SEDE: this.SEDE,
                    OBSERVACION: this.OBSERVACION,
                    STATUS: item.STATUS,
                    ESTADO: this.ESTADO,
                    SUB_ESTADO: '', //this.SUB_ESTADO,
                    ID_SEDE: this.ID_SEDE,
                    NRO_CELULAR: this.NRO_CELULAR,
                    NRO_DOCUMENTO: this.NRO_DOCUMENTO,
                    CORREO: this.CORREO

                }, configImg).then(response => {
                    if (response.data.ID > 0) {
                        axios.post('@apiServidor' + '/api/Grupo/MantenimientoQUEUE', {
                            ID: this.ID,
                            ID_SOURCE: this.ID_SOURCE,
                            TITULO: item.TITULO,
                            ID_SEDE: this.ID_SEDE,
                            ID_GRUPO: this.ID_GRUPO,
                            ID_USUARIO: this.ID_USUARIO,
                            P_MENSAJE: item.CAMPOS,
                            TIPO: item.STATUS,
                        }, configImg).then(response => {
                            if (response.data.ID > 0) {
                                document.location.href = '../PlanFamiliar/Index';
                            } else {
                                this.show = false;
                                this.mostrarToast({ toast: 'warning', msg: response.data.RESULTADO });
                            }
                        }).catch(e => {
                        });
                    } else {
                        this.mostrarToast({ toast: 'warning', msg: response.data.RESULTADO });
                        this.show = false;
                    }

                }).catch(e => {
                    this.mostrarToast({ toast: 'warning', msg: 'Ocurrio un error no controlado, verifique que todos los campos fueron ingresados correctamente, verifique que el campo observación no sea muy extenso  ' });
                    this.show = false;
                });
            },

            grafico: function () {
                this.graficoAvance = [];
                axios.post('@apiServidor' + '/api/Usuario/ListarUsuariosxCarga_T', {
                    ID: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        let lista1 = response.data;
                        let columnas = {};
                        for (let tajada1 in lista1) {
                            columnas[`${lista1[tajada1].FECHA}`] = `${lista1[tajada1].ID}`; //  alert(JSON.stringify(`${lista[items].ESTADO}`));
                        }
                        this.graficoAvance = columnas;
                    }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            },

            //MODIFICADO ML
            listarGruposxUsuario: function () {   // MODIFICADO
                //this.show = true;
                axios.post('@apiServidor' + '/api/Grupo/ListarGruposxPrograma', {
                    ID: this.ID_USUARIO,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                }, configImg).then(response => {
                    if (response.data.length > 0) { this.ListaGruposxUsuario = response.data; }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ...' }); });
            },
            //MODIFICADO ML
            listarGraficoGeneral: function () {    // MODIFICADO
                this.ListaGeneral = []; this.graficoGeneral = []; this.graficoAvance2 = []; this.ListaProceso = []; this.ListaPendiente = [];
                axios.post('@apiServidor' + '/api/Grupo/ListarQueuexGrupoSede', {
                    ID: this.ID,
                    ID_GRUPO: 20,
                    ID_USUARIO: this.ID_USUARIO,
                    ID_SEDE: this.ID_SEDE,
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        let lista = response.data;
                        let Pendiente = []; let Proceso = []; let Terminado = []; let Monitores = []; let Estudios = [];
                        Pendiente = lista.filter(x => x.ACCIONES == 'PENDIENTE');
                        Proceso = lista.filter(x => x.ACCIONES == 'PROCESO' || x.ACCIONES == 'AGENDADO' || x.ACCIONES == 'GRUPO');
                        Terminado = lista.filter(x => x.ACCIONES == 'TERMINADO');

                        map = new Map();
                        for (let i of Pendiente) {
                            if (!map.has(i.RESULTADO)) {
                                map.set(i.RESULTADO, true);
                                Estudios.push({ ESTUDIO: i.RESULTADO });
                            }
                        }           //  alert(JSON.stringify(`${lista[items].ESTADO}`));

                        let uno = []; let grupos = { INC: 0 }; let registros = { INC: 0 };    //alert(i.ESTUDIO);
                        for (let i of Estudios) {
                            grupos = {};
                            registros = {};
                            let filas = lista.filter(x => x.RESULTADO == i.ESTUDIO);
                            if (filas.length > 0) {
                                grupos['GRAFICA'] = filas.length; //registros[i.ESTUDIO] = filas.length;
                                grupos['ESTUDIO'] = i.ESTUDIO;
                                uno.push(grupos);
                            }
                        }

                        this.ListaPendiente = Pendiente;
                        this.ListaProceso = Proceso;
                        this.ListaGeneral.push({
                            PENDIENTE: Pendiente.length,
                            PROCESO: Proceso.length,
                            TERMINADO: Terminado.length,
                            TOTAL: lista.length,
                            MONITORES: Monitores.length,
                            ESTUDIOS: uno,
                        });
                    }
                }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ... 2' }); });
            },

            listarItems: function () {
                axios.post('@apiServidor' + '/api/Helpers/ListarItems', {
                    ID_GRUPO: 20,
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        this.ListaItems = response.data;        //alert(JSON.stringify(lista));
                        this.ListaItems_ = response.data;
                        this.ListaEstado = this.ListaItems_.filter(x => x.ID_CONTROL == 1);
                    } else {
                        this.mostrarToast({ toast: 'warning', msg: 'Usuario incorrecto ...' });
                    }
                }).catch(e => { });
            },

            verDetalle: async function () {
                await axios.post('@apiServidor' + '/api/PlanFamiliar/ListarBODetClientes', {
                    ID: this.ID_SOURCE,
                }, configImg).then(response => {
                    if (response.data.length > 0) {
                        this.ListaHistorico = response.data;        //alert(JSON.stringify(lista));
                    }
                }).catch(e => { });
            },

            darPrioridad: function (item) {
                var opcion = confirm("Deseas asignar prioridad al afiliado - " + item.TITULO + " con carta N° " + item.RESULTADO);
                if (opcion == true) {
                    axios.post('@apiServidor' + '/api/Grupo/PrioridadQueuexGrupoSede', {
                        ID: item.ID,
                        ID_USUARIO: this.ID_USUARIO,
                        ID_SEDE: this.ID_SEDE,
                    }, configImg).then(response => {
                        if (response.data.ID > 0) {
                            this.listarGraficoGeneral();
                            ;                            //this.ListaProceso = this.ListaProceso.filter(x => x.ID != item.ID);
                        }
                    }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ... 2' }); });

                } else { this.mostrarToast({ toast: 'warning', msg: 'Cancelado por el usuario' }); }
            },

            retirarPrioridad: function(item) {
                var opcion = confirm("Deseas retirar prioridad al afiliado - " + item.TITULO + " con carta N° " + item.RESULTADO);
                if (opcion == true) {
                    axios.post('@apiServidor' + '/api/Grupo/EliminarPrioridadQueuexGrupoSede', {
                        ID: item.ID,
                        ID_USUARIO: this.ID_USUARIO,
                        ID_SEDE: this.ID_SEDE,
                    }, configImg).then(response => {
                        if (response.data.ID > 0) {
                            this.listarGraficoGeneral();
                        }
                    }).catch(e => { this.mostrarToast({ toast: 'warning', msg: 'Error en la conexión ... 2' }); });
                } else { this.mostrarToast({ toast: 'warning', msg: 'Cancelado por el usuario' }); }
            },

            copiarPortaPapeles: function () {
                let item = '\n';
                    item = ''; let salto = '\r\n'; let index = 0;
                var textarea = document.createElement('textarea');
                textarea.textContent = item; //'coppied text x Mario';
                document.body.appendChild(textarea);

                var selection = document.getSelection();
                var range = document.createRange();
                range.selectNodeContents(textarea);
                selection.removeAllRanges();
                selection.addRange(range);

                console.log(selection.getRangeAt(0).cloneContents());
                console.log('Supported', document.queryCommandSupported('copy'));
                console.log('Enabled', document.queryCommandEnabled('copy'));
                console.log('copy success', document.execCommand('copy'));
                selection.removeAllRanges();
                document.body.removeChild(textarea);
            },
        }
    })


    app.listarItems();
    app.listarGraficoGeneral();
    app.grafico();

</script>
